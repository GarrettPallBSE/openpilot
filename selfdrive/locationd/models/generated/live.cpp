#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6451142613360380251) {
   out_6451142613360380251[0] = 0;
   out_6451142613360380251[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6451142613360380251[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6451142613360380251[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6451142613360380251[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6451142613360380251[5] = -sin(in_vec[1]);
   out_6451142613360380251[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6451142613360380251[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6451142613360380251[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6451142613360380251[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6451142613360380251[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6451142613360380251[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6451142613360380251[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6451142613360380251[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6451142613360380251[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6451142613360380251[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6451142613360380251[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6451142613360380251[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7538598397836621666) {
   out_7538598397836621666[0] = delta_x[0] + nom_x[0];
   out_7538598397836621666[1] = delta_x[1] + nom_x[1];
   out_7538598397836621666[2] = delta_x[2] + nom_x[2];
   out_7538598397836621666[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7538598397836621666[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7538598397836621666[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7538598397836621666[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7538598397836621666[7] = delta_x[6] + nom_x[7];
   out_7538598397836621666[8] = delta_x[7] + nom_x[8];
   out_7538598397836621666[9] = delta_x[8] + nom_x[9];
   out_7538598397836621666[10] = delta_x[9] + nom_x[10];
   out_7538598397836621666[11] = delta_x[10] + nom_x[11];
   out_7538598397836621666[12] = delta_x[11] + nom_x[12];
   out_7538598397836621666[13] = delta_x[12] + nom_x[13];
   out_7538598397836621666[14] = delta_x[13] + nom_x[14];
   out_7538598397836621666[15] = delta_x[14] + nom_x[15];
   out_7538598397836621666[16] = delta_x[15] + nom_x[16];
   out_7538598397836621666[17] = delta_x[16] + nom_x[17];
   out_7538598397836621666[18] = delta_x[17] + nom_x[18];
   out_7538598397836621666[19] = delta_x[18] + nom_x[19];
   out_7538598397836621666[20] = delta_x[19] + nom_x[20];
   out_7538598397836621666[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5762235078521032163) {
   out_5762235078521032163[0] = -nom_x[0] + true_x[0];
   out_5762235078521032163[1] = -nom_x[1] + true_x[1];
   out_5762235078521032163[2] = -nom_x[2] + true_x[2];
   out_5762235078521032163[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5762235078521032163[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5762235078521032163[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5762235078521032163[6] = -nom_x[7] + true_x[7];
   out_5762235078521032163[7] = -nom_x[8] + true_x[8];
   out_5762235078521032163[8] = -nom_x[9] + true_x[9];
   out_5762235078521032163[9] = -nom_x[10] + true_x[10];
   out_5762235078521032163[10] = -nom_x[11] + true_x[11];
   out_5762235078521032163[11] = -nom_x[12] + true_x[12];
   out_5762235078521032163[12] = -nom_x[13] + true_x[13];
   out_5762235078521032163[13] = -nom_x[14] + true_x[14];
   out_5762235078521032163[14] = -nom_x[15] + true_x[15];
   out_5762235078521032163[15] = -nom_x[16] + true_x[16];
   out_5762235078521032163[16] = -nom_x[17] + true_x[17];
   out_5762235078521032163[17] = -nom_x[18] + true_x[18];
   out_5762235078521032163[18] = -nom_x[19] + true_x[19];
   out_5762235078521032163[19] = -nom_x[20] + true_x[20];
   out_5762235078521032163[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2616824879059836125) {
   out_2616824879059836125[0] = 1.0;
   out_2616824879059836125[1] = 0;
   out_2616824879059836125[2] = 0;
   out_2616824879059836125[3] = 0;
   out_2616824879059836125[4] = 0;
   out_2616824879059836125[5] = 0;
   out_2616824879059836125[6] = 0;
   out_2616824879059836125[7] = 0;
   out_2616824879059836125[8] = 0;
   out_2616824879059836125[9] = 0;
   out_2616824879059836125[10] = 0;
   out_2616824879059836125[11] = 0;
   out_2616824879059836125[12] = 0;
   out_2616824879059836125[13] = 0;
   out_2616824879059836125[14] = 0;
   out_2616824879059836125[15] = 0;
   out_2616824879059836125[16] = 0;
   out_2616824879059836125[17] = 0;
   out_2616824879059836125[18] = 0;
   out_2616824879059836125[19] = 0;
   out_2616824879059836125[20] = 0;
   out_2616824879059836125[21] = 0;
   out_2616824879059836125[22] = 1.0;
   out_2616824879059836125[23] = 0;
   out_2616824879059836125[24] = 0;
   out_2616824879059836125[25] = 0;
   out_2616824879059836125[26] = 0;
   out_2616824879059836125[27] = 0;
   out_2616824879059836125[28] = 0;
   out_2616824879059836125[29] = 0;
   out_2616824879059836125[30] = 0;
   out_2616824879059836125[31] = 0;
   out_2616824879059836125[32] = 0;
   out_2616824879059836125[33] = 0;
   out_2616824879059836125[34] = 0;
   out_2616824879059836125[35] = 0;
   out_2616824879059836125[36] = 0;
   out_2616824879059836125[37] = 0;
   out_2616824879059836125[38] = 0;
   out_2616824879059836125[39] = 0;
   out_2616824879059836125[40] = 0;
   out_2616824879059836125[41] = 0;
   out_2616824879059836125[42] = 0;
   out_2616824879059836125[43] = 0;
   out_2616824879059836125[44] = 1.0;
   out_2616824879059836125[45] = 0;
   out_2616824879059836125[46] = 0;
   out_2616824879059836125[47] = 0;
   out_2616824879059836125[48] = 0;
   out_2616824879059836125[49] = 0;
   out_2616824879059836125[50] = 0;
   out_2616824879059836125[51] = 0;
   out_2616824879059836125[52] = 0;
   out_2616824879059836125[53] = 0;
   out_2616824879059836125[54] = 0;
   out_2616824879059836125[55] = 0;
   out_2616824879059836125[56] = 0;
   out_2616824879059836125[57] = 0;
   out_2616824879059836125[58] = 0;
   out_2616824879059836125[59] = 0;
   out_2616824879059836125[60] = 0;
   out_2616824879059836125[61] = 0;
   out_2616824879059836125[62] = 0;
   out_2616824879059836125[63] = 0;
   out_2616824879059836125[64] = 0;
   out_2616824879059836125[65] = 0;
   out_2616824879059836125[66] = -0.5*state[4];
   out_2616824879059836125[67] = -0.5*state[5];
   out_2616824879059836125[68] = -0.5*state[6];
   out_2616824879059836125[69] = 0;
   out_2616824879059836125[70] = 0;
   out_2616824879059836125[71] = 0;
   out_2616824879059836125[72] = 0;
   out_2616824879059836125[73] = 0;
   out_2616824879059836125[74] = 0;
   out_2616824879059836125[75] = 0;
   out_2616824879059836125[76] = 0;
   out_2616824879059836125[77] = 0;
   out_2616824879059836125[78] = 0;
   out_2616824879059836125[79] = 0;
   out_2616824879059836125[80] = 0;
   out_2616824879059836125[81] = 0;
   out_2616824879059836125[82] = 0;
   out_2616824879059836125[83] = 0;
   out_2616824879059836125[84] = 0;
   out_2616824879059836125[85] = 0;
   out_2616824879059836125[86] = 0;
   out_2616824879059836125[87] = 0.5*state[3];
   out_2616824879059836125[88] = 0.5*state[6];
   out_2616824879059836125[89] = -0.5*state[5];
   out_2616824879059836125[90] = 0;
   out_2616824879059836125[91] = 0;
   out_2616824879059836125[92] = 0;
   out_2616824879059836125[93] = 0;
   out_2616824879059836125[94] = 0;
   out_2616824879059836125[95] = 0;
   out_2616824879059836125[96] = 0;
   out_2616824879059836125[97] = 0;
   out_2616824879059836125[98] = 0;
   out_2616824879059836125[99] = 0;
   out_2616824879059836125[100] = 0;
   out_2616824879059836125[101] = 0;
   out_2616824879059836125[102] = 0;
   out_2616824879059836125[103] = 0;
   out_2616824879059836125[104] = 0;
   out_2616824879059836125[105] = 0;
   out_2616824879059836125[106] = 0;
   out_2616824879059836125[107] = 0;
   out_2616824879059836125[108] = -0.5*state[6];
   out_2616824879059836125[109] = 0.5*state[3];
   out_2616824879059836125[110] = 0.5*state[4];
   out_2616824879059836125[111] = 0;
   out_2616824879059836125[112] = 0;
   out_2616824879059836125[113] = 0;
   out_2616824879059836125[114] = 0;
   out_2616824879059836125[115] = 0;
   out_2616824879059836125[116] = 0;
   out_2616824879059836125[117] = 0;
   out_2616824879059836125[118] = 0;
   out_2616824879059836125[119] = 0;
   out_2616824879059836125[120] = 0;
   out_2616824879059836125[121] = 0;
   out_2616824879059836125[122] = 0;
   out_2616824879059836125[123] = 0;
   out_2616824879059836125[124] = 0;
   out_2616824879059836125[125] = 0;
   out_2616824879059836125[126] = 0;
   out_2616824879059836125[127] = 0;
   out_2616824879059836125[128] = 0;
   out_2616824879059836125[129] = 0.5*state[5];
   out_2616824879059836125[130] = -0.5*state[4];
   out_2616824879059836125[131] = 0.5*state[3];
   out_2616824879059836125[132] = 0;
   out_2616824879059836125[133] = 0;
   out_2616824879059836125[134] = 0;
   out_2616824879059836125[135] = 0;
   out_2616824879059836125[136] = 0;
   out_2616824879059836125[137] = 0;
   out_2616824879059836125[138] = 0;
   out_2616824879059836125[139] = 0;
   out_2616824879059836125[140] = 0;
   out_2616824879059836125[141] = 0;
   out_2616824879059836125[142] = 0;
   out_2616824879059836125[143] = 0;
   out_2616824879059836125[144] = 0;
   out_2616824879059836125[145] = 0;
   out_2616824879059836125[146] = 0;
   out_2616824879059836125[147] = 0;
   out_2616824879059836125[148] = 0;
   out_2616824879059836125[149] = 0;
   out_2616824879059836125[150] = 0;
   out_2616824879059836125[151] = 0;
   out_2616824879059836125[152] = 0;
   out_2616824879059836125[153] = 1.0;
   out_2616824879059836125[154] = 0;
   out_2616824879059836125[155] = 0;
   out_2616824879059836125[156] = 0;
   out_2616824879059836125[157] = 0;
   out_2616824879059836125[158] = 0;
   out_2616824879059836125[159] = 0;
   out_2616824879059836125[160] = 0;
   out_2616824879059836125[161] = 0;
   out_2616824879059836125[162] = 0;
   out_2616824879059836125[163] = 0;
   out_2616824879059836125[164] = 0;
   out_2616824879059836125[165] = 0;
   out_2616824879059836125[166] = 0;
   out_2616824879059836125[167] = 0;
   out_2616824879059836125[168] = 0;
   out_2616824879059836125[169] = 0;
   out_2616824879059836125[170] = 0;
   out_2616824879059836125[171] = 0;
   out_2616824879059836125[172] = 0;
   out_2616824879059836125[173] = 0;
   out_2616824879059836125[174] = 0;
   out_2616824879059836125[175] = 1.0;
   out_2616824879059836125[176] = 0;
   out_2616824879059836125[177] = 0;
   out_2616824879059836125[178] = 0;
   out_2616824879059836125[179] = 0;
   out_2616824879059836125[180] = 0;
   out_2616824879059836125[181] = 0;
   out_2616824879059836125[182] = 0;
   out_2616824879059836125[183] = 0;
   out_2616824879059836125[184] = 0;
   out_2616824879059836125[185] = 0;
   out_2616824879059836125[186] = 0;
   out_2616824879059836125[187] = 0;
   out_2616824879059836125[188] = 0;
   out_2616824879059836125[189] = 0;
   out_2616824879059836125[190] = 0;
   out_2616824879059836125[191] = 0;
   out_2616824879059836125[192] = 0;
   out_2616824879059836125[193] = 0;
   out_2616824879059836125[194] = 0;
   out_2616824879059836125[195] = 0;
   out_2616824879059836125[196] = 0;
   out_2616824879059836125[197] = 1.0;
   out_2616824879059836125[198] = 0;
   out_2616824879059836125[199] = 0;
   out_2616824879059836125[200] = 0;
   out_2616824879059836125[201] = 0;
   out_2616824879059836125[202] = 0;
   out_2616824879059836125[203] = 0;
   out_2616824879059836125[204] = 0;
   out_2616824879059836125[205] = 0;
   out_2616824879059836125[206] = 0;
   out_2616824879059836125[207] = 0;
   out_2616824879059836125[208] = 0;
   out_2616824879059836125[209] = 0;
   out_2616824879059836125[210] = 0;
   out_2616824879059836125[211] = 0;
   out_2616824879059836125[212] = 0;
   out_2616824879059836125[213] = 0;
   out_2616824879059836125[214] = 0;
   out_2616824879059836125[215] = 0;
   out_2616824879059836125[216] = 0;
   out_2616824879059836125[217] = 0;
   out_2616824879059836125[218] = 0;
   out_2616824879059836125[219] = 1.0;
   out_2616824879059836125[220] = 0;
   out_2616824879059836125[221] = 0;
   out_2616824879059836125[222] = 0;
   out_2616824879059836125[223] = 0;
   out_2616824879059836125[224] = 0;
   out_2616824879059836125[225] = 0;
   out_2616824879059836125[226] = 0;
   out_2616824879059836125[227] = 0;
   out_2616824879059836125[228] = 0;
   out_2616824879059836125[229] = 0;
   out_2616824879059836125[230] = 0;
   out_2616824879059836125[231] = 0;
   out_2616824879059836125[232] = 0;
   out_2616824879059836125[233] = 0;
   out_2616824879059836125[234] = 0;
   out_2616824879059836125[235] = 0;
   out_2616824879059836125[236] = 0;
   out_2616824879059836125[237] = 0;
   out_2616824879059836125[238] = 0;
   out_2616824879059836125[239] = 0;
   out_2616824879059836125[240] = 0;
   out_2616824879059836125[241] = 1.0;
   out_2616824879059836125[242] = 0;
   out_2616824879059836125[243] = 0;
   out_2616824879059836125[244] = 0;
   out_2616824879059836125[245] = 0;
   out_2616824879059836125[246] = 0;
   out_2616824879059836125[247] = 0;
   out_2616824879059836125[248] = 0;
   out_2616824879059836125[249] = 0;
   out_2616824879059836125[250] = 0;
   out_2616824879059836125[251] = 0;
   out_2616824879059836125[252] = 0;
   out_2616824879059836125[253] = 0;
   out_2616824879059836125[254] = 0;
   out_2616824879059836125[255] = 0;
   out_2616824879059836125[256] = 0;
   out_2616824879059836125[257] = 0;
   out_2616824879059836125[258] = 0;
   out_2616824879059836125[259] = 0;
   out_2616824879059836125[260] = 0;
   out_2616824879059836125[261] = 0;
   out_2616824879059836125[262] = 0;
   out_2616824879059836125[263] = 1.0;
   out_2616824879059836125[264] = 0;
   out_2616824879059836125[265] = 0;
   out_2616824879059836125[266] = 0;
   out_2616824879059836125[267] = 0;
   out_2616824879059836125[268] = 0;
   out_2616824879059836125[269] = 0;
   out_2616824879059836125[270] = 0;
   out_2616824879059836125[271] = 0;
   out_2616824879059836125[272] = 0;
   out_2616824879059836125[273] = 0;
   out_2616824879059836125[274] = 0;
   out_2616824879059836125[275] = 0;
   out_2616824879059836125[276] = 0;
   out_2616824879059836125[277] = 0;
   out_2616824879059836125[278] = 0;
   out_2616824879059836125[279] = 0;
   out_2616824879059836125[280] = 0;
   out_2616824879059836125[281] = 0;
   out_2616824879059836125[282] = 0;
   out_2616824879059836125[283] = 0;
   out_2616824879059836125[284] = 0;
   out_2616824879059836125[285] = 1.0;
   out_2616824879059836125[286] = 0;
   out_2616824879059836125[287] = 0;
   out_2616824879059836125[288] = 0;
   out_2616824879059836125[289] = 0;
   out_2616824879059836125[290] = 0;
   out_2616824879059836125[291] = 0;
   out_2616824879059836125[292] = 0;
   out_2616824879059836125[293] = 0;
   out_2616824879059836125[294] = 0;
   out_2616824879059836125[295] = 0;
   out_2616824879059836125[296] = 0;
   out_2616824879059836125[297] = 0;
   out_2616824879059836125[298] = 0;
   out_2616824879059836125[299] = 0;
   out_2616824879059836125[300] = 0;
   out_2616824879059836125[301] = 0;
   out_2616824879059836125[302] = 0;
   out_2616824879059836125[303] = 0;
   out_2616824879059836125[304] = 0;
   out_2616824879059836125[305] = 0;
   out_2616824879059836125[306] = 0;
   out_2616824879059836125[307] = 1.0;
   out_2616824879059836125[308] = 0;
   out_2616824879059836125[309] = 0;
   out_2616824879059836125[310] = 0;
   out_2616824879059836125[311] = 0;
   out_2616824879059836125[312] = 0;
   out_2616824879059836125[313] = 0;
   out_2616824879059836125[314] = 0;
   out_2616824879059836125[315] = 0;
   out_2616824879059836125[316] = 0;
   out_2616824879059836125[317] = 0;
   out_2616824879059836125[318] = 0;
   out_2616824879059836125[319] = 0;
   out_2616824879059836125[320] = 0;
   out_2616824879059836125[321] = 0;
   out_2616824879059836125[322] = 0;
   out_2616824879059836125[323] = 0;
   out_2616824879059836125[324] = 0;
   out_2616824879059836125[325] = 0;
   out_2616824879059836125[326] = 0;
   out_2616824879059836125[327] = 0;
   out_2616824879059836125[328] = 0;
   out_2616824879059836125[329] = 1.0;
   out_2616824879059836125[330] = 0;
   out_2616824879059836125[331] = 0;
   out_2616824879059836125[332] = 0;
   out_2616824879059836125[333] = 0;
   out_2616824879059836125[334] = 0;
   out_2616824879059836125[335] = 0;
   out_2616824879059836125[336] = 0;
   out_2616824879059836125[337] = 0;
   out_2616824879059836125[338] = 0;
   out_2616824879059836125[339] = 0;
   out_2616824879059836125[340] = 0;
   out_2616824879059836125[341] = 0;
   out_2616824879059836125[342] = 0;
   out_2616824879059836125[343] = 0;
   out_2616824879059836125[344] = 0;
   out_2616824879059836125[345] = 0;
   out_2616824879059836125[346] = 0;
   out_2616824879059836125[347] = 0;
   out_2616824879059836125[348] = 0;
   out_2616824879059836125[349] = 0;
   out_2616824879059836125[350] = 0;
   out_2616824879059836125[351] = 1.0;
   out_2616824879059836125[352] = 0;
   out_2616824879059836125[353] = 0;
   out_2616824879059836125[354] = 0;
   out_2616824879059836125[355] = 0;
   out_2616824879059836125[356] = 0;
   out_2616824879059836125[357] = 0;
   out_2616824879059836125[358] = 0;
   out_2616824879059836125[359] = 0;
   out_2616824879059836125[360] = 0;
   out_2616824879059836125[361] = 0;
   out_2616824879059836125[362] = 0;
   out_2616824879059836125[363] = 0;
   out_2616824879059836125[364] = 0;
   out_2616824879059836125[365] = 0;
   out_2616824879059836125[366] = 0;
   out_2616824879059836125[367] = 0;
   out_2616824879059836125[368] = 0;
   out_2616824879059836125[369] = 0;
   out_2616824879059836125[370] = 0;
   out_2616824879059836125[371] = 0;
   out_2616824879059836125[372] = 0;
   out_2616824879059836125[373] = 1.0;
   out_2616824879059836125[374] = 0;
   out_2616824879059836125[375] = 0;
   out_2616824879059836125[376] = 0;
   out_2616824879059836125[377] = 0;
   out_2616824879059836125[378] = 0;
   out_2616824879059836125[379] = 0;
   out_2616824879059836125[380] = 0;
   out_2616824879059836125[381] = 0;
   out_2616824879059836125[382] = 0;
   out_2616824879059836125[383] = 0;
   out_2616824879059836125[384] = 0;
   out_2616824879059836125[385] = 0;
   out_2616824879059836125[386] = 0;
   out_2616824879059836125[387] = 0;
   out_2616824879059836125[388] = 0;
   out_2616824879059836125[389] = 0;
   out_2616824879059836125[390] = 0;
   out_2616824879059836125[391] = 0;
   out_2616824879059836125[392] = 0;
   out_2616824879059836125[393] = 0;
   out_2616824879059836125[394] = 0;
   out_2616824879059836125[395] = 1.0;
   out_2616824879059836125[396] = 0;
   out_2616824879059836125[397] = 0;
   out_2616824879059836125[398] = 0;
   out_2616824879059836125[399] = 0;
   out_2616824879059836125[400] = 0;
   out_2616824879059836125[401] = 0;
   out_2616824879059836125[402] = 0;
   out_2616824879059836125[403] = 0;
   out_2616824879059836125[404] = 0;
   out_2616824879059836125[405] = 0;
   out_2616824879059836125[406] = 0;
   out_2616824879059836125[407] = 0;
   out_2616824879059836125[408] = 0;
   out_2616824879059836125[409] = 0;
   out_2616824879059836125[410] = 0;
   out_2616824879059836125[411] = 0;
   out_2616824879059836125[412] = 0;
   out_2616824879059836125[413] = 0;
   out_2616824879059836125[414] = 0;
   out_2616824879059836125[415] = 0;
   out_2616824879059836125[416] = 0;
   out_2616824879059836125[417] = 1.0;
   out_2616824879059836125[418] = 0;
   out_2616824879059836125[419] = 0;
   out_2616824879059836125[420] = 0;
   out_2616824879059836125[421] = 0;
   out_2616824879059836125[422] = 0;
   out_2616824879059836125[423] = 0;
   out_2616824879059836125[424] = 0;
   out_2616824879059836125[425] = 0;
   out_2616824879059836125[426] = 0;
   out_2616824879059836125[427] = 0;
   out_2616824879059836125[428] = 0;
   out_2616824879059836125[429] = 0;
   out_2616824879059836125[430] = 0;
   out_2616824879059836125[431] = 0;
   out_2616824879059836125[432] = 0;
   out_2616824879059836125[433] = 0;
   out_2616824879059836125[434] = 0;
   out_2616824879059836125[435] = 0;
   out_2616824879059836125[436] = 0;
   out_2616824879059836125[437] = 0;
   out_2616824879059836125[438] = 0;
   out_2616824879059836125[439] = 1.0;
   out_2616824879059836125[440] = 0;
   out_2616824879059836125[441] = 0;
   out_2616824879059836125[442] = 0;
   out_2616824879059836125[443] = 0;
   out_2616824879059836125[444] = 0;
   out_2616824879059836125[445] = 0;
   out_2616824879059836125[446] = 0;
   out_2616824879059836125[447] = 0;
   out_2616824879059836125[448] = 0;
   out_2616824879059836125[449] = 0;
   out_2616824879059836125[450] = 0;
   out_2616824879059836125[451] = 0;
   out_2616824879059836125[452] = 0;
   out_2616824879059836125[453] = 0;
   out_2616824879059836125[454] = 0;
   out_2616824879059836125[455] = 0;
   out_2616824879059836125[456] = 0;
   out_2616824879059836125[457] = 0;
   out_2616824879059836125[458] = 0;
   out_2616824879059836125[459] = 0;
   out_2616824879059836125[460] = 0;
   out_2616824879059836125[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2519803541471883852) {
   out_2519803541471883852[0] = dt*state[7] + state[0];
   out_2519803541471883852[1] = dt*state[8] + state[1];
   out_2519803541471883852[2] = dt*state[9] + state[2];
   out_2519803541471883852[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2519803541471883852[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2519803541471883852[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2519803541471883852[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2519803541471883852[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2519803541471883852[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2519803541471883852[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2519803541471883852[10] = state[10];
   out_2519803541471883852[11] = state[11];
   out_2519803541471883852[12] = state[12];
   out_2519803541471883852[13] = state[13];
   out_2519803541471883852[14] = state[14];
   out_2519803541471883852[15] = state[15];
   out_2519803541471883852[16] = state[16];
   out_2519803541471883852[17] = state[17];
   out_2519803541471883852[18] = state[18];
   out_2519803541471883852[19] = state[19];
   out_2519803541471883852[20] = state[20];
   out_2519803541471883852[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4993501443679153384) {
   out_4993501443679153384[0] = 1;
   out_4993501443679153384[1] = 0;
   out_4993501443679153384[2] = 0;
   out_4993501443679153384[3] = 0;
   out_4993501443679153384[4] = 0;
   out_4993501443679153384[5] = 0;
   out_4993501443679153384[6] = dt;
   out_4993501443679153384[7] = 0;
   out_4993501443679153384[8] = 0;
   out_4993501443679153384[9] = 0;
   out_4993501443679153384[10] = 0;
   out_4993501443679153384[11] = 0;
   out_4993501443679153384[12] = 0;
   out_4993501443679153384[13] = 0;
   out_4993501443679153384[14] = 0;
   out_4993501443679153384[15] = 0;
   out_4993501443679153384[16] = 0;
   out_4993501443679153384[17] = 0;
   out_4993501443679153384[18] = 0;
   out_4993501443679153384[19] = 0;
   out_4993501443679153384[20] = 0;
   out_4993501443679153384[21] = 0;
   out_4993501443679153384[22] = 1;
   out_4993501443679153384[23] = 0;
   out_4993501443679153384[24] = 0;
   out_4993501443679153384[25] = 0;
   out_4993501443679153384[26] = 0;
   out_4993501443679153384[27] = 0;
   out_4993501443679153384[28] = dt;
   out_4993501443679153384[29] = 0;
   out_4993501443679153384[30] = 0;
   out_4993501443679153384[31] = 0;
   out_4993501443679153384[32] = 0;
   out_4993501443679153384[33] = 0;
   out_4993501443679153384[34] = 0;
   out_4993501443679153384[35] = 0;
   out_4993501443679153384[36] = 0;
   out_4993501443679153384[37] = 0;
   out_4993501443679153384[38] = 0;
   out_4993501443679153384[39] = 0;
   out_4993501443679153384[40] = 0;
   out_4993501443679153384[41] = 0;
   out_4993501443679153384[42] = 0;
   out_4993501443679153384[43] = 0;
   out_4993501443679153384[44] = 1;
   out_4993501443679153384[45] = 0;
   out_4993501443679153384[46] = 0;
   out_4993501443679153384[47] = 0;
   out_4993501443679153384[48] = 0;
   out_4993501443679153384[49] = 0;
   out_4993501443679153384[50] = dt;
   out_4993501443679153384[51] = 0;
   out_4993501443679153384[52] = 0;
   out_4993501443679153384[53] = 0;
   out_4993501443679153384[54] = 0;
   out_4993501443679153384[55] = 0;
   out_4993501443679153384[56] = 0;
   out_4993501443679153384[57] = 0;
   out_4993501443679153384[58] = 0;
   out_4993501443679153384[59] = 0;
   out_4993501443679153384[60] = 0;
   out_4993501443679153384[61] = 0;
   out_4993501443679153384[62] = 0;
   out_4993501443679153384[63] = 0;
   out_4993501443679153384[64] = 0;
   out_4993501443679153384[65] = 0;
   out_4993501443679153384[66] = 1;
   out_4993501443679153384[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4993501443679153384[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4993501443679153384[69] = 0;
   out_4993501443679153384[70] = 0;
   out_4993501443679153384[71] = 0;
   out_4993501443679153384[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4993501443679153384[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4993501443679153384[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4993501443679153384[75] = 0;
   out_4993501443679153384[76] = 0;
   out_4993501443679153384[77] = 0;
   out_4993501443679153384[78] = 0;
   out_4993501443679153384[79] = 0;
   out_4993501443679153384[80] = 0;
   out_4993501443679153384[81] = 0;
   out_4993501443679153384[82] = 0;
   out_4993501443679153384[83] = 0;
   out_4993501443679153384[84] = 0;
   out_4993501443679153384[85] = 0;
   out_4993501443679153384[86] = 0;
   out_4993501443679153384[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4993501443679153384[88] = 1;
   out_4993501443679153384[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4993501443679153384[90] = 0;
   out_4993501443679153384[91] = 0;
   out_4993501443679153384[92] = 0;
   out_4993501443679153384[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4993501443679153384[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4993501443679153384[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4993501443679153384[96] = 0;
   out_4993501443679153384[97] = 0;
   out_4993501443679153384[98] = 0;
   out_4993501443679153384[99] = 0;
   out_4993501443679153384[100] = 0;
   out_4993501443679153384[101] = 0;
   out_4993501443679153384[102] = 0;
   out_4993501443679153384[103] = 0;
   out_4993501443679153384[104] = 0;
   out_4993501443679153384[105] = 0;
   out_4993501443679153384[106] = 0;
   out_4993501443679153384[107] = 0;
   out_4993501443679153384[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4993501443679153384[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4993501443679153384[110] = 1;
   out_4993501443679153384[111] = 0;
   out_4993501443679153384[112] = 0;
   out_4993501443679153384[113] = 0;
   out_4993501443679153384[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4993501443679153384[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4993501443679153384[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4993501443679153384[117] = 0;
   out_4993501443679153384[118] = 0;
   out_4993501443679153384[119] = 0;
   out_4993501443679153384[120] = 0;
   out_4993501443679153384[121] = 0;
   out_4993501443679153384[122] = 0;
   out_4993501443679153384[123] = 0;
   out_4993501443679153384[124] = 0;
   out_4993501443679153384[125] = 0;
   out_4993501443679153384[126] = 0;
   out_4993501443679153384[127] = 0;
   out_4993501443679153384[128] = 0;
   out_4993501443679153384[129] = 0;
   out_4993501443679153384[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4993501443679153384[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4993501443679153384[132] = 1;
   out_4993501443679153384[133] = 0;
   out_4993501443679153384[134] = 0;
   out_4993501443679153384[135] = 0;
   out_4993501443679153384[136] = 0;
   out_4993501443679153384[137] = 0;
   out_4993501443679153384[138] = 0;
   out_4993501443679153384[139] = 0;
   out_4993501443679153384[140] = 0;
   out_4993501443679153384[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4993501443679153384[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4993501443679153384[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4993501443679153384[144] = 0;
   out_4993501443679153384[145] = 0;
   out_4993501443679153384[146] = 0;
   out_4993501443679153384[147] = 0;
   out_4993501443679153384[148] = 0;
   out_4993501443679153384[149] = 0;
   out_4993501443679153384[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4993501443679153384[151] = 0;
   out_4993501443679153384[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4993501443679153384[153] = 0;
   out_4993501443679153384[154] = 1;
   out_4993501443679153384[155] = 0;
   out_4993501443679153384[156] = 0;
   out_4993501443679153384[157] = 0;
   out_4993501443679153384[158] = 0;
   out_4993501443679153384[159] = 0;
   out_4993501443679153384[160] = 0;
   out_4993501443679153384[161] = 0;
   out_4993501443679153384[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4993501443679153384[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4993501443679153384[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4993501443679153384[165] = 0;
   out_4993501443679153384[166] = 0;
   out_4993501443679153384[167] = 0;
   out_4993501443679153384[168] = 0;
   out_4993501443679153384[169] = 0;
   out_4993501443679153384[170] = 0;
   out_4993501443679153384[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4993501443679153384[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4993501443679153384[173] = 0;
   out_4993501443679153384[174] = 0;
   out_4993501443679153384[175] = 0;
   out_4993501443679153384[176] = 1;
   out_4993501443679153384[177] = 0;
   out_4993501443679153384[178] = 0;
   out_4993501443679153384[179] = 0;
   out_4993501443679153384[180] = 0;
   out_4993501443679153384[181] = 0;
   out_4993501443679153384[182] = 0;
   out_4993501443679153384[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4993501443679153384[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4993501443679153384[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4993501443679153384[186] = 0;
   out_4993501443679153384[187] = 0;
   out_4993501443679153384[188] = 0;
   out_4993501443679153384[189] = 0;
   out_4993501443679153384[190] = 0;
   out_4993501443679153384[191] = 0;
   out_4993501443679153384[192] = 0;
   out_4993501443679153384[193] = 0;
   out_4993501443679153384[194] = 0;
   out_4993501443679153384[195] = 0;
   out_4993501443679153384[196] = 0;
   out_4993501443679153384[197] = 0;
   out_4993501443679153384[198] = 1;
   out_4993501443679153384[199] = 0;
   out_4993501443679153384[200] = 0;
   out_4993501443679153384[201] = 0;
   out_4993501443679153384[202] = 0;
   out_4993501443679153384[203] = 0;
   out_4993501443679153384[204] = 0;
   out_4993501443679153384[205] = 0;
   out_4993501443679153384[206] = 0;
   out_4993501443679153384[207] = 0;
   out_4993501443679153384[208] = 0;
   out_4993501443679153384[209] = 0;
   out_4993501443679153384[210] = 0;
   out_4993501443679153384[211] = 0;
   out_4993501443679153384[212] = 0;
   out_4993501443679153384[213] = 0;
   out_4993501443679153384[214] = 0;
   out_4993501443679153384[215] = 0;
   out_4993501443679153384[216] = 0;
   out_4993501443679153384[217] = 0;
   out_4993501443679153384[218] = 0;
   out_4993501443679153384[219] = 0;
   out_4993501443679153384[220] = 1;
   out_4993501443679153384[221] = 0;
   out_4993501443679153384[222] = 0;
   out_4993501443679153384[223] = 0;
   out_4993501443679153384[224] = 0;
   out_4993501443679153384[225] = 0;
   out_4993501443679153384[226] = 0;
   out_4993501443679153384[227] = 0;
   out_4993501443679153384[228] = 0;
   out_4993501443679153384[229] = 0;
   out_4993501443679153384[230] = 0;
   out_4993501443679153384[231] = 0;
   out_4993501443679153384[232] = 0;
   out_4993501443679153384[233] = 0;
   out_4993501443679153384[234] = 0;
   out_4993501443679153384[235] = 0;
   out_4993501443679153384[236] = 0;
   out_4993501443679153384[237] = 0;
   out_4993501443679153384[238] = 0;
   out_4993501443679153384[239] = 0;
   out_4993501443679153384[240] = 0;
   out_4993501443679153384[241] = 0;
   out_4993501443679153384[242] = 1;
   out_4993501443679153384[243] = 0;
   out_4993501443679153384[244] = 0;
   out_4993501443679153384[245] = 0;
   out_4993501443679153384[246] = 0;
   out_4993501443679153384[247] = 0;
   out_4993501443679153384[248] = 0;
   out_4993501443679153384[249] = 0;
   out_4993501443679153384[250] = 0;
   out_4993501443679153384[251] = 0;
   out_4993501443679153384[252] = 0;
   out_4993501443679153384[253] = 0;
   out_4993501443679153384[254] = 0;
   out_4993501443679153384[255] = 0;
   out_4993501443679153384[256] = 0;
   out_4993501443679153384[257] = 0;
   out_4993501443679153384[258] = 0;
   out_4993501443679153384[259] = 0;
   out_4993501443679153384[260] = 0;
   out_4993501443679153384[261] = 0;
   out_4993501443679153384[262] = 0;
   out_4993501443679153384[263] = 0;
   out_4993501443679153384[264] = 1;
   out_4993501443679153384[265] = 0;
   out_4993501443679153384[266] = 0;
   out_4993501443679153384[267] = 0;
   out_4993501443679153384[268] = 0;
   out_4993501443679153384[269] = 0;
   out_4993501443679153384[270] = 0;
   out_4993501443679153384[271] = 0;
   out_4993501443679153384[272] = 0;
   out_4993501443679153384[273] = 0;
   out_4993501443679153384[274] = 0;
   out_4993501443679153384[275] = 0;
   out_4993501443679153384[276] = 0;
   out_4993501443679153384[277] = 0;
   out_4993501443679153384[278] = 0;
   out_4993501443679153384[279] = 0;
   out_4993501443679153384[280] = 0;
   out_4993501443679153384[281] = 0;
   out_4993501443679153384[282] = 0;
   out_4993501443679153384[283] = 0;
   out_4993501443679153384[284] = 0;
   out_4993501443679153384[285] = 0;
   out_4993501443679153384[286] = 1;
   out_4993501443679153384[287] = 0;
   out_4993501443679153384[288] = 0;
   out_4993501443679153384[289] = 0;
   out_4993501443679153384[290] = 0;
   out_4993501443679153384[291] = 0;
   out_4993501443679153384[292] = 0;
   out_4993501443679153384[293] = 0;
   out_4993501443679153384[294] = 0;
   out_4993501443679153384[295] = 0;
   out_4993501443679153384[296] = 0;
   out_4993501443679153384[297] = 0;
   out_4993501443679153384[298] = 0;
   out_4993501443679153384[299] = 0;
   out_4993501443679153384[300] = 0;
   out_4993501443679153384[301] = 0;
   out_4993501443679153384[302] = 0;
   out_4993501443679153384[303] = 0;
   out_4993501443679153384[304] = 0;
   out_4993501443679153384[305] = 0;
   out_4993501443679153384[306] = 0;
   out_4993501443679153384[307] = 0;
   out_4993501443679153384[308] = 1;
   out_4993501443679153384[309] = 0;
   out_4993501443679153384[310] = 0;
   out_4993501443679153384[311] = 0;
   out_4993501443679153384[312] = 0;
   out_4993501443679153384[313] = 0;
   out_4993501443679153384[314] = 0;
   out_4993501443679153384[315] = 0;
   out_4993501443679153384[316] = 0;
   out_4993501443679153384[317] = 0;
   out_4993501443679153384[318] = 0;
   out_4993501443679153384[319] = 0;
   out_4993501443679153384[320] = 0;
   out_4993501443679153384[321] = 0;
   out_4993501443679153384[322] = 0;
   out_4993501443679153384[323] = 0;
   out_4993501443679153384[324] = 0;
   out_4993501443679153384[325] = 0;
   out_4993501443679153384[326] = 0;
   out_4993501443679153384[327] = 0;
   out_4993501443679153384[328] = 0;
   out_4993501443679153384[329] = 0;
   out_4993501443679153384[330] = 1;
   out_4993501443679153384[331] = 0;
   out_4993501443679153384[332] = 0;
   out_4993501443679153384[333] = 0;
   out_4993501443679153384[334] = 0;
   out_4993501443679153384[335] = 0;
   out_4993501443679153384[336] = 0;
   out_4993501443679153384[337] = 0;
   out_4993501443679153384[338] = 0;
   out_4993501443679153384[339] = 0;
   out_4993501443679153384[340] = 0;
   out_4993501443679153384[341] = 0;
   out_4993501443679153384[342] = 0;
   out_4993501443679153384[343] = 0;
   out_4993501443679153384[344] = 0;
   out_4993501443679153384[345] = 0;
   out_4993501443679153384[346] = 0;
   out_4993501443679153384[347] = 0;
   out_4993501443679153384[348] = 0;
   out_4993501443679153384[349] = 0;
   out_4993501443679153384[350] = 0;
   out_4993501443679153384[351] = 0;
   out_4993501443679153384[352] = 1;
   out_4993501443679153384[353] = 0;
   out_4993501443679153384[354] = 0;
   out_4993501443679153384[355] = 0;
   out_4993501443679153384[356] = 0;
   out_4993501443679153384[357] = 0;
   out_4993501443679153384[358] = 0;
   out_4993501443679153384[359] = 0;
   out_4993501443679153384[360] = 0;
   out_4993501443679153384[361] = 0;
   out_4993501443679153384[362] = 0;
   out_4993501443679153384[363] = 0;
   out_4993501443679153384[364] = 0;
   out_4993501443679153384[365] = 0;
   out_4993501443679153384[366] = 0;
   out_4993501443679153384[367] = 0;
   out_4993501443679153384[368] = 0;
   out_4993501443679153384[369] = 0;
   out_4993501443679153384[370] = 0;
   out_4993501443679153384[371] = 0;
   out_4993501443679153384[372] = 0;
   out_4993501443679153384[373] = 0;
   out_4993501443679153384[374] = 1;
   out_4993501443679153384[375] = 0;
   out_4993501443679153384[376] = 0;
   out_4993501443679153384[377] = 0;
   out_4993501443679153384[378] = 0;
   out_4993501443679153384[379] = 0;
   out_4993501443679153384[380] = 0;
   out_4993501443679153384[381] = 0;
   out_4993501443679153384[382] = 0;
   out_4993501443679153384[383] = 0;
   out_4993501443679153384[384] = 0;
   out_4993501443679153384[385] = 0;
   out_4993501443679153384[386] = 0;
   out_4993501443679153384[387] = 0;
   out_4993501443679153384[388] = 0;
   out_4993501443679153384[389] = 0;
   out_4993501443679153384[390] = 0;
   out_4993501443679153384[391] = 0;
   out_4993501443679153384[392] = 0;
   out_4993501443679153384[393] = 0;
   out_4993501443679153384[394] = 0;
   out_4993501443679153384[395] = 0;
   out_4993501443679153384[396] = 1;
   out_4993501443679153384[397] = 0;
   out_4993501443679153384[398] = 0;
   out_4993501443679153384[399] = 0;
   out_4993501443679153384[400] = 0;
   out_4993501443679153384[401] = 0;
   out_4993501443679153384[402] = 0;
   out_4993501443679153384[403] = 0;
   out_4993501443679153384[404] = 0;
   out_4993501443679153384[405] = 0;
   out_4993501443679153384[406] = 0;
   out_4993501443679153384[407] = 0;
   out_4993501443679153384[408] = 0;
   out_4993501443679153384[409] = 0;
   out_4993501443679153384[410] = 0;
   out_4993501443679153384[411] = 0;
   out_4993501443679153384[412] = 0;
   out_4993501443679153384[413] = 0;
   out_4993501443679153384[414] = 0;
   out_4993501443679153384[415] = 0;
   out_4993501443679153384[416] = 0;
   out_4993501443679153384[417] = 0;
   out_4993501443679153384[418] = 1;
   out_4993501443679153384[419] = 0;
   out_4993501443679153384[420] = 0;
   out_4993501443679153384[421] = 0;
   out_4993501443679153384[422] = 0;
   out_4993501443679153384[423] = 0;
   out_4993501443679153384[424] = 0;
   out_4993501443679153384[425] = 0;
   out_4993501443679153384[426] = 0;
   out_4993501443679153384[427] = 0;
   out_4993501443679153384[428] = 0;
   out_4993501443679153384[429] = 0;
   out_4993501443679153384[430] = 0;
   out_4993501443679153384[431] = 0;
   out_4993501443679153384[432] = 0;
   out_4993501443679153384[433] = 0;
   out_4993501443679153384[434] = 0;
   out_4993501443679153384[435] = 0;
   out_4993501443679153384[436] = 0;
   out_4993501443679153384[437] = 0;
   out_4993501443679153384[438] = 0;
   out_4993501443679153384[439] = 0;
   out_4993501443679153384[440] = 1;
}
void h_4(double *state, double *unused, double *out_773519739452149909) {
   out_773519739452149909[0] = state[10] + state[13];
   out_773519739452149909[1] = state[11] + state[14];
   out_773519739452149909[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3488853440007765243) {
   out_3488853440007765243[0] = 0;
   out_3488853440007765243[1] = 0;
   out_3488853440007765243[2] = 0;
   out_3488853440007765243[3] = 0;
   out_3488853440007765243[4] = 0;
   out_3488853440007765243[5] = 0;
   out_3488853440007765243[6] = 0;
   out_3488853440007765243[7] = 0;
   out_3488853440007765243[8] = 0;
   out_3488853440007765243[9] = 0;
   out_3488853440007765243[10] = 1;
   out_3488853440007765243[11] = 0;
   out_3488853440007765243[12] = 0;
   out_3488853440007765243[13] = 1;
   out_3488853440007765243[14] = 0;
   out_3488853440007765243[15] = 0;
   out_3488853440007765243[16] = 0;
   out_3488853440007765243[17] = 0;
   out_3488853440007765243[18] = 0;
   out_3488853440007765243[19] = 0;
   out_3488853440007765243[20] = 0;
   out_3488853440007765243[21] = 0;
   out_3488853440007765243[22] = 0;
   out_3488853440007765243[23] = 0;
   out_3488853440007765243[24] = 0;
   out_3488853440007765243[25] = 0;
   out_3488853440007765243[26] = 0;
   out_3488853440007765243[27] = 0;
   out_3488853440007765243[28] = 0;
   out_3488853440007765243[29] = 0;
   out_3488853440007765243[30] = 0;
   out_3488853440007765243[31] = 0;
   out_3488853440007765243[32] = 0;
   out_3488853440007765243[33] = 1;
   out_3488853440007765243[34] = 0;
   out_3488853440007765243[35] = 0;
   out_3488853440007765243[36] = 1;
   out_3488853440007765243[37] = 0;
   out_3488853440007765243[38] = 0;
   out_3488853440007765243[39] = 0;
   out_3488853440007765243[40] = 0;
   out_3488853440007765243[41] = 0;
   out_3488853440007765243[42] = 0;
   out_3488853440007765243[43] = 0;
   out_3488853440007765243[44] = 0;
   out_3488853440007765243[45] = 0;
   out_3488853440007765243[46] = 0;
   out_3488853440007765243[47] = 0;
   out_3488853440007765243[48] = 0;
   out_3488853440007765243[49] = 0;
   out_3488853440007765243[50] = 0;
   out_3488853440007765243[51] = 0;
   out_3488853440007765243[52] = 0;
   out_3488853440007765243[53] = 0;
   out_3488853440007765243[54] = 0;
   out_3488853440007765243[55] = 0;
   out_3488853440007765243[56] = 1;
   out_3488853440007765243[57] = 0;
   out_3488853440007765243[58] = 0;
   out_3488853440007765243[59] = 1;
   out_3488853440007765243[60] = 0;
   out_3488853440007765243[61] = 0;
   out_3488853440007765243[62] = 0;
   out_3488853440007765243[63] = 0;
   out_3488853440007765243[64] = 0;
   out_3488853440007765243[65] = 0;
}
void h_9(double *state, double *unused, double *out_7910407917020635879) {
   out_7910407917020635879[0] = state[10];
   out_7910407917020635879[1] = state[11];
   out_7910407917020635879[2] = state[12];
}
void H_9(double *state, double *unused, double *out_599991887727685901) {
   out_599991887727685901[0] = 0;
   out_599991887727685901[1] = 0;
   out_599991887727685901[2] = 0;
   out_599991887727685901[3] = 0;
   out_599991887727685901[4] = 0;
   out_599991887727685901[5] = 0;
   out_599991887727685901[6] = 0;
   out_599991887727685901[7] = 0;
   out_599991887727685901[8] = 0;
   out_599991887727685901[9] = 0;
   out_599991887727685901[10] = 1;
   out_599991887727685901[11] = 0;
   out_599991887727685901[12] = 0;
   out_599991887727685901[13] = 0;
   out_599991887727685901[14] = 0;
   out_599991887727685901[15] = 0;
   out_599991887727685901[16] = 0;
   out_599991887727685901[17] = 0;
   out_599991887727685901[18] = 0;
   out_599991887727685901[19] = 0;
   out_599991887727685901[20] = 0;
   out_599991887727685901[21] = 0;
   out_599991887727685901[22] = 0;
   out_599991887727685901[23] = 0;
   out_599991887727685901[24] = 0;
   out_599991887727685901[25] = 0;
   out_599991887727685901[26] = 0;
   out_599991887727685901[27] = 0;
   out_599991887727685901[28] = 0;
   out_599991887727685901[29] = 0;
   out_599991887727685901[30] = 0;
   out_599991887727685901[31] = 0;
   out_599991887727685901[32] = 0;
   out_599991887727685901[33] = 1;
   out_599991887727685901[34] = 0;
   out_599991887727685901[35] = 0;
   out_599991887727685901[36] = 0;
   out_599991887727685901[37] = 0;
   out_599991887727685901[38] = 0;
   out_599991887727685901[39] = 0;
   out_599991887727685901[40] = 0;
   out_599991887727685901[41] = 0;
   out_599991887727685901[42] = 0;
   out_599991887727685901[43] = 0;
   out_599991887727685901[44] = 0;
   out_599991887727685901[45] = 0;
   out_599991887727685901[46] = 0;
   out_599991887727685901[47] = 0;
   out_599991887727685901[48] = 0;
   out_599991887727685901[49] = 0;
   out_599991887727685901[50] = 0;
   out_599991887727685901[51] = 0;
   out_599991887727685901[52] = 0;
   out_599991887727685901[53] = 0;
   out_599991887727685901[54] = 0;
   out_599991887727685901[55] = 0;
   out_599991887727685901[56] = 1;
   out_599991887727685901[57] = 0;
   out_599991887727685901[58] = 0;
   out_599991887727685901[59] = 0;
   out_599991887727685901[60] = 0;
   out_599991887727685901[61] = 0;
   out_599991887727685901[62] = 0;
   out_599991887727685901[63] = 0;
   out_599991887727685901[64] = 0;
   out_599991887727685901[65] = 0;
}
void h_10(double *state, double *unused, double *out_3151163302577113248) {
   out_3151163302577113248[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3151163302577113248[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3151163302577113248[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4364406165511907898) {
   out_4364406165511907898[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4364406165511907898[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4364406165511907898[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4364406165511907898[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4364406165511907898[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4364406165511907898[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4364406165511907898[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4364406165511907898[7] = 0;
   out_4364406165511907898[8] = 0;
   out_4364406165511907898[9] = 0;
   out_4364406165511907898[10] = 0;
   out_4364406165511907898[11] = 0;
   out_4364406165511907898[12] = 0;
   out_4364406165511907898[13] = 0;
   out_4364406165511907898[14] = 0;
   out_4364406165511907898[15] = 0;
   out_4364406165511907898[16] = 1;
   out_4364406165511907898[17] = 0;
   out_4364406165511907898[18] = 0;
   out_4364406165511907898[19] = 1;
   out_4364406165511907898[20] = 0;
   out_4364406165511907898[21] = 0;
   out_4364406165511907898[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4364406165511907898[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4364406165511907898[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4364406165511907898[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4364406165511907898[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4364406165511907898[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4364406165511907898[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4364406165511907898[29] = 0;
   out_4364406165511907898[30] = 0;
   out_4364406165511907898[31] = 0;
   out_4364406165511907898[32] = 0;
   out_4364406165511907898[33] = 0;
   out_4364406165511907898[34] = 0;
   out_4364406165511907898[35] = 0;
   out_4364406165511907898[36] = 0;
   out_4364406165511907898[37] = 0;
   out_4364406165511907898[38] = 0;
   out_4364406165511907898[39] = 1;
   out_4364406165511907898[40] = 0;
   out_4364406165511907898[41] = 0;
   out_4364406165511907898[42] = 1;
   out_4364406165511907898[43] = 0;
   out_4364406165511907898[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4364406165511907898[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4364406165511907898[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4364406165511907898[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4364406165511907898[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4364406165511907898[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4364406165511907898[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4364406165511907898[51] = 0;
   out_4364406165511907898[52] = 0;
   out_4364406165511907898[53] = 0;
   out_4364406165511907898[54] = 0;
   out_4364406165511907898[55] = 0;
   out_4364406165511907898[56] = 0;
   out_4364406165511907898[57] = 0;
   out_4364406165511907898[58] = 0;
   out_4364406165511907898[59] = 0;
   out_4364406165511907898[60] = 0;
   out_4364406165511907898[61] = 0;
   out_4364406165511907898[62] = 1;
   out_4364406165511907898[63] = 0;
   out_4364406165511907898[64] = 0;
   out_4364406165511907898[65] = 1;
}
void h_12(double *state, double *unused, double *out_9102017503874830796) {
   out_9102017503874830796[0] = state[0];
   out_9102017503874830796[1] = state[1];
   out_9102017503874830796[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4178274873674685249) {
   out_4178274873674685249[0] = 1;
   out_4178274873674685249[1] = 0;
   out_4178274873674685249[2] = 0;
   out_4178274873674685249[3] = 0;
   out_4178274873674685249[4] = 0;
   out_4178274873674685249[5] = 0;
   out_4178274873674685249[6] = 0;
   out_4178274873674685249[7] = 0;
   out_4178274873674685249[8] = 0;
   out_4178274873674685249[9] = 0;
   out_4178274873674685249[10] = 0;
   out_4178274873674685249[11] = 0;
   out_4178274873674685249[12] = 0;
   out_4178274873674685249[13] = 0;
   out_4178274873674685249[14] = 0;
   out_4178274873674685249[15] = 0;
   out_4178274873674685249[16] = 0;
   out_4178274873674685249[17] = 0;
   out_4178274873674685249[18] = 0;
   out_4178274873674685249[19] = 0;
   out_4178274873674685249[20] = 0;
   out_4178274873674685249[21] = 0;
   out_4178274873674685249[22] = 0;
   out_4178274873674685249[23] = 1;
   out_4178274873674685249[24] = 0;
   out_4178274873674685249[25] = 0;
   out_4178274873674685249[26] = 0;
   out_4178274873674685249[27] = 0;
   out_4178274873674685249[28] = 0;
   out_4178274873674685249[29] = 0;
   out_4178274873674685249[30] = 0;
   out_4178274873674685249[31] = 0;
   out_4178274873674685249[32] = 0;
   out_4178274873674685249[33] = 0;
   out_4178274873674685249[34] = 0;
   out_4178274873674685249[35] = 0;
   out_4178274873674685249[36] = 0;
   out_4178274873674685249[37] = 0;
   out_4178274873674685249[38] = 0;
   out_4178274873674685249[39] = 0;
   out_4178274873674685249[40] = 0;
   out_4178274873674685249[41] = 0;
   out_4178274873674685249[42] = 0;
   out_4178274873674685249[43] = 0;
   out_4178274873674685249[44] = 0;
   out_4178274873674685249[45] = 0;
   out_4178274873674685249[46] = 1;
   out_4178274873674685249[47] = 0;
   out_4178274873674685249[48] = 0;
   out_4178274873674685249[49] = 0;
   out_4178274873674685249[50] = 0;
   out_4178274873674685249[51] = 0;
   out_4178274873674685249[52] = 0;
   out_4178274873674685249[53] = 0;
   out_4178274873674685249[54] = 0;
   out_4178274873674685249[55] = 0;
   out_4178274873674685249[56] = 0;
   out_4178274873674685249[57] = 0;
   out_4178274873674685249[58] = 0;
   out_4178274873674685249[59] = 0;
   out_4178274873674685249[60] = 0;
   out_4178274873674685249[61] = 0;
   out_4178274873674685249[62] = 0;
   out_4178274873674685249[63] = 0;
   out_4178274873674685249[64] = 0;
   out_4178274873674685249[65] = 0;
}
void h_35(double *state, double *unused, double *out_661952609671183647) {
   out_661952609671183647[0] = state[7];
   out_661952609671183647[1] = state[8];
   out_661952609671183647[2] = state[9];
}
void H_35(double *state, double *unused, double *out_122191382635157867) {
   out_122191382635157867[0] = 0;
   out_122191382635157867[1] = 0;
   out_122191382635157867[2] = 0;
   out_122191382635157867[3] = 0;
   out_122191382635157867[4] = 0;
   out_122191382635157867[5] = 0;
   out_122191382635157867[6] = 0;
   out_122191382635157867[7] = 1;
   out_122191382635157867[8] = 0;
   out_122191382635157867[9] = 0;
   out_122191382635157867[10] = 0;
   out_122191382635157867[11] = 0;
   out_122191382635157867[12] = 0;
   out_122191382635157867[13] = 0;
   out_122191382635157867[14] = 0;
   out_122191382635157867[15] = 0;
   out_122191382635157867[16] = 0;
   out_122191382635157867[17] = 0;
   out_122191382635157867[18] = 0;
   out_122191382635157867[19] = 0;
   out_122191382635157867[20] = 0;
   out_122191382635157867[21] = 0;
   out_122191382635157867[22] = 0;
   out_122191382635157867[23] = 0;
   out_122191382635157867[24] = 0;
   out_122191382635157867[25] = 0;
   out_122191382635157867[26] = 0;
   out_122191382635157867[27] = 0;
   out_122191382635157867[28] = 0;
   out_122191382635157867[29] = 0;
   out_122191382635157867[30] = 1;
   out_122191382635157867[31] = 0;
   out_122191382635157867[32] = 0;
   out_122191382635157867[33] = 0;
   out_122191382635157867[34] = 0;
   out_122191382635157867[35] = 0;
   out_122191382635157867[36] = 0;
   out_122191382635157867[37] = 0;
   out_122191382635157867[38] = 0;
   out_122191382635157867[39] = 0;
   out_122191382635157867[40] = 0;
   out_122191382635157867[41] = 0;
   out_122191382635157867[42] = 0;
   out_122191382635157867[43] = 0;
   out_122191382635157867[44] = 0;
   out_122191382635157867[45] = 0;
   out_122191382635157867[46] = 0;
   out_122191382635157867[47] = 0;
   out_122191382635157867[48] = 0;
   out_122191382635157867[49] = 0;
   out_122191382635157867[50] = 0;
   out_122191382635157867[51] = 0;
   out_122191382635157867[52] = 0;
   out_122191382635157867[53] = 1;
   out_122191382635157867[54] = 0;
   out_122191382635157867[55] = 0;
   out_122191382635157867[56] = 0;
   out_122191382635157867[57] = 0;
   out_122191382635157867[58] = 0;
   out_122191382635157867[59] = 0;
   out_122191382635157867[60] = 0;
   out_122191382635157867[61] = 0;
   out_122191382635157867[62] = 0;
   out_122191382635157867[63] = 0;
   out_122191382635157867[64] = 0;
   out_122191382635157867[65] = 0;
}
void h_32(double *state, double *unused, double *out_7910574425261860947) {
   out_7910574425261860947[0] = state[3];
   out_7910574425261860947[1] = state[4];
   out_7910574425261860947[2] = state[5];
   out_7910574425261860947[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2582833130266592070) {
   out_2582833130266592070[0] = 0;
   out_2582833130266592070[1] = 0;
   out_2582833130266592070[2] = 0;
   out_2582833130266592070[3] = 1;
   out_2582833130266592070[4] = 0;
   out_2582833130266592070[5] = 0;
   out_2582833130266592070[6] = 0;
   out_2582833130266592070[7] = 0;
   out_2582833130266592070[8] = 0;
   out_2582833130266592070[9] = 0;
   out_2582833130266592070[10] = 0;
   out_2582833130266592070[11] = 0;
   out_2582833130266592070[12] = 0;
   out_2582833130266592070[13] = 0;
   out_2582833130266592070[14] = 0;
   out_2582833130266592070[15] = 0;
   out_2582833130266592070[16] = 0;
   out_2582833130266592070[17] = 0;
   out_2582833130266592070[18] = 0;
   out_2582833130266592070[19] = 0;
   out_2582833130266592070[20] = 0;
   out_2582833130266592070[21] = 0;
   out_2582833130266592070[22] = 0;
   out_2582833130266592070[23] = 0;
   out_2582833130266592070[24] = 0;
   out_2582833130266592070[25] = 0;
   out_2582833130266592070[26] = 1;
   out_2582833130266592070[27] = 0;
   out_2582833130266592070[28] = 0;
   out_2582833130266592070[29] = 0;
   out_2582833130266592070[30] = 0;
   out_2582833130266592070[31] = 0;
   out_2582833130266592070[32] = 0;
   out_2582833130266592070[33] = 0;
   out_2582833130266592070[34] = 0;
   out_2582833130266592070[35] = 0;
   out_2582833130266592070[36] = 0;
   out_2582833130266592070[37] = 0;
   out_2582833130266592070[38] = 0;
   out_2582833130266592070[39] = 0;
   out_2582833130266592070[40] = 0;
   out_2582833130266592070[41] = 0;
   out_2582833130266592070[42] = 0;
   out_2582833130266592070[43] = 0;
   out_2582833130266592070[44] = 0;
   out_2582833130266592070[45] = 0;
   out_2582833130266592070[46] = 0;
   out_2582833130266592070[47] = 0;
   out_2582833130266592070[48] = 0;
   out_2582833130266592070[49] = 1;
   out_2582833130266592070[50] = 0;
   out_2582833130266592070[51] = 0;
   out_2582833130266592070[52] = 0;
   out_2582833130266592070[53] = 0;
   out_2582833130266592070[54] = 0;
   out_2582833130266592070[55] = 0;
   out_2582833130266592070[56] = 0;
   out_2582833130266592070[57] = 0;
   out_2582833130266592070[58] = 0;
   out_2582833130266592070[59] = 0;
   out_2582833130266592070[60] = 0;
   out_2582833130266592070[61] = 0;
   out_2582833130266592070[62] = 0;
   out_2582833130266592070[63] = 0;
   out_2582833130266592070[64] = 0;
   out_2582833130266592070[65] = 0;
   out_2582833130266592070[66] = 0;
   out_2582833130266592070[67] = 0;
   out_2582833130266592070[68] = 0;
   out_2582833130266592070[69] = 0;
   out_2582833130266592070[70] = 0;
   out_2582833130266592070[71] = 0;
   out_2582833130266592070[72] = 1;
   out_2582833130266592070[73] = 0;
   out_2582833130266592070[74] = 0;
   out_2582833130266592070[75] = 0;
   out_2582833130266592070[76] = 0;
   out_2582833130266592070[77] = 0;
   out_2582833130266592070[78] = 0;
   out_2582833130266592070[79] = 0;
   out_2582833130266592070[80] = 0;
   out_2582833130266592070[81] = 0;
   out_2582833130266592070[82] = 0;
   out_2582833130266592070[83] = 0;
   out_2582833130266592070[84] = 0;
   out_2582833130266592070[85] = 0;
   out_2582833130266592070[86] = 0;
   out_2582833130266592070[87] = 0;
}
void h_13(double *state, double *unused, double *out_1123454992331711379) {
   out_1123454992331711379[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1123454992331711379[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1123454992331711379[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7377454176579306646) {
   out_7377454176579306646[0] = 0;
   out_7377454176579306646[1] = 0;
   out_7377454176579306646[2] = 0;
   out_7377454176579306646[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7377454176579306646[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7377454176579306646[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7377454176579306646[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7377454176579306646[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7377454176579306646[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7377454176579306646[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7377454176579306646[10] = 0;
   out_7377454176579306646[11] = 0;
   out_7377454176579306646[12] = 0;
   out_7377454176579306646[13] = 0;
   out_7377454176579306646[14] = 0;
   out_7377454176579306646[15] = 0;
   out_7377454176579306646[16] = 0;
   out_7377454176579306646[17] = 0;
   out_7377454176579306646[18] = 0;
   out_7377454176579306646[19] = 0;
   out_7377454176579306646[20] = 0;
   out_7377454176579306646[21] = 0;
   out_7377454176579306646[22] = 0;
   out_7377454176579306646[23] = 0;
   out_7377454176579306646[24] = 0;
   out_7377454176579306646[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7377454176579306646[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7377454176579306646[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7377454176579306646[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7377454176579306646[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7377454176579306646[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7377454176579306646[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7377454176579306646[32] = 0;
   out_7377454176579306646[33] = 0;
   out_7377454176579306646[34] = 0;
   out_7377454176579306646[35] = 0;
   out_7377454176579306646[36] = 0;
   out_7377454176579306646[37] = 0;
   out_7377454176579306646[38] = 0;
   out_7377454176579306646[39] = 0;
   out_7377454176579306646[40] = 0;
   out_7377454176579306646[41] = 0;
   out_7377454176579306646[42] = 0;
   out_7377454176579306646[43] = 0;
   out_7377454176579306646[44] = 0;
   out_7377454176579306646[45] = 0;
   out_7377454176579306646[46] = 0;
   out_7377454176579306646[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7377454176579306646[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7377454176579306646[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7377454176579306646[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7377454176579306646[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7377454176579306646[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7377454176579306646[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7377454176579306646[54] = 0;
   out_7377454176579306646[55] = 0;
   out_7377454176579306646[56] = 0;
   out_7377454176579306646[57] = 0;
   out_7377454176579306646[58] = 0;
   out_7377454176579306646[59] = 0;
   out_7377454176579306646[60] = 0;
   out_7377454176579306646[61] = 0;
   out_7377454176579306646[62] = 0;
   out_7377454176579306646[63] = 0;
   out_7377454176579306646[64] = 0;
   out_7377454176579306646[65] = 0;
}
void h_14(double *state, double *unused, double *out_7910407917020635879) {
   out_7910407917020635879[0] = state[10];
   out_7910407917020635879[1] = state[11];
   out_7910407917020635879[2] = state[12];
}
void H_14(double *state, double *unused, double *out_599991887727685901) {
   out_599991887727685901[0] = 0;
   out_599991887727685901[1] = 0;
   out_599991887727685901[2] = 0;
   out_599991887727685901[3] = 0;
   out_599991887727685901[4] = 0;
   out_599991887727685901[5] = 0;
   out_599991887727685901[6] = 0;
   out_599991887727685901[7] = 0;
   out_599991887727685901[8] = 0;
   out_599991887727685901[9] = 0;
   out_599991887727685901[10] = 1;
   out_599991887727685901[11] = 0;
   out_599991887727685901[12] = 0;
   out_599991887727685901[13] = 0;
   out_599991887727685901[14] = 0;
   out_599991887727685901[15] = 0;
   out_599991887727685901[16] = 0;
   out_599991887727685901[17] = 0;
   out_599991887727685901[18] = 0;
   out_599991887727685901[19] = 0;
   out_599991887727685901[20] = 0;
   out_599991887727685901[21] = 0;
   out_599991887727685901[22] = 0;
   out_599991887727685901[23] = 0;
   out_599991887727685901[24] = 0;
   out_599991887727685901[25] = 0;
   out_599991887727685901[26] = 0;
   out_599991887727685901[27] = 0;
   out_599991887727685901[28] = 0;
   out_599991887727685901[29] = 0;
   out_599991887727685901[30] = 0;
   out_599991887727685901[31] = 0;
   out_599991887727685901[32] = 0;
   out_599991887727685901[33] = 1;
   out_599991887727685901[34] = 0;
   out_599991887727685901[35] = 0;
   out_599991887727685901[36] = 0;
   out_599991887727685901[37] = 0;
   out_599991887727685901[38] = 0;
   out_599991887727685901[39] = 0;
   out_599991887727685901[40] = 0;
   out_599991887727685901[41] = 0;
   out_599991887727685901[42] = 0;
   out_599991887727685901[43] = 0;
   out_599991887727685901[44] = 0;
   out_599991887727685901[45] = 0;
   out_599991887727685901[46] = 0;
   out_599991887727685901[47] = 0;
   out_599991887727685901[48] = 0;
   out_599991887727685901[49] = 0;
   out_599991887727685901[50] = 0;
   out_599991887727685901[51] = 0;
   out_599991887727685901[52] = 0;
   out_599991887727685901[53] = 0;
   out_599991887727685901[54] = 0;
   out_599991887727685901[55] = 0;
   out_599991887727685901[56] = 1;
   out_599991887727685901[57] = 0;
   out_599991887727685901[58] = 0;
   out_599991887727685901[59] = 0;
   out_599991887727685901[60] = 0;
   out_599991887727685901[61] = 0;
   out_599991887727685901[62] = 0;
   out_599991887727685901[63] = 0;
   out_599991887727685901[64] = 0;
   out_599991887727685901[65] = 0;
}
void h_33(double *state, double *unused, double *out_8148064412384831821) {
   out_8148064412384831821[0] = state[16];
   out_8148064412384831821[1] = state[17];
   out_8148064412384831821[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8372349163070995054) {
   out_8372349163070995054[0] = 0;
   out_8372349163070995054[1] = 0;
   out_8372349163070995054[2] = 0;
   out_8372349163070995054[3] = 0;
   out_8372349163070995054[4] = 0;
   out_8372349163070995054[5] = 0;
   out_8372349163070995054[6] = 0;
   out_8372349163070995054[7] = 0;
   out_8372349163070995054[8] = 0;
   out_8372349163070995054[9] = 0;
   out_8372349163070995054[10] = 0;
   out_8372349163070995054[11] = 0;
   out_8372349163070995054[12] = 0;
   out_8372349163070995054[13] = 0;
   out_8372349163070995054[14] = 0;
   out_8372349163070995054[15] = 0;
   out_8372349163070995054[16] = 1;
   out_8372349163070995054[17] = 0;
   out_8372349163070995054[18] = 0;
   out_8372349163070995054[19] = 0;
   out_8372349163070995054[20] = 0;
   out_8372349163070995054[21] = 0;
   out_8372349163070995054[22] = 0;
   out_8372349163070995054[23] = 0;
   out_8372349163070995054[24] = 0;
   out_8372349163070995054[25] = 0;
   out_8372349163070995054[26] = 0;
   out_8372349163070995054[27] = 0;
   out_8372349163070995054[28] = 0;
   out_8372349163070995054[29] = 0;
   out_8372349163070995054[30] = 0;
   out_8372349163070995054[31] = 0;
   out_8372349163070995054[32] = 0;
   out_8372349163070995054[33] = 0;
   out_8372349163070995054[34] = 0;
   out_8372349163070995054[35] = 0;
   out_8372349163070995054[36] = 0;
   out_8372349163070995054[37] = 0;
   out_8372349163070995054[38] = 0;
   out_8372349163070995054[39] = 1;
   out_8372349163070995054[40] = 0;
   out_8372349163070995054[41] = 0;
   out_8372349163070995054[42] = 0;
   out_8372349163070995054[43] = 0;
   out_8372349163070995054[44] = 0;
   out_8372349163070995054[45] = 0;
   out_8372349163070995054[46] = 0;
   out_8372349163070995054[47] = 0;
   out_8372349163070995054[48] = 0;
   out_8372349163070995054[49] = 0;
   out_8372349163070995054[50] = 0;
   out_8372349163070995054[51] = 0;
   out_8372349163070995054[52] = 0;
   out_8372349163070995054[53] = 0;
   out_8372349163070995054[54] = 0;
   out_8372349163070995054[55] = 0;
   out_8372349163070995054[56] = 0;
   out_8372349163070995054[57] = 0;
   out_8372349163070995054[58] = 0;
   out_8372349163070995054[59] = 0;
   out_8372349163070995054[60] = 0;
   out_8372349163070995054[61] = 0;
   out_8372349163070995054[62] = 1;
   out_8372349163070995054[63] = 0;
   out_8372349163070995054[64] = 0;
   out_8372349163070995054[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6451142613360380251) {
  H(in_vec, out_6451142613360380251);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7538598397836621666) {
  err_fun(nom_x, delta_x, out_7538598397836621666);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5762235078521032163) {
  inv_err_fun(nom_x, true_x, out_5762235078521032163);
}
void live_H_mod_fun(double *state, double *out_2616824879059836125) {
  H_mod_fun(state, out_2616824879059836125);
}
void live_f_fun(double *state, double dt, double *out_2519803541471883852) {
  f_fun(state,  dt, out_2519803541471883852);
}
void live_F_fun(double *state, double dt, double *out_4993501443679153384) {
  F_fun(state,  dt, out_4993501443679153384);
}
void live_h_4(double *state, double *unused, double *out_773519739452149909) {
  h_4(state, unused, out_773519739452149909);
}
void live_H_4(double *state, double *unused, double *out_3488853440007765243) {
  H_4(state, unused, out_3488853440007765243);
}
void live_h_9(double *state, double *unused, double *out_7910407917020635879) {
  h_9(state, unused, out_7910407917020635879);
}
void live_H_9(double *state, double *unused, double *out_599991887727685901) {
  H_9(state, unused, out_599991887727685901);
}
void live_h_10(double *state, double *unused, double *out_3151163302577113248) {
  h_10(state, unused, out_3151163302577113248);
}
void live_H_10(double *state, double *unused, double *out_4364406165511907898) {
  H_10(state, unused, out_4364406165511907898);
}
void live_h_12(double *state, double *unused, double *out_9102017503874830796) {
  h_12(state, unused, out_9102017503874830796);
}
void live_H_12(double *state, double *unused, double *out_4178274873674685249) {
  H_12(state, unused, out_4178274873674685249);
}
void live_h_35(double *state, double *unused, double *out_661952609671183647) {
  h_35(state, unused, out_661952609671183647);
}
void live_H_35(double *state, double *unused, double *out_122191382635157867) {
  H_35(state, unused, out_122191382635157867);
}
void live_h_32(double *state, double *unused, double *out_7910574425261860947) {
  h_32(state, unused, out_7910574425261860947);
}
void live_H_32(double *state, double *unused, double *out_2582833130266592070) {
  H_32(state, unused, out_2582833130266592070);
}
void live_h_13(double *state, double *unused, double *out_1123454992331711379) {
  h_13(state, unused, out_1123454992331711379);
}
void live_H_13(double *state, double *unused, double *out_7377454176579306646) {
  H_13(state, unused, out_7377454176579306646);
}
void live_h_14(double *state, double *unused, double *out_7910407917020635879) {
  h_14(state, unused, out_7910407917020635879);
}
void live_H_14(double *state, double *unused, double *out_599991887727685901) {
  H_14(state, unused, out_599991887727685901);
}
void live_h_33(double *state, double *unused, double *out_8148064412384831821) {
  h_33(state, unused, out_8148064412384831821);
}
void live_H_33(double *state, double *unused, double *out_8372349163070995054) {
  H_33(state, unused, out_8372349163070995054);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
