#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2414735134555351652) {
   out_2414735134555351652[0] = 0;
   out_2414735134555351652[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2414735134555351652[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2414735134555351652[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2414735134555351652[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2414735134555351652[5] = -sin(in_vec[1]);
   out_2414735134555351652[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2414735134555351652[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2414735134555351652[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2414735134555351652[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2414735134555351652[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2414735134555351652[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2414735134555351652[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2414735134555351652[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2414735134555351652[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2414735134555351652[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2414735134555351652[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2414735134555351652[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4765299119652427496) {
   out_4765299119652427496[0] = delta_x[0] + nom_x[0];
   out_4765299119652427496[1] = delta_x[1] + nom_x[1];
   out_4765299119652427496[2] = delta_x[2] + nom_x[2];
   out_4765299119652427496[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4765299119652427496[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4765299119652427496[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4765299119652427496[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4765299119652427496[7] = delta_x[6] + nom_x[7];
   out_4765299119652427496[8] = delta_x[7] + nom_x[8];
   out_4765299119652427496[9] = delta_x[8] + nom_x[9];
   out_4765299119652427496[10] = delta_x[9] + nom_x[10];
   out_4765299119652427496[11] = delta_x[10] + nom_x[11];
   out_4765299119652427496[12] = delta_x[11] + nom_x[12];
   out_4765299119652427496[13] = delta_x[12] + nom_x[13];
   out_4765299119652427496[14] = delta_x[13] + nom_x[14];
   out_4765299119652427496[15] = delta_x[14] + nom_x[15];
   out_4765299119652427496[16] = delta_x[15] + nom_x[16];
   out_4765299119652427496[17] = delta_x[16] + nom_x[17];
   out_4765299119652427496[18] = delta_x[17] + nom_x[18];
   out_4765299119652427496[19] = delta_x[18] + nom_x[19];
   out_4765299119652427496[20] = delta_x[19] + nom_x[20];
   out_4765299119652427496[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3190586852095350362) {
   out_3190586852095350362[0] = -nom_x[0] + true_x[0];
   out_3190586852095350362[1] = -nom_x[1] + true_x[1];
   out_3190586852095350362[2] = -nom_x[2] + true_x[2];
   out_3190586852095350362[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3190586852095350362[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3190586852095350362[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3190586852095350362[6] = -nom_x[7] + true_x[7];
   out_3190586852095350362[7] = -nom_x[8] + true_x[8];
   out_3190586852095350362[8] = -nom_x[9] + true_x[9];
   out_3190586852095350362[9] = -nom_x[10] + true_x[10];
   out_3190586852095350362[10] = -nom_x[11] + true_x[11];
   out_3190586852095350362[11] = -nom_x[12] + true_x[12];
   out_3190586852095350362[12] = -nom_x[13] + true_x[13];
   out_3190586852095350362[13] = -nom_x[14] + true_x[14];
   out_3190586852095350362[14] = -nom_x[15] + true_x[15];
   out_3190586852095350362[15] = -nom_x[16] + true_x[16];
   out_3190586852095350362[16] = -nom_x[17] + true_x[17];
   out_3190586852095350362[17] = -nom_x[18] + true_x[18];
   out_3190586852095350362[18] = -nom_x[19] + true_x[19];
   out_3190586852095350362[19] = -nom_x[20] + true_x[20];
   out_3190586852095350362[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8614950881650688864) {
   out_8614950881650688864[0] = 1.0;
   out_8614950881650688864[1] = 0;
   out_8614950881650688864[2] = 0;
   out_8614950881650688864[3] = 0;
   out_8614950881650688864[4] = 0;
   out_8614950881650688864[5] = 0;
   out_8614950881650688864[6] = 0;
   out_8614950881650688864[7] = 0;
   out_8614950881650688864[8] = 0;
   out_8614950881650688864[9] = 0;
   out_8614950881650688864[10] = 0;
   out_8614950881650688864[11] = 0;
   out_8614950881650688864[12] = 0;
   out_8614950881650688864[13] = 0;
   out_8614950881650688864[14] = 0;
   out_8614950881650688864[15] = 0;
   out_8614950881650688864[16] = 0;
   out_8614950881650688864[17] = 0;
   out_8614950881650688864[18] = 0;
   out_8614950881650688864[19] = 0;
   out_8614950881650688864[20] = 0;
   out_8614950881650688864[21] = 0;
   out_8614950881650688864[22] = 1.0;
   out_8614950881650688864[23] = 0;
   out_8614950881650688864[24] = 0;
   out_8614950881650688864[25] = 0;
   out_8614950881650688864[26] = 0;
   out_8614950881650688864[27] = 0;
   out_8614950881650688864[28] = 0;
   out_8614950881650688864[29] = 0;
   out_8614950881650688864[30] = 0;
   out_8614950881650688864[31] = 0;
   out_8614950881650688864[32] = 0;
   out_8614950881650688864[33] = 0;
   out_8614950881650688864[34] = 0;
   out_8614950881650688864[35] = 0;
   out_8614950881650688864[36] = 0;
   out_8614950881650688864[37] = 0;
   out_8614950881650688864[38] = 0;
   out_8614950881650688864[39] = 0;
   out_8614950881650688864[40] = 0;
   out_8614950881650688864[41] = 0;
   out_8614950881650688864[42] = 0;
   out_8614950881650688864[43] = 0;
   out_8614950881650688864[44] = 1.0;
   out_8614950881650688864[45] = 0;
   out_8614950881650688864[46] = 0;
   out_8614950881650688864[47] = 0;
   out_8614950881650688864[48] = 0;
   out_8614950881650688864[49] = 0;
   out_8614950881650688864[50] = 0;
   out_8614950881650688864[51] = 0;
   out_8614950881650688864[52] = 0;
   out_8614950881650688864[53] = 0;
   out_8614950881650688864[54] = 0;
   out_8614950881650688864[55] = 0;
   out_8614950881650688864[56] = 0;
   out_8614950881650688864[57] = 0;
   out_8614950881650688864[58] = 0;
   out_8614950881650688864[59] = 0;
   out_8614950881650688864[60] = 0;
   out_8614950881650688864[61] = 0;
   out_8614950881650688864[62] = 0;
   out_8614950881650688864[63] = 0;
   out_8614950881650688864[64] = 0;
   out_8614950881650688864[65] = 0;
   out_8614950881650688864[66] = -0.5*state[4];
   out_8614950881650688864[67] = -0.5*state[5];
   out_8614950881650688864[68] = -0.5*state[6];
   out_8614950881650688864[69] = 0;
   out_8614950881650688864[70] = 0;
   out_8614950881650688864[71] = 0;
   out_8614950881650688864[72] = 0;
   out_8614950881650688864[73] = 0;
   out_8614950881650688864[74] = 0;
   out_8614950881650688864[75] = 0;
   out_8614950881650688864[76] = 0;
   out_8614950881650688864[77] = 0;
   out_8614950881650688864[78] = 0;
   out_8614950881650688864[79] = 0;
   out_8614950881650688864[80] = 0;
   out_8614950881650688864[81] = 0;
   out_8614950881650688864[82] = 0;
   out_8614950881650688864[83] = 0;
   out_8614950881650688864[84] = 0;
   out_8614950881650688864[85] = 0;
   out_8614950881650688864[86] = 0;
   out_8614950881650688864[87] = 0.5*state[3];
   out_8614950881650688864[88] = 0.5*state[6];
   out_8614950881650688864[89] = -0.5*state[5];
   out_8614950881650688864[90] = 0;
   out_8614950881650688864[91] = 0;
   out_8614950881650688864[92] = 0;
   out_8614950881650688864[93] = 0;
   out_8614950881650688864[94] = 0;
   out_8614950881650688864[95] = 0;
   out_8614950881650688864[96] = 0;
   out_8614950881650688864[97] = 0;
   out_8614950881650688864[98] = 0;
   out_8614950881650688864[99] = 0;
   out_8614950881650688864[100] = 0;
   out_8614950881650688864[101] = 0;
   out_8614950881650688864[102] = 0;
   out_8614950881650688864[103] = 0;
   out_8614950881650688864[104] = 0;
   out_8614950881650688864[105] = 0;
   out_8614950881650688864[106] = 0;
   out_8614950881650688864[107] = 0;
   out_8614950881650688864[108] = -0.5*state[6];
   out_8614950881650688864[109] = 0.5*state[3];
   out_8614950881650688864[110] = 0.5*state[4];
   out_8614950881650688864[111] = 0;
   out_8614950881650688864[112] = 0;
   out_8614950881650688864[113] = 0;
   out_8614950881650688864[114] = 0;
   out_8614950881650688864[115] = 0;
   out_8614950881650688864[116] = 0;
   out_8614950881650688864[117] = 0;
   out_8614950881650688864[118] = 0;
   out_8614950881650688864[119] = 0;
   out_8614950881650688864[120] = 0;
   out_8614950881650688864[121] = 0;
   out_8614950881650688864[122] = 0;
   out_8614950881650688864[123] = 0;
   out_8614950881650688864[124] = 0;
   out_8614950881650688864[125] = 0;
   out_8614950881650688864[126] = 0;
   out_8614950881650688864[127] = 0;
   out_8614950881650688864[128] = 0;
   out_8614950881650688864[129] = 0.5*state[5];
   out_8614950881650688864[130] = -0.5*state[4];
   out_8614950881650688864[131] = 0.5*state[3];
   out_8614950881650688864[132] = 0;
   out_8614950881650688864[133] = 0;
   out_8614950881650688864[134] = 0;
   out_8614950881650688864[135] = 0;
   out_8614950881650688864[136] = 0;
   out_8614950881650688864[137] = 0;
   out_8614950881650688864[138] = 0;
   out_8614950881650688864[139] = 0;
   out_8614950881650688864[140] = 0;
   out_8614950881650688864[141] = 0;
   out_8614950881650688864[142] = 0;
   out_8614950881650688864[143] = 0;
   out_8614950881650688864[144] = 0;
   out_8614950881650688864[145] = 0;
   out_8614950881650688864[146] = 0;
   out_8614950881650688864[147] = 0;
   out_8614950881650688864[148] = 0;
   out_8614950881650688864[149] = 0;
   out_8614950881650688864[150] = 0;
   out_8614950881650688864[151] = 0;
   out_8614950881650688864[152] = 0;
   out_8614950881650688864[153] = 1.0;
   out_8614950881650688864[154] = 0;
   out_8614950881650688864[155] = 0;
   out_8614950881650688864[156] = 0;
   out_8614950881650688864[157] = 0;
   out_8614950881650688864[158] = 0;
   out_8614950881650688864[159] = 0;
   out_8614950881650688864[160] = 0;
   out_8614950881650688864[161] = 0;
   out_8614950881650688864[162] = 0;
   out_8614950881650688864[163] = 0;
   out_8614950881650688864[164] = 0;
   out_8614950881650688864[165] = 0;
   out_8614950881650688864[166] = 0;
   out_8614950881650688864[167] = 0;
   out_8614950881650688864[168] = 0;
   out_8614950881650688864[169] = 0;
   out_8614950881650688864[170] = 0;
   out_8614950881650688864[171] = 0;
   out_8614950881650688864[172] = 0;
   out_8614950881650688864[173] = 0;
   out_8614950881650688864[174] = 0;
   out_8614950881650688864[175] = 1.0;
   out_8614950881650688864[176] = 0;
   out_8614950881650688864[177] = 0;
   out_8614950881650688864[178] = 0;
   out_8614950881650688864[179] = 0;
   out_8614950881650688864[180] = 0;
   out_8614950881650688864[181] = 0;
   out_8614950881650688864[182] = 0;
   out_8614950881650688864[183] = 0;
   out_8614950881650688864[184] = 0;
   out_8614950881650688864[185] = 0;
   out_8614950881650688864[186] = 0;
   out_8614950881650688864[187] = 0;
   out_8614950881650688864[188] = 0;
   out_8614950881650688864[189] = 0;
   out_8614950881650688864[190] = 0;
   out_8614950881650688864[191] = 0;
   out_8614950881650688864[192] = 0;
   out_8614950881650688864[193] = 0;
   out_8614950881650688864[194] = 0;
   out_8614950881650688864[195] = 0;
   out_8614950881650688864[196] = 0;
   out_8614950881650688864[197] = 1.0;
   out_8614950881650688864[198] = 0;
   out_8614950881650688864[199] = 0;
   out_8614950881650688864[200] = 0;
   out_8614950881650688864[201] = 0;
   out_8614950881650688864[202] = 0;
   out_8614950881650688864[203] = 0;
   out_8614950881650688864[204] = 0;
   out_8614950881650688864[205] = 0;
   out_8614950881650688864[206] = 0;
   out_8614950881650688864[207] = 0;
   out_8614950881650688864[208] = 0;
   out_8614950881650688864[209] = 0;
   out_8614950881650688864[210] = 0;
   out_8614950881650688864[211] = 0;
   out_8614950881650688864[212] = 0;
   out_8614950881650688864[213] = 0;
   out_8614950881650688864[214] = 0;
   out_8614950881650688864[215] = 0;
   out_8614950881650688864[216] = 0;
   out_8614950881650688864[217] = 0;
   out_8614950881650688864[218] = 0;
   out_8614950881650688864[219] = 1.0;
   out_8614950881650688864[220] = 0;
   out_8614950881650688864[221] = 0;
   out_8614950881650688864[222] = 0;
   out_8614950881650688864[223] = 0;
   out_8614950881650688864[224] = 0;
   out_8614950881650688864[225] = 0;
   out_8614950881650688864[226] = 0;
   out_8614950881650688864[227] = 0;
   out_8614950881650688864[228] = 0;
   out_8614950881650688864[229] = 0;
   out_8614950881650688864[230] = 0;
   out_8614950881650688864[231] = 0;
   out_8614950881650688864[232] = 0;
   out_8614950881650688864[233] = 0;
   out_8614950881650688864[234] = 0;
   out_8614950881650688864[235] = 0;
   out_8614950881650688864[236] = 0;
   out_8614950881650688864[237] = 0;
   out_8614950881650688864[238] = 0;
   out_8614950881650688864[239] = 0;
   out_8614950881650688864[240] = 0;
   out_8614950881650688864[241] = 1.0;
   out_8614950881650688864[242] = 0;
   out_8614950881650688864[243] = 0;
   out_8614950881650688864[244] = 0;
   out_8614950881650688864[245] = 0;
   out_8614950881650688864[246] = 0;
   out_8614950881650688864[247] = 0;
   out_8614950881650688864[248] = 0;
   out_8614950881650688864[249] = 0;
   out_8614950881650688864[250] = 0;
   out_8614950881650688864[251] = 0;
   out_8614950881650688864[252] = 0;
   out_8614950881650688864[253] = 0;
   out_8614950881650688864[254] = 0;
   out_8614950881650688864[255] = 0;
   out_8614950881650688864[256] = 0;
   out_8614950881650688864[257] = 0;
   out_8614950881650688864[258] = 0;
   out_8614950881650688864[259] = 0;
   out_8614950881650688864[260] = 0;
   out_8614950881650688864[261] = 0;
   out_8614950881650688864[262] = 0;
   out_8614950881650688864[263] = 1.0;
   out_8614950881650688864[264] = 0;
   out_8614950881650688864[265] = 0;
   out_8614950881650688864[266] = 0;
   out_8614950881650688864[267] = 0;
   out_8614950881650688864[268] = 0;
   out_8614950881650688864[269] = 0;
   out_8614950881650688864[270] = 0;
   out_8614950881650688864[271] = 0;
   out_8614950881650688864[272] = 0;
   out_8614950881650688864[273] = 0;
   out_8614950881650688864[274] = 0;
   out_8614950881650688864[275] = 0;
   out_8614950881650688864[276] = 0;
   out_8614950881650688864[277] = 0;
   out_8614950881650688864[278] = 0;
   out_8614950881650688864[279] = 0;
   out_8614950881650688864[280] = 0;
   out_8614950881650688864[281] = 0;
   out_8614950881650688864[282] = 0;
   out_8614950881650688864[283] = 0;
   out_8614950881650688864[284] = 0;
   out_8614950881650688864[285] = 1.0;
   out_8614950881650688864[286] = 0;
   out_8614950881650688864[287] = 0;
   out_8614950881650688864[288] = 0;
   out_8614950881650688864[289] = 0;
   out_8614950881650688864[290] = 0;
   out_8614950881650688864[291] = 0;
   out_8614950881650688864[292] = 0;
   out_8614950881650688864[293] = 0;
   out_8614950881650688864[294] = 0;
   out_8614950881650688864[295] = 0;
   out_8614950881650688864[296] = 0;
   out_8614950881650688864[297] = 0;
   out_8614950881650688864[298] = 0;
   out_8614950881650688864[299] = 0;
   out_8614950881650688864[300] = 0;
   out_8614950881650688864[301] = 0;
   out_8614950881650688864[302] = 0;
   out_8614950881650688864[303] = 0;
   out_8614950881650688864[304] = 0;
   out_8614950881650688864[305] = 0;
   out_8614950881650688864[306] = 0;
   out_8614950881650688864[307] = 1.0;
   out_8614950881650688864[308] = 0;
   out_8614950881650688864[309] = 0;
   out_8614950881650688864[310] = 0;
   out_8614950881650688864[311] = 0;
   out_8614950881650688864[312] = 0;
   out_8614950881650688864[313] = 0;
   out_8614950881650688864[314] = 0;
   out_8614950881650688864[315] = 0;
   out_8614950881650688864[316] = 0;
   out_8614950881650688864[317] = 0;
   out_8614950881650688864[318] = 0;
   out_8614950881650688864[319] = 0;
   out_8614950881650688864[320] = 0;
   out_8614950881650688864[321] = 0;
   out_8614950881650688864[322] = 0;
   out_8614950881650688864[323] = 0;
   out_8614950881650688864[324] = 0;
   out_8614950881650688864[325] = 0;
   out_8614950881650688864[326] = 0;
   out_8614950881650688864[327] = 0;
   out_8614950881650688864[328] = 0;
   out_8614950881650688864[329] = 1.0;
   out_8614950881650688864[330] = 0;
   out_8614950881650688864[331] = 0;
   out_8614950881650688864[332] = 0;
   out_8614950881650688864[333] = 0;
   out_8614950881650688864[334] = 0;
   out_8614950881650688864[335] = 0;
   out_8614950881650688864[336] = 0;
   out_8614950881650688864[337] = 0;
   out_8614950881650688864[338] = 0;
   out_8614950881650688864[339] = 0;
   out_8614950881650688864[340] = 0;
   out_8614950881650688864[341] = 0;
   out_8614950881650688864[342] = 0;
   out_8614950881650688864[343] = 0;
   out_8614950881650688864[344] = 0;
   out_8614950881650688864[345] = 0;
   out_8614950881650688864[346] = 0;
   out_8614950881650688864[347] = 0;
   out_8614950881650688864[348] = 0;
   out_8614950881650688864[349] = 0;
   out_8614950881650688864[350] = 0;
   out_8614950881650688864[351] = 1.0;
   out_8614950881650688864[352] = 0;
   out_8614950881650688864[353] = 0;
   out_8614950881650688864[354] = 0;
   out_8614950881650688864[355] = 0;
   out_8614950881650688864[356] = 0;
   out_8614950881650688864[357] = 0;
   out_8614950881650688864[358] = 0;
   out_8614950881650688864[359] = 0;
   out_8614950881650688864[360] = 0;
   out_8614950881650688864[361] = 0;
   out_8614950881650688864[362] = 0;
   out_8614950881650688864[363] = 0;
   out_8614950881650688864[364] = 0;
   out_8614950881650688864[365] = 0;
   out_8614950881650688864[366] = 0;
   out_8614950881650688864[367] = 0;
   out_8614950881650688864[368] = 0;
   out_8614950881650688864[369] = 0;
   out_8614950881650688864[370] = 0;
   out_8614950881650688864[371] = 0;
   out_8614950881650688864[372] = 0;
   out_8614950881650688864[373] = 1.0;
   out_8614950881650688864[374] = 0;
   out_8614950881650688864[375] = 0;
   out_8614950881650688864[376] = 0;
   out_8614950881650688864[377] = 0;
   out_8614950881650688864[378] = 0;
   out_8614950881650688864[379] = 0;
   out_8614950881650688864[380] = 0;
   out_8614950881650688864[381] = 0;
   out_8614950881650688864[382] = 0;
   out_8614950881650688864[383] = 0;
   out_8614950881650688864[384] = 0;
   out_8614950881650688864[385] = 0;
   out_8614950881650688864[386] = 0;
   out_8614950881650688864[387] = 0;
   out_8614950881650688864[388] = 0;
   out_8614950881650688864[389] = 0;
   out_8614950881650688864[390] = 0;
   out_8614950881650688864[391] = 0;
   out_8614950881650688864[392] = 0;
   out_8614950881650688864[393] = 0;
   out_8614950881650688864[394] = 0;
   out_8614950881650688864[395] = 1.0;
   out_8614950881650688864[396] = 0;
   out_8614950881650688864[397] = 0;
   out_8614950881650688864[398] = 0;
   out_8614950881650688864[399] = 0;
   out_8614950881650688864[400] = 0;
   out_8614950881650688864[401] = 0;
   out_8614950881650688864[402] = 0;
   out_8614950881650688864[403] = 0;
   out_8614950881650688864[404] = 0;
   out_8614950881650688864[405] = 0;
   out_8614950881650688864[406] = 0;
   out_8614950881650688864[407] = 0;
   out_8614950881650688864[408] = 0;
   out_8614950881650688864[409] = 0;
   out_8614950881650688864[410] = 0;
   out_8614950881650688864[411] = 0;
   out_8614950881650688864[412] = 0;
   out_8614950881650688864[413] = 0;
   out_8614950881650688864[414] = 0;
   out_8614950881650688864[415] = 0;
   out_8614950881650688864[416] = 0;
   out_8614950881650688864[417] = 1.0;
   out_8614950881650688864[418] = 0;
   out_8614950881650688864[419] = 0;
   out_8614950881650688864[420] = 0;
   out_8614950881650688864[421] = 0;
   out_8614950881650688864[422] = 0;
   out_8614950881650688864[423] = 0;
   out_8614950881650688864[424] = 0;
   out_8614950881650688864[425] = 0;
   out_8614950881650688864[426] = 0;
   out_8614950881650688864[427] = 0;
   out_8614950881650688864[428] = 0;
   out_8614950881650688864[429] = 0;
   out_8614950881650688864[430] = 0;
   out_8614950881650688864[431] = 0;
   out_8614950881650688864[432] = 0;
   out_8614950881650688864[433] = 0;
   out_8614950881650688864[434] = 0;
   out_8614950881650688864[435] = 0;
   out_8614950881650688864[436] = 0;
   out_8614950881650688864[437] = 0;
   out_8614950881650688864[438] = 0;
   out_8614950881650688864[439] = 1.0;
   out_8614950881650688864[440] = 0;
   out_8614950881650688864[441] = 0;
   out_8614950881650688864[442] = 0;
   out_8614950881650688864[443] = 0;
   out_8614950881650688864[444] = 0;
   out_8614950881650688864[445] = 0;
   out_8614950881650688864[446] = 0;
   out_8614950881650688864[447] = 0;
   out_8614950881650688864[448] = 0;
   out_8614950881650688864[449] = 0;
   out_8614950881650688864[450] = 0;
   out_8614950881650688864[451] = 0;
   out_8614950881650688864[452] = 0;
   out_8614950881650688864[453] = 0;
   out_8614950881650688864[454] = 0;
   out_8614950881650688864[455] = 0;
   out_8614950881650688864[456] = 0;
   out_8614950881650688864[457] = 0;
   out_8614950881650688864[458] = 0;
   out_8614950881650688864[459] = 0;
   out_8614950881650688864[460] = 0;
   out_8614950881650688864[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2595414180991291416) {
   out_2595414180991291416[0] = dt*state[7] + state[0];
   out_2595414180991291416[1] = dt*state[8] + state[1];
   out_2595414180991291416[2] = dt*state[9] + state[2];
   out_2595414180991291416[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2595414180991291416[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2595414180991291416[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2595414180991291416[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2595414180991291416[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2595414180991291416[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2595414180991291416[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2595414180991291416[10] = state[10];
   out_2595414180991291416[11] = state[11];
   out_2595414180991291416[12] = state[12];
   out_2595414180991291416[13] = state[13];
   out_2595414180991291416[14] = state[14];
   out_2595414180991291416[15] = state[15];
   out_2595414180991291416[16] = state[16];
   out_2595414180991291416[17] = state[17];
   out_2595414180991291416[18] = state[18];
   out_2595414180991291416[19] = state[19];
   out_2595414180991291416[20] = state[20];
   out_2595414180991291416[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6803033353997994321) {
   out_6803033353997994321[0] = 1;
   out_6803033353997994321[1] = 0;
   out_6803033353997994321[2] = 0;
   out_6803033353997994321[3] = 0;
   out_6803033353997994321[4] = 0;
   out_6803033353997994321[5] = 0;
   out_6803033353997994321[6] = dt;
   out_6803033353997994321[7] = 0;
   out_6803033353997994321[8] = 0;
   out_6803033353997994321[9] = 0;
   out_6803033353997994321[10] = 0;
   out_6803033353997994321[11] = 0;
   out_6803033353997994321[12] = 0;
   out_6803033353997994321[13] = 0;
   out_6803033353997994321[14] = 0;
   out_6803033353997994321[15] = 0;
   out_6803033353997994321[16] = 0;
   out_6803033353997994321[17] = 0;
   out_6803033353997994321[18] = 0;
   out_6803033353997994321[19] = 0;
   out_6803033353997994321[20] = 0;
   out_6803033353997994321[21] = 0;
   out_6803033353997994321[22] = 1;
   out_6803033353997994321[23] = 0;
   out_6803033353997994321[24] = 0;
   out_6803033353997994321[25] = 0;
   out_6803033353997994321[26] = 0;
   out_6803033353997994321[27] = 0;
   out_6803033353997994321[28] = dt;
   out_6803033353997994321[29] = 0;
   out_6803033353997994321[30] = 0;
   out_6803033353997994321[31] = 0;
   out_6803033353997994321[32] = 0;
   out_6803033353997994321[33] = 0;
   out_6803033353997994321[34] = 0;
   out_6803033353997994321[35] = 0;
   out_6803033353997994321[36] = 0;
   out_6803033353997994321[37] = 0;
   out_6803033353997994321[38] = 0;
   out_6803033353997994321[39] = 0;
   out_6803033353997994321[40] = 0;
   out_6803033353997994321[41] = 0;
   out_6803033353997994321[42] = 0;
   out_6803033353997994321[43] = 0;
   out_6803033353997994321[44] = 1;
   out_6803033353997994321[45] = 0;
   out_6803033353997994321[46] = 0;
   out_6803033353997994321[47] = 0;
   out_6803033353997994321[48] = 0;
   out_6803033353997994321[49] = 0;
   out_6803033353997994321[50] = dt;
   out_6803033353997994321[51] = 0;
   out_6803033353997994321[52] = 0;
   out_6803033353997994321[53] = 0;
   out_6803033353997994321[54] = 0;
   out_6803033353997994321[55] = 0;
   out_6803033353997994321[56] = 0;
   out_6803033353997994321[57] = 0;
   out_6803033353997994321[58] = 0;
   out_6803033353997994321[59] = 0;
   out_6803033353997994321[60] = 0;
   out_6803033353997994321[61] = 0;
   out_6803033353997994321[62] = 0;
   out_6803033353997994321[63] = 0;
   out_6803033353997994321[64] = 0;
   out_6803033353997994321[65] = 0;
   out_6803033353997994321[66] = 1;
   out_6803033353997994321[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6803033353997994321[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6803033353997994321[69] = 0;
   out_6803033353997994321[70] = 0;
   out_6803033353997994321[71] = 0;
   out_6803033353997994321[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6803033353997994321[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6803033353997994321[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6803033353997994321[75] = 0;
   out_6803033353997994321[76] = 0;
   out_6803033353997994321[77] = 0;
   out_6803033353997994321[78] = 0;
   out_6803033353997994321[79] = 0;
   out_6803033353997994321[80] = 0;
   out_6803033353997994321[81] = 0;
   out_6803033353997994321[82] = 0;
   out_6803033353997994321[83] = 0;
   out_6803033353997994321[84] = 0;
   out_6803033353997994321[85] = 0;
   out_6803033353997994321[86] = 0;
   out_6803033353997994321[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6803033353997994321[88] = 1;
   out_6803033353997994321[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6803033353997994321[90] = 0;
   out_6803033353997994321[91] = 0;
   out_6803033353997994321[92] = 0;
   out_6803033353997994321[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6803033353997994321[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6803033353997994321[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6803033353997994321[96] = 0;
   out_6803033353997994321[97] = 0;
   out_6803033353997994321[98] = 0;
   out_6803033353997994321[99] = 0;
   out_6803033353997994321[100] = 0;
   out_6803033353997994321[101] = 0;
   out_6803033353997994321[102] = 0;
   out_6803033353997994321[103] = 0;
   out_6803033353997994321[104] = 0;
   out_6803033353997994321[105] = 0;
   out_6803033353997994321[106] = 0;
   out_6803033353997994321[107] = 0;
   out_6803033353997994321[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6803033353997994321[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6803033353997994321[110] = 1;
   out_6803033353997994321[111] = 0;
   out_6803033353997994321[112] = 0;
   out_6803033353997994321[113] = 0;
   out_6803033353997994321[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6803033353997994321[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6803033353997994321[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6803033353997994321[117] = 0;
   out_6803033353997994321[118] = 0;
   out_6803033353997994321[119] = 0;
   out_6803033353997994321[120] = 0;
   out_6803033353997994321[121] = 0;
   out_6803033353997994321[122] = 0;
   out_6803033353997994321[123] = 0;
   out_6803033353997994321[124] = 0;
   out_6803033353997994321[125] = 0;
   out_6803033353997994321[126] = 0;
   out_6803033353997994321[127] = 0;
   out_6803033353997994321[128] = 0;
   out_6803033353997994321[129] = 0;
   out_6803033353997994321[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6803033353997994321[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6803033353997994321[132] = 1;
   out_6803033353997994321[133] = 0;
   out_6803033353997994321[134] = 0;
   out_6803033353997994321[135] = 0;
   out_6803033353997994321[136] = 0;
   out_6803033353997994321[137] = 0;
   out_6803033353997994321[138] = 0;
   out_6803033353997994321[139] = 0;
   out_6803033353997994321[140] = 0;
   out_6803033353997994321[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6803033353997994321[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6803033353997994321[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6803033353997994321[144] = 0;
   out_6803033353997994321[145] = 0;
   out_6803033353997994321[146] = 0;
   out_6803033353997994321[147] = 0;
   out_6803033353997994321[148] = 0;
   out_6803033353997994321[149] = 0;
   out_6803033353997994321[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6803033353997994321[151] = 0;
   out_6803033353997994321[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6803033353997994321[153] = 0;
   out_6803033353997994321[154] = 1;
   out_6803033353997994321[155] = 0;
   out_6803033353997994321[156] = 0;
   out_6803033353997994321[157] = 0;
   out_6803033353997994321[158] = 0;
   out_6803033353997994321[159] = 0;
   out_6803033353997994321[160] = 0;
   out_6803033353997994321[161] = 0;
   out_6803033353997994321[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6803033353997994321[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6803033353997994321[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6803033353997994321[165] = 0;
   out_6803033353997994321[166] = 0;
   out_6803033353997994321[167] = 0;
   out_6803033353997994321[168] = 0;
   out_6803033353997994321[169] = 0;
   out_6803033353997994321[170] = 0;
   out_6803033353997994321[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6803033353997994321[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6803033353997994321[173] = 0;
   out_6803033353997994321[174] = 0;
   out_6803033353997994321[175] = 0;
   out_6803033353997994321[176] = 1;
   out_6803033353997994321[177] = 0;
   out_6803033353997994321[178] = 0;
   out_6803033353997994321[179] = 0;
   out_6803033353997994321[180] = 0;
   out_6803033353997994321[181] = 0;
   out_6803033353997994321[182] = 0;
   out_6803033353997994321[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6803033353997994321[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6803033353997994321[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6803033353997994321[186] = 0;
   out_6803033353997994321[187] = 0;
   out_6803033353997994321[188] = 0;
   out_6803033353997994321[189] = 0;
   out_6803033353997994321[190] = 0;
   out_6803033353997994321[191] = 0;
   out_6803033353997994321[192] = 0;
   out_6803033353997994321[193] = 0;
   out_6803033353997994321[194] = 0;
   out_6803033353997994321[195] = 0;
   out_6803033353997994321[196] = 0;
   out_6803033353997994321[197] = 0;
   out_6803033353997994321[198] = 1;
   out_6803033353997994321[199] = 0;
   out_6803033353997994321[200] = 0;
   out_6803033353997994321[201] = 0;
   out_6803033353997994321[202] = 0;
   out_6803033353997994321[203] = 0;
   out_6803033353997994321[204] = 0;
   out_6803033353997994321[205] = 0;
   out_6803033353997994321[206] = 0;
   out_6803033353997994321[207] = 0;
   out_6803033353997994321[208] = 0;
   out_6803033353997994321[209] = 0;
   out_6803033353997994321[210] = 0;
   out_6803033353997994321[211] = 0;
   out_6803033353997994321[212] = 0;
   out_6803033353997994321[213] = 0;
   out_6803033353997994321[214] = 0;
   out_6803033353997994321[215] = 0;
   out_6803033353997994321[216] = 0;
   out_6803033353997994321[217] = 0;
   out_6803033353997994321[218] = 0;
   out_6803033353997994321[219] = 0;
   out_6803033353997994321[220] = 1;
   out_6803033353997994321[221] = 0;
   out_6803033353997994321[222] = 0;
   out_6803033353997994321[223] = 0;
   out_6803033353997994321[224] = 0;
   out_6803033353997994321[225] = 0;
   out_6803033353997994321[226] = 0;
   out_6803033353997994321[227] = 0;
   out_6803033353997994321[228] = 0;
   out_6803033353997994321[229] = 0;
   out_6803033353997994321[230] = 0;
   out_6803033353997994321[231] = 0;
   out_6803033353997994321[232] = 0;
   out_6803033353997994321[233] = 0;
   out_6803033353997994321[234] = 0;
   out_6803033353997994321[235] = 0;
   out_6803033353997994321[236] = 0;
   out_6803033353997994321[237] = 0;
   out_6803033353997994321[238] = 0;
   out_6803033353997994321[239] = 0;
   out_6803033353997994321[240] = 0;
   out_6803033353997994321[241] = 0;
   out_6803033353997994321[242] = 1;
   out_6803033353997994321[243] = 0;
   out_6803033353997994321[244] = 0;
   out_6803033353997994321[245] = 0;
   out_6803033353997994321[246] = 0;
   out_6803033353997994321[247] = 0;
   out_6803033353997994321[248] = 0;
   out_6803033353997994321[249] = 0;
   out_6803033353997994321[250] = 0;
   out_6803033353997994321[251] = 0;
   out_6803033353997994321[252] = 0;
   out_6803033353997994321[253] = 0;
   out_6803033353997994321[254] = 0;
   out_6803033353997994321[255] = 0;
   out_6803033353997994321[256] = 0;
   out_6803033353997994321[257] = 0;
   out_6803033353997994321[258] = 0;
   out_6803033353997994321[259] = 0;
   out_6803033353997994321[260] = 0;
   out_6803033353997994321[261] = 0;
   out_6803033353997994321[262] = 0;
   out_6803033353997994321[263] = 0;
   out_6803033353997994321[264] = 1;
   out_6803033353997994321[265] = 0;
   out_6803033353997994321[266] = 0;
   out_6803033353997994321[267] = 0;
   out_6803033353997994321[268] = 0;
   out_6803033353997994321[269] = 0;
   out_6803033353997994321[270] = 0;
   out_6803033353997994321[271] = 0;
   out_6803033353997994321[272] = 0;
   out_6803033353997994321[273] = 0;
   out_6803033353997994321[274] = 0;
   out_6803033353997994321[275] = 0;
   out_6803033353997994321[276] = 0;
   out_6803033353997994321[277] = 0;
   out_6803033353997994321[278] = 0;
   out_6803033353997994321[279] = 0;
   out_6803033353997994321[280] = 0;
   out_6803033353997994321[281] = 0;
   out_6803033353997994321[282] = 0;
   out_6803033353997994321[283] = 0;
   out_6803033353997994321[284] = 0;
   out_6803033353997994321[285] = 0;
   out_6803033353997994321[286] = 1;
   out_6803033353997994321[287] = 0;
   out_6803033353997994321[288] = 0;
   out_6803033353997994321[289] = 0;
   out_6803033353997994321[290] = 0;
   out_6803033353997994321[291] = 0;
   out_6803033353997994321[292] = 0;
   out_6803033353997994321[293] = 0;
   out_6803033353997994321[294] = 0;
   out_6803033353997994321[295] = 0;
   out_6803033353997994321[296] = 0;
   out_6803033353997994321[297] = 0;
   out_6803033353997994321[298] = 0;
   out_6803033353997994321[299] = 0;
   out_6803033353997994321[300] = 0;
   out_6803033353997994321[301] = 0;
   out_6803033353997994321[302] = 0;
   out_6803033353997994321[303] = 0;
   out_6803033353997994321[304] = 0;
   out_6803033353997994321[305] = 0;
   out_6803033353997994321[306] = 0;
   out_6803033353997994321[307] = 0;
   out_6803033353997994321[308] = 1;
   out_6803033353997994321[309] = 0;
   out_6803033353997994321[310] = 0;
   out_6803033353997994321[311] = 0;
   out_6803033353997994321[312] = 0;
   out_6803033353997994321[313] = 0;
   out_6803033353997994321[314] = 0;
   out_6803033353997994321[315] = 0;
   out_6803033353997994321[316] = 0;
   out_6803033353997994321[317] = 0;
   out_6803033353997994321[318] = 0;
   out_6803033353997994321[319] = 0;
   out_6803033353997994321[320] = 0;
   out_6803033353997994321[321] = 0;
   out_6803033353997994321[322] = 0;
   out_6803033353997994321[323] = 0;
   out_6803033353997994321[324] = 0;
   out_6803033353997994321[325] = 0;
   out_6803033353997994321[326] = 0;
   out_6803033353997994321[327] = 0;
   out_6803033353997994321[328] = 0;
   out_6803033353997994321[329] = 0;
   out_6803033353997994321[330] = 1;
   out_6803033353997994321[331] = 0;
   out_6803033353997994321[332] = 0;
   out_6803033353997994321[333] = 0;
   out_6803033353997994321[334] = 0;
   out_6803033353997994321[335] = 0;
   out_6803033353997994321[336] = 0;
   out_6803033353997994321[337] = 0;
   out_6803033353997994321[338] = 0;
   out_6803033353997994321[339] = 0;
   out_6803033353997994321[340] = 0;
   out_6803033353997994321[341] = 0;
   out_6803033353997994321[342] = 0;
   out_6803033353997994321[343] = 0;
   out_6803033353997994321[344] = 0;
   out_6803033353997994321[345] = 0;
   out_6803033353997994321[346] = 0;
   out_6803033353997994321[347] = 0;
   out_6803033353997994321[348] = 0;
   out_6803033353997994321[349] = 0;
   out_6803033353997994321[350] = 0;
   out_6803033353997994321[351] = 0;
   out_6803033353997994321[352] = 1;
   out_6803033353997994321[353] = 0;
   out_6803033353997994321[354] = 0;
   out_6803033353997994321[355] = 0;
   out_6803033353997994321[356] = 0;
   out_6803033353997994321[357] = 0;
   out_6803033353997994321[358] = 0;
   out_6803033353997994321[359] = 0;
   out_6803033353997994321[360] = 0;
   out_6803033353997994321[361] = 0;
   out_6803033353997994321[362] = 0;
   out_6803033353997994321[363] = 0;
   out_6803033353997994321[364] = 0;
   out_6803033353997994321[365] = 0;
   out_6803033353997994321[366] = 0;
   out_6803033353997994321[367] = 0;
   out_6803033353997994321[368] = 0;
   out_6803033353997994321[369] = 0;
   out_6803033353997994321[370] = 0;
   out_6803033353997994321[371] = 0;
   out_6803033353997994321[372] = 0;
   out_6803033353997994321[373] = 0;
   out_6803033353997994321[374] = 1;
   out_6803033353997994321[375] = 0;
   out_6803033353997994321[376] = 0;
   out_6803033353997994321[377] = 0;
   out_6803033353997994321[378] = 0;
   out_6803033353997994321[379] = 0;
   out_6803033353997994321[380] = 0;
   out_6803033353997994321[381] = 0;
   out_6803033353997994321[382] = 0;
   out_6803033353997994321[383] = 0;
   out_6803033353997994321[384] = 0;
   out_6803033353997994321[385] = 0;
   out_6803033353997994321[386] = 0;
   out_6803033353997994321[387] = 0;
   out_6803033353997994321[388] = 0;
   out_6803033353997994321[389] = 0;
   out_6803033353997994321[390] = 0;
   out_6803033353997994321[391] = 0;
   out_6803033353997994321[392] = 0;
   out_6803033353997994321[393] = 0;
   out_6803033353997994321[394] = 0;
   out_6803033353997994321[395] = 0;
   out_6803033353997994321[396] = 1;
   out_6803033353997994321[397] = 0;
   out_6803033353997994321[398] = 0;
   out_6803033353997994321[399] = 0;
   out_6803033353997994321[400] = 0;
   out_6803033353997994321[401] = 0;
   out_6803033353997994321[402] = 0;
   out_6803033353997994321[403] = 0;
   out_6803033353997994321[404] = 0;
   out_6803033353997994321[405] = 0;
   out_6803033353997994321[406] = 0;
   out_6803033353997994321[407] = 0;
   out_6803033353997994321[408] = 0;
   out_6803033353997994321[409] = 0;
   out_6803033353997994321[410] = 0;
   out_6803033353997994321[411] = 0;
   out_6803033353997994321[412] = 0;
   out_6803033353997994321[413] = 0;
   out_6803033353997994321[414] = 0;
   out_6803033353997994321[415] = 0;
   out_6803033353997994321[416] = 0;
   out_6803033353997994321[417] = 0;
   out_6803033353997994321[418] = 1;
   out_6803033353997994321[419] = 0;
   out_6803033353997994321[420] = 0;
   out_6803033353997994321[421] = 0;
   out_6803033353997994321[422] = 0;
   out_6803033353997994321[423] = 0;
   out_6803033353997994321[424] = 0;
   out_6803033353997994321[425] = 0;
   out_6803033353997994321[426] = 0;
   out_6803033353997994321[427] = 0;
   out_6803033353997994321[428] = 0;
   out_6803033353997994321[429] = 0;
   out_6803033353997994321[430] = 0;
   out_6803033353997994321[431] = 0;
   out_6803033353997994321[432] = 0;
   out_6803033353997994321[433] = 0;
   out_6803033353997994321[434] = 0;
   out_6803033353997994321[435] = 0;
   out_6803033353997994321[436] = 0;
   out_6803033353997994321[437] = 0;
   out_6803033353997994321[438] = 0;
   out_6803033353997994321[439] = 0;
   out_6803033353997994321[440] = 1;
}
void h_4(double *state, double *unused, double *out_616930058420824) {
   out_616930058420824[0] = state[10] + state[13];
   out_616930058420824[1] = state[11] + state[14];
   out_616930058420824[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5710146728240620416) {
   out_5710146728240620416[0] = 0;
   out_5710146728240620416[1] = 0;
   out_5710146728240620416[2] = 0;
   out_5710146728240620416[3] = 0;
   out_5710146728240620416[4] = 0;
   out_5710146728240620416[5] = 0;
   out_5710146728240620416[6] = 0;
   out_5710146728240620416[7] = 0;
   out_5710146728240620416[8] = 0;
   out_5710146728240620416[9] = 0;
   out_5710146728240620416[10] = 1;
   out_5710146728240620416[11] = 0;
   out_5710146728240620416[12] = 0;
   out_5710146728240620416[13] = 1;
   out_5710146728240620416[14] = 0;
   out_5710146728240620416[15] = 0;
   out_5710146728240620416[16] = 0;
   out_5710146728240620416[17] = 0;
   out_5710146728240620416[18] = 0;
   out_5710146728240620416[19] = 0;
   out_5710146728240620416[20] = 0;
   out_5710146728240620416[21] = 0;
   out_5710146728240620416[22] = 0;
   out_5710146728240620416[23] = 0;
   out_5710146728240620416[24] = 0;
   out_5710146728240620416[25] = 0;
   out_5710146728240620416[26] = 0;
   out_5710146728240620416[27] = 0;
   out_5710146728240620416[28] = 0;
   out_5710146728240620416[29] = 0;
   out_5710146728240620416[30] = 0;
   out_5710146728240620416[31] = 0;
   out_5710146728240620416[32] = 0;
   out_5710146728240620416[33] = 1;
   out_5710146728240620416[34] = 0;
   out_5710146728240620416[35] = 0;
   out_5710146728240620416[36] = 1;
   out_5710146728240620416[37] = 0;
   out_5710146728240620416[38] = 0;
   out_5710146728240620416[39] = 0;
   out_5710146728240620416[40] = 0;
   out_5710146728240620416[41] = 0;
   out_5710146728240620416[42] = 0;
   out_5710146728240620416[43] = 0;
   out_5710146728240620416[44] = 0;
   out_5710146728240620416[45] = 0;
   out_5710146728240620416[46] = 0;
   out_5710146728240620416[47] = 0;
   out_5710146728240620416[48] = 0;
   out_5710146728240620416[49] = 0;
   out_5710146728240620416[50] = 0;
   out_5710146728240620416[51] = 0;
   out_5710146728240620416[52] = 0;
   out_5710146728240620416[53] = 0;
   out_5710146728240620416[54] = 0;
   out_5710146728240620416[55] = 0;
   out_5710146728240620416[56] = 1;
   out_5710146728240620416[57] = 0;
   out_5710146728240620416[58] = 0;
   out_5710146728240620416[59] = 1;
   out_5710146728240620416[60] = 0;
   out_5710146728240620416[61] = 0;
   out_5710146728240620416[62] = 0;
   out_5710146728240620416[63] = 0;
   out_5710146728240620416[64] = 0;
   out_5710146728240620416[65] = 0;
}
void h_9(double *state, double *unused, double *out_3011225497219900464) {
   out_3011225497219900464[0] = state[10];
   out_3011225497219900464[1] = state[11];
   out_3011225497219900464[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1577072207023827054) {
   out_1577072207023827054[0] = 0;
   out_1577072207023827054[1] = 0;
   out_1577072207023827054[2] = 0;
   out_1577072207023827054[3] = 0;
   out_1577072207023827054[4] = 0;
   out_1577072207023827054[5] = 0;
   out_1577072207023827054[6] = 0;
   out_1577072207023827054[7] = 0;
   out_1577072207023827054[8] = 0;
   out_1577072207023827054[9] = 0;
   out_1577072207023827054[10] = 1;
   out_1577072207023827054[11] = 0;
   out_1577072207023827054[12] = 0;
   out_1577072207023827054[13] = 0;
   out_1577072207023827054[14] = 0;
   out_1577072207023827054[15] = 0;
   out_1577072207023827054[16] = 0;
   out_1577072207023827054[17] = 0;
   out_1577072207023827054[18] = 0;
   out_1577072207023827054[19] = 0;
   out_1577072207023827054[20] = 0;
   out_1577072207023827054[21] = 0;
   out_1577072207023827054[22] = 0;
   out_1577072207023827054[23] = 0;
   out_1577072207023827054[24] = 0;
   out_1577072207023827054[25] = 0;
   out_1577072207023827054[26] = 0;
   out_1577072207023827054[27] = 0;
   out_1577072207023827054[28] = 0;
   out_1577072207023827054[29] = 0;
   out_1577072207023827054[30] = 0;
   out_1577072207023827054[31] = 0;
   out_1577072207023827054[32] = 0;
   out_1577072207023827054[33] = 1;
   out_1577072207023827054[34] = 0;
   out_1577072207023827054[35] = 0;
   out_1577072207023827054[36] = 0;
   out_1577072207023827054[37] = 0;
   out_1577072207023827054[38] = 0;
   out_1577072207023827054[39] = 0;
   out_1577072207023827054[40] = 0;
   out_1577072207023827054[41] = 0;
   out_1577072207023827054[42] = 0;
   out_1577072207023827054[43] = 0;
   out_1577072207023827054[44] = 0;
   out_1577072207023827054[45] = 0;
   out_1577072207023827054[46] = 0;
   out_1577072207023827054[47] = 0;
   out_1577072207023827054[48] = 0;
   out_1577072207023827054[49] = 0;
   out_1577072207023827054[50] = 0;
   out_1577072207023827054[51] = 0;
   out_1577072207023827054[52] = 0;
   out_1577072207023827054[53] = 0;
   out_1577072207023827054[54] = 0;
   out_1577072207023827054[55] = 0;
   out_1577072207023827054[56] = 1;
   out_1577072207023827054[57] = 0;
   out_1577072207023827054[58] = 0;
   out_1577072207023827054[59] = 0;
   out_1577072207023827054[60] = 0;
   out_1577072207023827054[61] = 0;
   out_1577072207023827054[62] = 0;
   out_1577072207023827054[63] = 0;
   out_1577072207023827054[64] = 0;
   out_1577072207023827054[65] = 0;
}
void h_10(double *state, double *unused, double *out_1629810256331739409) {
   out_1629810256331739409[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1629810256331739409[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1629810256331739409[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5489835648690208687) {
   out_5489835648690208687[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5489835648690208687[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5489835648690208687[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5489835648690208687[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5489835648690208687[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5489835648690208687[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5489835648690208687[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5489835648690208687[7] = 0;
   out_5489835648690208687[8] = 0;
   out_5489835648690208687[9] = 0;
   out_5489835648690208687[10] = 0;
   out_5489835648690208687[11] = 0;
   out_5489835648690208687[12] = 0;
   out_5489835648690208687[13] = 0;
   out_5489835648690208687[14] = 0;
   out_5489835648690208687[15] = 0;
   out_5489835648690208687[16] = 1;
   out_5489835648690208687[17] = 0;
   out_5489835648690208687[18] = 0;
   out_5489835648690208687[19] = 1;
   out_5489835648690208687[20] = 0;
   out_5489835648690208687[21] = 0;
   out_5489835648690208687[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5489835648690208687[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5489835648690208687[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5489835648690208687[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5489835648690208687[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5489835648690208687[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5489835648690208687[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5489835648690208687[29] = 0;
   out_5489835648690208687[30] = 0;
   out_5489835648690208687[31] = 0;
   out_5489835648690208687[32] = 0;
   out_5489835648690208687[33] = 0;
   out_5489835648690208687[34] = 0;
   out_5489835648690208687[35] = 0;
   out_5489835648690208687[36] = 0;
   out_5489835648690208687[37] = 0;
   out_5489835648690208687[38] = 0;
   out_5489835648690208687[39] = 1;
   out_5489835648690208687[40] = 0;
   out_5489835648690208687[41] = 0;
   out_5489835648690208687[42] = 1;
   out_5489835648690208687[43] = 0;
   out_5489835648690208687[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5489835648690208687[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5489835648690208687[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5489835648690208687[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5489835648690208687[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5489835648690208687[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5489835648690208687[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5489835648690208687[51] = 0;
   out_5489835648690208687[52] = 0;
   out_5489835648690208687[53] = 0;
   out_5489835648690208687[54] = 0;
   out_5489835648690208687[55] = 0;
   out_5489835648690208687[56] = 0;
   out_5489835648690208687[57] = 0;
   out_5489835648690208687[58] = 0;
   out_5489835648690208687[59] = 0;
   out_5489835648690208687[60] = 0;
   out_5489835648690208687[61] = 0;
   out_5489835648690208687[62] = 1;
   out_5489835648690208687[63] = 0;
   out_5489835648690208687[64] = 0;
   out_5489835648690208687[65] = 1;
}
void h_12(double *state, double *unused, double *out_20494760359511289) {
   out_20494760359511289[0] = state[0];
   out_20494760359511289[1] = state[1];
   out_20494760359511289[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6355338968426198204) {
   out_6355338968426198204[0] = 1;
   out_6355338968426198204[1] = 0;
   out_6355338968426198204[2] = 0;
   out_6355338968426198204[3] = 0;
   out_6355338968426198204[4] = 0;
   out_6355338968426198204[5] = 0;
   out_6355338968426198204[6] = 0;
   out_6355338968426198204[7] = 0;
   out_6355338968426198204[8] = 0;
   out_6355338968426198204[9] = 0;
   out_6355338968426198204[10] = 0;
   out_6355338968426198204[11] = 0;
   out_6355338968426198204[12] = 0;
   out_6355338968426198204[13] = 0;
   out_6355338968426198204[14] = 0;
   out_6355338968426198204[15] = 0;
   out_6355338968426198204[16] = 0;
   out_6355338968426198204[17] = 0;
   out_6355338968426198204[18] = 0;
   out_6355338968426198204[19] = 0;
   out_6355338968426198204[20] = 0;
   out_6355338968426198204[21] = 0;
   out_6355338968426198204[22] = 0;
   out_6355338968426198204[23] = 1;
   out_6355338968426198204[24] = 0;
   out_6355338968426198204[25] = 0;
   out_6355338968426198204[26] = 0;
   out_6355338968426198204[27] = 0;
   out_6355338968426198204[28] = 0;
   out_6355338968426198204[29] = 0;
   out_6355338968426198204[30] = 0;
   out_6355338968426198204[31] = 0;
   out_6355338968426198204[32] = 0;
   out_6355338968426198204[33] = 0;
   out_6355338968426198204[34] = 0;
   out_6355338968426198204[35] = 0;
   out_6355338968426198204[36] = 0;
   out_6355338968426198204[37] = 0;
   out_6355338968426198204[38] = 0;
   out_6355338968426198204[39] = 0;
   out_6355338968426198204[40] = 0;
   out_6355338968426198204[41] = 0;
   out_6355338968426198204[42] = 0;
   out_6355338968426198204[43] = 0;
   out_6355338968426198204[44] = 0;
   out_6355338968426198204[45] = 0;
   out_6355338968426198204[46] = 1;
   out_6355338968426198204[47] = 0;
   out_6355338968426198204[48] = 0;
   out_6355338968426198204[49] = 0;
   out_6355338968426198204[50] = 0;
   out_6355338968426198204[51] = 0;
   out_6355338968426198204[52] = 0;
   out_6355338968426198204[53] = 0;
   out_6355338968426198204[54] = 0;
   out_6355338968426198204[55] = 0;
   out_6355338968426198204[56] = 0;
   out_6355338968426198204[57] = 0;
   out_6355338968426198204[58] = 0;
   out_6355338968426198204[59] = 0;
   out_6355338968426198204[60] = 0;
   out_6355338968426198204[61] = 0;
   out_6355338968426198204[62] = 0;
   out_6355338968426198204[63] = 0;
   out_6355338968426198204[64] = 0;
   out_6355338968426198204[65] = 0;
}
void h_35(double *state, double *unused, double *out_2434426115653514957) {
   out_2434426115653514957[0] = state[7];
   out_2434426115653514957[1] = state[8];
   out_2434426115653514957[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9100902000751211913) {
   out_9100902000751211913[0] = 0;
   out_9100902000751211913[1] = 0;
   out_9100902000751211913[2] = 0;
   out_9100902000751211913[3] = 0;
   out_9100902000751211913[4] = 0;
   out_9100902000751211913[5] = 0;
   out_9100902000751211913[6] = 0;
   out_9100902000751211913[7] = 1;
   out_9100902000751211913[8] = 0;
   out_9100902000751211913[9] = 0;
   out_9100902000751211913[10] = 0;
   out_9100902000751211913[11] = 0;
   out_9100902000751211913[12] = 0;
   out_9100902000751211913[13] = 0;
   out_9100902000751211913[14] = 0;
   out_9100902000751211913[15] = 0;
   out_9100902000751211913[16] = 0;
   out_9100902000751211913[17] = 0;
   out_9100902000751211913[18] = 0;
   out_9100902000751211913[19] = 0;
   out_9100902000751211913[20] = 0;
   out_9100902000751211913[21] = 0;
   out_9100902000751211913[22] = 0;
   out_9100902000751211913[23] = 0;
   out_9100902000751211913[24] = 0;
   out_9100902000751211913[25] = 0;
   out_9100902000751211913[26] = 0;
   out_9100902000751211913[27] = 0;
   out_9100902000751211913[28] = 0;
   out_9100902000751211913[29] = 0;
   out_9100902000751211913[30] = 1;
   out_9100902000751211913[31] = 0;
   out_9100902000751211913[32] = 0;
   out_9100902000751211913[33] = 0;
   out_9100902000751211913[34] = 0;
   out_9100902000751211913[35] = 0;
   out_9100902000751211913[36] = 0;
   out_9100902000751211913[37] = 0;
   out_9100902000751211913[38] = 0;
   out_9100902000751211913[39] = 0;
   out_9100902000751211913[40] = 0;
   out_9100902000751211913[41] = 0;
   out_9100902000751211913[42] = 0;
   out_9100902000751211913[43] = 0;
   out_9100902000751211913[44] = 0;
   out_9100902000751211913[45] = 0;
   out_9100902000751211913[46] = 0;
   out_9100902000751211913[47] = 0;
   out_9100902000751211913[48] = 0;
   out_9100902000751211913[49] = 0;
   out_9100902000751211913[50] = 0;
   out_9100902000751211913[51] = 0;
   out_9100902000751211913[52] = 0;
   out_9100902000751211913[53] = 1;
   out_9100902000751211913[54] = 0;
   out_9100902000751211913[55] = 0;
   out_9100902000751211913[56] = 0;
   out_9100902000751211913[57] = 0;
   out_9100902000751211913[58] = 0;
   out_9100902000751211913[59] = 0;
   out_9100902000751211913[60] = 0;
   out_9100902000751211913[61] = 0;
   out_9100902000751211913[62] = 0;
   out_9100902000751211913[63] = 0;
   out_9100902000751211913[64] = 0;
   out_9100902000751211913[65] = 0;
}
void h_32(double *state, double *unused, double *out_4703891601766069245) {
   out_4703891601766069245[0] = state[3];
   out_4703891601766069245[1] = state[4];
   out_4703891601766069245[2] = state[5];
   out_4703891601766069245[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2212319885927272571) {
   out_2212319885927272571[0] = 0;
   out_2212319885927272571[1] = 0;
   out_2212319885927272571[2] = 0;
   out_2212319885927272571[3] = 1;
   out_2212319885927272571[4] = 0;
   out_2212319885927272571[5] = 0;
   out_2212319885927272571[6] = 0;
   out_2212319885927272571[7] = 0;
   out_2212319885927272571[8] = 0;
   out_2212319885927272571[9] = 0;
   out_2212319885927272571[10] = 0;
   out_2212319885927272571[11] = 0;
   out_2212319885927272571[12] = 0;
   out_2212319885927272571[13] = 0;
   out_2212319885927272571[14] = 0;
   out_2212319885927272571[15] = 0;
   out_2212319885927272571[16] = 0;
   out_2212319885927272571[17] = 0;
   out_2212319885927272571[18] = 0;
   out_2212319885927272571[19] = 0;
   out_2212319885927272571[20] = 0;
   out_2212319885927272571[21] = 0;
   out_2212319885927272571[22] = 0;
   out_2212319885927272571[23] = 0;
   out_2212319885927272571[24] = 0;
   out_2212319885927272571[25] = 0;
   out_2212319885927272571[26] = 1;
   out_2212319885927272571[27] = 0;
   out_2212319885927272571[28] = 0;
   out_2212319885927272571[29] = 0;
   out_2212319885927272571[30] = 0;
   out_2212319885927272571[31] = 0;
   out_2212319885927272571[32] = 0;
   out_2212319885927272571[33] = 0;
   out_2212319885927272571[34] = 0;
   out_2212319885927272571[35] = 0;
   out_2212319885927272571[36] = 0;
   out_2212319885927272571[37] = 0;
   out_2212319885927272571[38] = 0;
   out_2212319885927272571[39] = 0;
   out_2212319885927272571[40] = 0;
   out_2212319885927272571[41] = 0;
   out_2212319885927272571[42] = 0;
   out_2212319885927272571[43] = 0;
   out_2212319885927272571[44] = 0;
   out_2212319885927272571[45] = 0;
   out_2212319885927272571[46] = 0;
   out_2212319885927272571[47] = 0;
   out_2212319885927272571[48] = 0;
   out_2212319885927272571[49] = 1;
   out_2212319885927272571[50] = 0;
   out_2212319885927272571[51] = 0;
   out_2212319885927272571[52] = 0;
   out_2212319885927272571[53] = 0;
   out_2212319885927272571[54] = 0;
   out_2212319885927272571[55] = 0;
   out_2212319885927272571[56] = 0;
   out_2212319885927272571[57] = 0;
   out_2212319885927272571[58] = 0;
   out_2212319885927272571[59] = 0;
   out_2212319885927272571[60] = 0;
   out_2212319885927272571[61] = 0;
   out_2212319885927272571[62] = 0;
   out_2212319885927272571[63] = 0;
   out_2212319885927272571[64] = 0;
   out_2212319885927272571[65] = 0;
   out_2212319885927272571[66] = 0;
   out_2212319885927272571[67] = 0;
   out_2212319885927272571[68] = 0;
   out_2212319885927272571[69] = 0;
   out_2212319885927272571[70] = 0;
   out_2212319885927272571[71] = 0;
   out_2212319885927272571[72] = 1;
   out_2212319885927272571[73] = 0;
   out_2212319885927272571[74] = 0;
   out_2212319885927272571[75] = 0;
   out_2212319885927272571[76] = 0;
   out_2212319885927272571[77] = 0;
   out_2212319885927272571[78] = 0;
   out_2212319885927272571[79] = 0;
   out_2212319885927272571[80] = 0;
   out_2212319885927272571[81] = 0;
   out_2212319885927272571[82] = 0;
   out_2212319885927272571[83] = 0;
   out_2212319885927272571[84] = 0;
   out_2212319885927272571[85] = 0;
   out_2212319885927272571[86] = 0;
   out_2212319885927272571[87] = 0;
}
void h_13(double *state, double *unused, double *out_3772027060503193218) {
   out_3772027060503193218[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3772027060503193218[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3772027060503193218[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3597831966201927386) {
   out_3597831966201927386[0] = 0;
   out_3597831966201927386[1] = 0;
   out_3597831966201927386[2] = 0;
   out_3597831966201927386[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3597831966201927386[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3597831966201927386[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3597831966201927386[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3597831966201927386[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3597831966201927386[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3597831966201927386[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3597831966201927386[10] = 0;
   out_3597831966201927386[11] = 0;
   out_3597831966201927386[12] = 0;
   out_3597831966201927386[13] = 0;
   out_3597831966201927386[14] = 0;
   out_3597831966201927386[15] = 0;
   out_3597831966201927386[16] = 0;
   out_3597831966201927386[17] = 0;
   out_3597831966201927386[18] = 0;
   out_3597831966201927386[19] = 0;
   out_3597831966201927386[20] = 0;
   out_3597831966201927386[21] = 0;
   out_3597831966201927386[22] = 0;
   out_3597831966201927386[23] = 0;
   out_3597831966201927386[24] = 0;
   out_3597831966201927386[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3597831966201927386[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3597831966201927386[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3597831966201927386[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3597831966201927386[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3597831966201927386[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3597831966201927386[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3597831966201927386[32] = 0;
   out_3597831966201927386[33] = 0;
   out_3597831966201927386[34] = 0;
   out_3597831966201927386[35] = 0;
   out_3597831966201927386[36] = 0;
   out_3597831966201927386[37] = 0;
   out_3597831966201927386[38] = 0;
   out_3597831966201927386[39] = 0;
   out_3597831966201927386[40] = 0;
   out_3597831966201927386[41] = 0;
   out_3597831966201927386[42] = 0;
   out_3597831966201927386[43] = 0;
   out_3597831966201927386[44] = 0;
   out_3597831966201927386[45] = 0;
   out_3597831966201927386[46] = 0;
   out_3597831966201927386[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3597831966201927386[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3597831966201927386[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3597831966201927386[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3597831966201927386[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3597831966201927386[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3597831966201927386[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3597831966201927386[54] = 0;
   out_3597831966201927386[55] = 0;
   out_3597831966201927386[56] = 0;
   out_3597831966201927386[57] = 0;
   out_3597831966201927386[58] = 0;
   out_3597831966201927386[59] = 0;
   out_3597831966201927386[60] = 0;
   out_3597831966201927386[61] = 0;
   out_3597831966201927386[62] = 0;
   out_3597831966201927386[63] = 0;
   out_3597831966201927386[64] = 0;
   out_3597831966201927386[65] = 0;
}
void h_14(double *state, double *unused, double *out_3011225497219900464) {
   out_3011225497219900464[0] = state[10];
   out_3011225497219900464[1] = state[11];
   out_3011225497219900464[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1577072207023827054) {
   out_1577072207023827054[0] = 0;
   out_1577072207023827054[1] = 0;
   out_1577072207023827054[2] = 0;
   out_1577072207023827054[3] = 0;
   out_1577072207023827054[4] = 0;
   out_1577072207023827054[5] = 0;
   out_1577072207023827054[6] = 0;
   out_1577072207023827054[7] = 0;
   out_1577072207023827054[8] = 0;
   out_1577072207023827054[9] = 0;
   out_1577072207023827054[10] = 1;
   out_1577072207023827054[11] = 0;
   out_1577072207023827054[12] = 0;
   out_1577072207023827054[13] = 0;
   out_1577072207023827054[14] = 0;
   out_1577072207023827054[15] = 0;
   out_1577072207023827054[16] = 0;
   out_1577072207023827054[17] = 0;
   out_1577072207023827054[18] = 0;
   out_1577072207023827054[19] = 0;
   out_1577072207023827054[20] = 0;
   out_1577072207023827054[21] = 0;
   out_1577072207023827054[22] = 0;
   out_1577072207023827054[23] = 0;
   out_1577072207023827054[24] = 0;
   out_1577072207023827054[25] = 0;
   out_1577072207023827054[26] = 0;
   out_1577072207023827054[27] = 0;
   out_1577072207023827054[28] = 0;
   out_1577072207023827054[29] = 0;
   out_1577072207023827054[30] = 0;
   out_1577072207023827054[31] = 0;
   out_1577072207023827054[32] = 0;
   out_1577072207023827054[33] = 1;
   out_1577072207023827054[34] = 0;
   out_1577072207023827054[35] = 0;
   out_1577072207023827054[36] = 0;
   out_1577072207023827054[37] = 0;
   out_1577072207023827054[38] = 0;
   out_1577072207023827054[39] = 0;
   out_1577072207023827054[40] = 0;
   out_1577072207023827054[41] = 0;
   out_1577072207023827054[42] = 0;
   out_1577072207023827054[43] = 0;
   out_1577072207023827054[44] = 0;
   out_1577072207023827054[45] = 0;
   out_1577072207023827054[46] = 0;
   out_1577072207023827054[47] = 0;
   out_1577072207023827054[48] = 0;
   out_1577072207023827054[49] = 0;
   out_1577072207023827054[50] = 0;
   out_1577072207023827054[51] = 0;
   out_1577072207023827054[52] = 0;
   out_1577072207023827054[53] = 0;
   out_1577072207023827054[54] = 0;
   out_1577072207023827054[55] = 0;
   out_1577072207023827054[56] = 1;
   out_1577072207023827054[57] = 0;
   out_1577072207023827054[58] = 0;
   out_1577072207023827054[59] = 0;
   out_1577072207023827054[60] = 0;
   out_1577072207023827054[61] = 0;
   out_1577072207023827054[62] = 0;
   out_1577072207023827054[63] = 0;
   out_1577072207023827054[64] = 0;
   out_1577072207023827054[65] = 0;
}
void h_33(double *state, double *unused, double *out_447286506532369353) {
   out_447286506532369353[0] = state[16];
   out_447286506532369353[1] = state[17];
   out_447286506532369353[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6195285068319482099) {
   out_6195285068319482099[0] = 0;
   out_6195285068319482099[1] = 0;
   out_6195285068319482099[2] = 0;
   out_6195285068319482099[3] = 0;
   out_6195285068319482099[4] = 0;
   out_6195285068319482099[5] = 0;
   out_6195285068319482099[6] = 0;
   out_6195285068319482099[7] = 0;
   out_6195285068319482099[8] = 0;
   out_6195285068319482099[9] = 0;
   out_6195285068319482099[10] = 0;
   out_6195285068319482099[11] = 0;
   out_6195285068319482099[12] = 0;
   out_6195285068319482099[13] = 0;
   out_6195285068319482099[14] = 0;
   out_6195285068319482099[15] = 0;
   out_6195285068319482099[16] = 1;
   out_6195285068319482099[17] = 0;
   out_6195285068319482099[18] = 0;
   out_6195285068319482099[19] = 0;
   out_6195285068319482099[20] = 0;
   out_6195285068319482099[21] = 0;
   out_6195285068319482099[22] = 0;
   out_6195285068319482099[23] = 0;
   out_6195285068319482099[24] = 0;
   out_6195285068319482099[25] = 0;
   out_6195285068319482099[26] = 0;
   out_6195285068319482099[27] = 0;
   out_6195285068319482099[28] = 0;
   out_6195285068319482099[29] = 0;
   out_6195285068319482099[30] = 0;
   out_6195285068319482099[31] = 0;
   out_6195285068319482099[32] = 0;
   out_6195285068319482099[33] = 0;
   out_6195285068319482099[34] = 0;
   out_6195285068319482099[35] = 0;
   out_6195285068319482099[36] = 0;
   out_6195285068319482099[37] = 0;
   out_6195285068319482099[38] = 0;
   out_6195285068319482099[39] = 1;
   out_6195285068319482099[40] = 0;
   out_6195285068319482099[41] = 0;
   out_6195285068319482099[42] = 0;
   out_6195285068319482099[43] = 0;
   out_6195285068319482099[44] = 0;
   out_6195285068319482099[45] = 0;
   out_6195285068319482099[46] = 0;
   out_6195285068319482099[47] = 0;
   out_6195285068319482099[48] = 0;
   out_6195285068319482099[49] = 0;
   out_6195285068319482099[50] = 0;
   out_6195285068319482099[51] = 0;
   out_6195285068319482099[52] = 0;
   out_6195285068319482099[53] = 0;
   out_6195285068319482099[54] = 0;
   out_6195285068319482099[55] = 0;
   out_6195285068319482099[56] = 0;
   out_6195285068319482099[57] = 0;
   out_6195285068319482099[58] = 0;
   out_6195285068319482099[59] = 0;
   out_6195285068319482099[60] = 0;
   out_6195285068319482099[61] = 0;
   out_6195285068319482099[62] = 1;
   out_6195285068319482099[63] = 0;
   out_6195285068319482099[64] = 0;
   out_6195285068319482099[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2414735134555351652) {
  H(in_vec, out_2414735134555351652);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4765299119652427496) {
  err_fun(nom_x, delta_x, out_4765299119652427496);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3190586852095350362) {
  inv_err_fun(nom_x, true_x, out_3190586852095350362);
}
void live_H_mod_fun(double *state, double *out_8614950881650688864) {
  H_mod_fun(state, out_8614950881650688864);
}
void live_f_fun(double *state, double dt, double *out_2595414180991291416) {
  f_fun(state,  dt, out_2595414180991291416);
}
void live_F_fun(double *state, double dt, double *out_6803033353997994321) {
  F_fun(state,  dt, out_6803033353997994321);
}
void live_h_4(double *state, double *unused, double *out_616930058420824) {
  h_4(state, unused, out_616930058420824);
}
void live_H_4(double *state, double *unused, double *out_5710146728240620416) {
  H_4(state, unused, out_5710146728240620416);
}
void live_h_9(double *state, double *unused, double *out_3011225497219900464) {
  h_9(state, unused, out_3011225497219900464);
}
void live_H_9(double *state, double *unused, double *out_1577072207023827054) {
  H_9(state, unused, out_1577072207023827054);
}
void live_h_10(double *state, double *unused, double *out_1629810256331739409) {
  h_10(state, unused, out_1629810256331739409);
}
void live_H_10(double *state, double *unused, double *out_5489835648690208687) {
  H_10(state, unused, out_5489835648690208687);
}
void live_h_12(double *state, double *unused, double *out_20494760359511289) {
  h_12(state, unused, out_20494760359511289);
}
void live_H_12(double *state, double *unused, double *out_6355338968426198204) {
  H_12(state, unused, out_6355338968426198204);
}
void live_h_35(double *state, double *unused, double *out_2434426115653514957) {
  h_35(state, unused, out_2434426115653514957);
}
void live_H_35(double *state, double *unused, double *out_9100902000751211913) {
  H_35(state, unused, out_9100902000751211913);
}
void live_h_32(double *state, double *unused, double *out_4703891601766069245) {
  h_32(state, unused, out_4703891601766069245);
}
void live_H_32(double *state, double *unused, double *out_2212319885927272571) {
  H_32(state, unused, out_2212319885927272571);
}
void live_h_13(double *state, double *unused, double *out_3772027060503193218) {
  h_13(state, unused, out_3772027060503193218);
}
void live_H_13(double *state, double *unused, double *out_3597831966201927386) {
  H_13(state, unused, out_3597831966201927386);
}
void live_h_14(double *state, double *unused, double *out_3011225497219900464) {
  h_14(state, unused, out_3011225497219900464);
}
void live_H_14(double *state, double *unused, double *out_1577072207023827054) {
  H_14(state, unused, out_1577072207023827054);
}
void live_h_33(double *state, double *unused, double *out_447286506532369353) {
  h_33(state, unused, out_447286506532369353);
}
void live_H_33(double *state, double *unused, double *out_6195285068319482099) {
  H_33(state, unused, out_6195285068319482099);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
