#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8859560392771966978) {
   out_8859560392771966978[0] = 0;
   out_8859560392771966978[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8859560392771966978[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8859560392771966978[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8859560392771966978[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8859560392771966978[5] = -sin(in_vec[1]);
   out_8859560392771966978[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8859560392771966978[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8859560392771966978[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8859560392771966978[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8859560392771966978[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8859560392771966978[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8859560392771966978[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8859560392771966978[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8859560392771966978[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8859560392771966978[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8859560392771966978[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8859560392771966978[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_275793430844566277) {
   out_275793430844566277[0] = delta_x[0] + nom_x[0];
   out_275793430844566277[1] = delta_x[1] + nom_x[1];
   out_275793430844566277[2] = delta_x[2] + nom_x[2];
   out_275793430844566277[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_275793430844566277[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_275793430844566277[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_275793430844566277[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_275793430844566277[7] = delta_x[6] + nom_x[7];
   out_275793430844566277[8] = delta_x[7] + nom_x[8];
   out_275793430844566277[9] = delta_x[8] + nom_x[9];
   out_275793430844566277[10] = delta_x[9] + nom_x[10];
   out_275793430844566277[11] = delta_x[10] + nom_x[11];
   out_275793430844566277[12] = delta_x[11] + nom_x[12];
   out_275793430844566277[13] = delta_x[12] + nom_x[13];
   out_275793430844566277[14] = delta_x[13] + nom_x[14];
   out_275793430844566277[15] = delta_x[14] + nom_x[15];
   out_275793430844566277[16] = delta_x[15] + nom_x[16];
   out_275793430844566277[17] = delta_x[16] + nom_x[17];
   out_275793430844566277[18] = delta_x[17] + nom_x[18];
   out_275793430844566277[19] = delta_x[18] + nom_x[19];
   out_275793430844566277[20] = delta_x[19] + nom_x[20];
   out_275793430844566277[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1256350007897599276) {
   out_1256350007897599276[0] = -nom_x[0] + true_x[0];
   out_1256350007897599276[1] = -nom_x[1] + true_x[1];
   out_1256350007897599276[2] = -nom_x[2] + true_x[2];
   out_1256350007897599276[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1256350007897599276[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1256350007897599276[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1256350007897599276[6] = -nom_x[7] + true_x[7];
   out_1256350007897599276[7] = -nom_x[8] + true_x[8];
   out_1256350007897599276[8] = -nom_x[9] + true_x[9];
   out_1256350007897599276[9] = -nom_x[10] + true_x[10];
   out_1256350007897599276[10] = -nom_x[11] + true_x[11];
   out_1256350007897599276[11] = -nom_x[12] + true_x[12];
   out_1256350007897599276[12] = -nom_x[13] + true_x[13];
   out_1256350007897599276[13] = -nom_x[14] + true_x[14];
   out_1256350007897599276[14] = -nom_x[15] + true_x[15];
   out_1256350007897599276[15] = -nom_x[16] + true_x[16];
   out_1256350007897599276[16] = -nom_x[17] + true_x[17];
   out_1256350007897599276[17] = -nom_x[18] + true_x[18];
   out_1256350007897599276[18] = -nom_x[19] + true_x[19];
   out_1256350007897599276[19] = -nom_x[20] + true_x[20];
   out_1256350007897599276[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6601594514128786682) {
   out_6601594514128786682[0] = 1.0;
   out_6601594514128786682[1] = 0;
   out_6601594514128786682[2] = 0;
   out_6601594514128786682[3] = 0;
   out_6601594514128786682[4] = 0;
   out_6601594514128786682[5] = 0;
   out_6601594514128786682[6] = 0;
   out_6601594514128786682[7] = 0;
   out_6601594514128786682[8] = 0;
   out_6601594514128786682[9] = 0;
   out_6601594514128786682[10] = 0;
   out_6601594514128786682[11] = 0;
   out_6601594514128786682[12] = 0;
   out_6601594514128786682[13] = 0;
   out_6601594514128786682[14] = 0;
   out_6601594514128786682[15] = 0;
   out_6601594514128786682[16] = 0;
   out_6601594514128786682[17] = 0;
   out_6601594514128786682[18] = 0;
   out_6601594514128786682[19] = 0;
   out_6601594514128786682[20] = 0;
   out_6601594514128786682[21] = 0;
   out_6601594514128786682[22] = 1.0;
   out_6601594514128786682[23] = 0;
   out_6601594514128786682[24] = 0;
   out_6601594514128786682[25] = 0;
   out_6601594514128786682[26] = 0;
   out_6601594514128786682[27] = 0;
   out_6601594514128786682[28] = 0;
   out_6601594514128786682[29] = 0;
   out_6601594514128786682[30] = 0;
   out_6601594514128786682[31] = 0;
   out_6601594514128786682[32] = 0;
   out_6601594514128786682[33] = 0;
   out_6601594514128786682[34] = 0;
   out_6601594514128786682[35] = 0;
   out_6601594514128786682[36] = 0;
   out_6601594514128786682[37] = 0;
   out_6601594514128786682[38] = 0;
   out_6601594514128786682[39] = 0;
   out_6601594514128786682[40] = 0;
   out_6601594514128786682[41] = 0;
   out_6601594514128786682[42] = 0;
   out_6601594514128786682[43] = 0;
   out_6601594514128786682[44] = 1.0;
   out_6601594514128786682[45] = 0;
   out_6601594514128786682[46] = 0;
   out_6601594514128786682[47] = 0;
   out_6601594514128786682[48] = 0;
   out_6601594514128786682[49] = 0;
   out_6601594514128786682[50] = 0;
   out_6601594514128786682[51] = 0;
   out_6601594514128786682[52] = 0;
   out_6601594514128786682[53] = 0;
   out_6601594514128786682[54] = 0;
   out_6601594514128786682[55] = 0;
   out_6601594514128786682[56] = 0;
   out_6601594514128786682[57] = 0;
   out_6601594514128786682[58] = 0;
   out_6601594514128786682[59] = 0;
   out_6601594514128786682[60] = 0;
   out_6601594514128786682[61] = 0;
   out_6601594514128786682[62] = 0;
   out_6601594514128786682[63] = 0;
   out_6601594514128786682[64] = 0;
   out_6601594514128786682[65] = 0;
   out_6601594514128786682[66] = -0.5*state[4];
   out_6601594514128786682[67] = -0.5*state[5];
   out_6601594514128786682[68] = -0.5*state[6];
   out_6601594514128786682[69] = 0;
   out_6601594514128786682[70] = 0;
   out_6601594514128786682[71] = 0;
   out_6601594514128786682[72] = 0;
   out_6601594514128786682[73] = 0;
   out_6601594514128786682[74] = 0;
   out_6601594514128786682[75] = 0;
   out_6601594514128786682[76] = 0;
   out_6601594514128786682[77] = 0;
   out_6601594514128786682[78] = 0;
   out_6601594514128786682[79] = 0;
   out_6601594514128786682[80] = 0;
   out_6601594514128786682[81] = 0;
   out_6601594514128786682[82] = 0;
   out_6601594514128786682[83] = 0;
   out_6601594514128786682[84] = 0;
   out_6601594514128786682[85] = 0;
   out_6601594514128786682[86] = 0;
   out_6601594514128786682[87] = 0.5*state[3];
   out_6601594514128786682[88] = 0.5*state[6];
   out_6601594514128786682[89] = -0.5*state[5];
   out_6601594514128786682[90] = 0;
   out_6601594514128786682[91] = 0;
   out_6601594514128786682[92] = 0;
   out_6601594514128786682[93] = 0;
   out_6601594514128786682[94] = 0;
   out_6601594514128786682[95] = 0;
   out_6601594514128786682[96] = 0;
   out_6601594514128786682[97] = 0;
   out_6601594514128786682[98] = 0;
   out_6601594514128786682[99] = 0;
   out_6601594514128786682[100] = 0;
   out_6601594514128786682[101] = 0;
   out_6601594514128786682[102] = 0;
   out_6601594514128786682[103] = 0;
   out_6601594514128786682[104] = 0;
   out_6601594514128786682[105] = 0;
   out_6601594514128786682[106] = 0;
   out_6601594514128786682[107] = 0;
   out_6601594514128786682[108] = -0.5*state[6];
   out_6601594514128786682[109] = 0.5*state[3];
   out_6601594514128786682[110] = 0.5*state[4];
   out_6601594514128786682[111] = 0;
   out_6601594514128786682[112] = 0;
   out_6601594514128786682[113] = 0;
   out_6601594514128786682[114] = 0;
   out_6601594514128786682[115] = 0;
   out_6601594514128786682[116] = 0;
   out_6601594514128786682[117] = 0;
   out_6601594514128786682[118] = 0;
   out_6601594514128786682[119] = 0;
   out_6601594514128786682[120] = 0;
   out_6601594514128786682[121] = 0;
   out_6601594514128786682[122] = 0;
   out_6601594514128786682[123] = 0;
   out_6601594514128786682[124] = 0;
   out_6601594514128786682[125] = 0;
   out_6601594514128786682[126] = 0;
   out_6601594514128786682[127] = 0;
   out_6601594514128786682[128] = 0;
   out_6601594514128786682[129] = 0.5*state[5];
   out_6601594514128786682[130] = -0.5*state[4];
   out_6601594514128786682[131] = 0.5*state[3];
   out_6601594514128786682[132] = 0;
   out_6601594514128786682[133] = 0;
   out_6601594514128786682[134] = 0;
   out_6601594514128786682[135] = 0;
   out_6601594514128786682[136] = 0;
   out_6601594514128786682[137] = 0;
   out_6601594514128786682[138] = 0;
   out_6601594514128786682[139] = 0;
   out_6601594514128786682[140] = 0;
   out_6601594514128786682[141] = 0;
   out_6601594514128786682[142] = 0;
   out_6601594514128786682[143] = 0;
   out_6601594514128786682[144] = 0;
   out_6601594514128786682[145] = 0;
   out_6601594514128786682[146] = 0;
   out_6601594514128786682[147] = 0;
   out_6601594514128786682[148] = 0;
   out_6601594514128786682[149] = 0;
   out_6601594514128786682[150] = 0;
   out_6601594514128786682[151] = 0;
   out_6601594514128786682[152] = 0;
   out_6601594514128786682[153] = 1.0;
   out_6601594514128786682[154] = 0;
   out_6601594514128786682[155] = 0;
   out_6601594514128786682[156] = 0;
   out_6601594514128786682[157] = 0;
   out_6601594514128786682[158] = 0;
   out_6601594514128786682[159] = 0;
   out_6601594514128786682[160] = 0;
   out_6601594514128786682[161] = 0;
   out_6601594514128786682[162] = 0;
   out_6601594514128786682[163] = 0;
   out_6601594514128786682[164] = 0;
   out_6601594514128786682[165] = 0;
   out_6601594514128786682[166] = 0;
   out_6601594514128786682[167] = 0;
   out_6601594514128786682[168] = 0;
   out_6601594514128786682[169] = 0;
   out_6601594514128786682[170] = 0;
   out_6601594514128786682[171] = 0;
   out_6601594514128786682[172] = 0;
   out_6601594514128786682[173] = 0;
   out_6601594514128786682[174] = 0;
   out_6601594514128786682[175] = 1.0;
   out_6601594514128786682[176] = 0;
   out_6601594514128786682[177] = 0;
   out_6601594514128786682[178] = 0;
   out_6601594514128786682[179] = 0;
   out_6601594514128786682[180] = 0;
   out_6601594514128786682[181] = 0;
   out_6601594514128786682[182] = 0;
   out_6601594514128786682[183] = 0;
   out_6601594514128786682[184] = 0;
   out_6601594514128786682[185] = 0;
   out_6601594514128786682[186] = 0;
   out_6601594514128786682[187] = 0;
   out_6601594514128786682[188] = 0;
   out_6601594514128786682[189] = 0;
   out_6601594514128786682[190] = 0;
   out_6601594514128786682[191] = 0;
   out_6601594514128786682[192] = 0;
   out_6601594514128786682[193] = 0;
   out_6601594514128786682[194] = 0;
   out_6601594514128786682[195] = 0;
   out_6601594514128786682[196] = 0;
   out_6601594514128786682[197] = 1.0;
   out_6601594514128786682[198] = 0;
   out_6601594514128786682[199] = 0;
   out_6601594514128786682[200] = 0;
   out_6601594514128786682[201] = 0;
   out_6601594514128786682[202] = 0;
   out_6601594514128786682[203] = 0;
   out_6601594514128786682[204] = 0;
   out_6601594514128786682[205] = 0;
   out_6601594514128786682[206] = 0;
   out_6601594514128786682[207] = 0;
   out_6601594514128786682[208] = 0;
   out_6601594514128786682[209] = 0;
   out_6601594514128786682[210] = 0;
   out_6601594514128786682[211] = 0;
   out_6601594514128786682[212] = 0;
   out_6601594514128786682[213] = 0;
   out_6601594514128786682[214] = 0;
   out_6601594514128786682[215] = 0;
   out_6601594514128786682[216] = 0;
   out_6601594514128786682[217] = 0;
   out_6601594514128786682[218] = 0;
   out_6601594514128786682[219] = 1.0;
   out_6601594514128786682[220] = 0;
   out_6601594514128786682[221] = 0;
   out_6601594514128786682[222] = 0;
   out_6601594514128786682[223] = 0;
   out_6601594514128786682[224] = 0;
   out_6601594514128786682[225] = 0;
   out_6601594514128786682[226] = 0;
   out_6601594514128786682[227] = 0;
   out_6601594514128786682[228] = 0;
   out_6601594514128786682[229] = 0;
   out_6601594514128786682[230] = 0;
   out_6601594514128786682[231] = 0;
   out_6601594514128786682[232] = 0;
   out_6601594514128786682[233] = 0;
   out_6601594514128786682[234] = 0;
   out_6601594514128786682[235] = 0;
   out_6601594514128786682[236] = 0;
   out_6601594514128786682[237] = 0;
   out_6601594514128786682[238] = 0;
   out_6601594514128786682[239] = 0;
   out_6601594514128786682[240] = 0;
   out_6601594514128786682[241] = 1.0;
   out_6601594514128786682[242] = 0;
   out_6601594514128786682[243] = 0;
   out_6601594514128786682[244] = 0;
   out_6601594514128786682[245] = 0;
   out_6601594514128786682[246] = 0;
   out_6601594514128786682[247] = 0;
   out_6601594514128786682[248] = 0;
   out_6601594514128786682[249] = 0;
   out_6601594514128786682[250] = 0;
   out_6601594514128786682[251] = 0;
   out_6601594514128786682[252] = 0;
   out_6601594514128786682[253] = 0;
   out_6601594514128786682[254] = 0;
   out_6601594514128786682[255] = 0;
   out_6601594514128786682[256] = 0;
   out_6601594514128786682[257] = 0;
   out_6601594514128786682[258] = 0;
   out_6601594514128786682[259] = 0;
   out_6601594514128786682[260] = 0;
   out_6601594514128786682[261] = 0;
   out_6601594514128786682[262] = 0;
   out_6601594514128786682[263] = 1.0;
   out_6601594514128786682[264] = 0;
   out_6601594514128786682[265] = 0;
   out_6601594514128786682[266] = 0;
   out_6601594514128786682[267] = 0;
   out_6601594514128786682[268] = 0;
   out_6601594514128786682[269] = 0;
   out_6601594514128786682[270] = 0;
   out_6601594514128786682[271] = 0;
   out_6601594514128786682[272] = 0;
   out_6601594514128786682[273] = 0;
   out_6601594514128786682[274] = 0;
   out_6601594514128786682[275] = 0;
   out_6601594514128786682[276] = 0;
   out_6601594514128786682[277] = 0;
   out_6601594514128786682[278] = 0;
   out_6601594514128786682[279] = 0;
   out_6601594514128786682[280] = 0;
   out_6601594514128786682[281] = 0;
   out_6601594514128786682[282] = 0;
   out_6601594514128786682[283] = 0;
   out_6601594514128786682[284] = 0;
   out_6601594514128786682[285] = 1.0;
   out_6601594514128786682[286] = 0;
   out_6601594514128786682[287] = 0;
   out_6601594514128786682[288] = 0;
   out_6601594514128786682[289] = 0;
   out_6601594514128786682[290] = 0;
   out_6601594514128786682[291] = 0;
   out_6601594514128786682[292] = 0;
   out_6601594514128786682[293] = 0;
   out_6601594514128786682[294] = 0;
   out_6601594514128786682[295] = 0;
   out_6601594514128786682[296] = 0;
   out_6601594514128786682[297] = 0;
   out_6601594514128786682[298] = 0;
   out_6601594514128786682[299] = 0;
   out_6601594514128786682[300] = 0;
   out_6601594514128786682[301] = 0;
   out_6601594514128786682[302] = 0;
   out_6601594514128786682[303] = 0;
   out_6601594514128786682[304] = 0;
   out_6601594514128786682[305] = 0;
   out_6601594514128786682[306] = 0;
   out_6601594514128786682[307] = 1.0;
   out_6601594514128786682[308] = 0;
   out_6601594514128786682[309] = 0;
   out_6601594514128786682[310] = 0;
   out_6601594514128786682[311] = 0;
   out_6601594514128786682[312] = 0;
   out_6601594514128786682[313] = 0;
   out_6601594514128786682[314] = 0;
   out_6601594514128786682[315] = 0;
   out_6601594514128786682[316] = 0;
   out_6601594514128786682[317] = 0;
   out_6601594514128786682[318] = 0;
   out_6601594514128786682[319] = 0;
   out_6601594514128786682[320] = 0;
   out_6601594514128786682[321] = 0;
   out_6601594514128786682[322] = 0;
   out_6601594514128786682[323] = 0;
   out_6601594514128786682[324] = 0;
   out_6601594514128786682[325] = 0;
   out_6601594514128786682[326] = 0;
   out_6601594514128786682[327] = 0;
   out_6601594514128786682[328] = 0;
   out_6601594514128786682[329] = 1.0;
   out_6601594514128786682[330] = 0;
   out_6601594514128786682[331] = 0;
   out_6601594514128786682[332] = 0;
   out_6601594514128786682[333] = 0;
   out_6601594514128786682[334] = 0;
   out_6601594514128786682[335] = 0;
   out_6601594514128786682[336] = 0;
   out_6601594514128786682[337] = 0;
   out_6601594514128786682[338] = 0;
   out_6601594514128786682[339] = 0;
   out_6601594514128786682[340] = 0;
   out_6601594514128786682[341] = 0;
   out_6601594514128786682[342] = 0;
   out_6601594514128786682[343] = 0;
   out_6601594514128786682[344] = 0;
   out_6601594514128786682[345] = 0;
   out_6601594514128786682[346] = 0;
   out_6601594514128786682[347] = 0;
   out_6601594514128786682[348] = 0;
   out_6601594514128786682[349] = 0;
   out_6601594514128786682[350] = 0;
   out_6601594514128786682[351] = 1.0;
   out_6601594514128786682[352] = 0;
   out_6601594514128786682[353] = 0;
   out_6601594514128786682[354] = 0;
   out_6601594514128786682[355] = 0;
   out_6601594514128786682[356] = 0;
   out_6601594514128786682[357] = 0;
   out_6601594514128786682[358] = 0;
   out_6601594514128786682[359] = 0;
   out_6601594514128786682[360] = 0;
   out_6601594514128786682[361] = 0;
   out_6601594514128786682[362] = 0;
   out_6601594514128786682[363] = 0;
   out_6601594514128786682[364] = 0;
   out_6601594514128786682[365] = 0;
   out_6601594514128786682[366] = 0;
   out_6601594514128786682[367] = 0;
   out_6601594514128786682[368] = 0;
   out_6601594514128786682[369] = 0;
   out_6601594514128786682[370] = 0;
   out_6601594514128786682[371] = 0;
   out_6601594514128786682[372] = 0;
   out_6601594514128786682[373] = 1.0;
   out_6601594514128786682[374] = 0;
   out_6601594514128786682[375] = 0;
   out_6601594514128786682[376] = 0;
   out_6601594514128786682[377] = 0;
   out_6601594514128786682[378] = 0;
   out_6601594514128786682[379] = 0;
   out_6601594514128786682[380] = 0;
   out_6601594514128786682[381] = 0;
   out_6601594514128786682[382] = 0;
   out_6601594514128786682[383] = 0;
   out_6601594514128786682[384] = 0;
   out_6601594514128786682[385] = 0;
   out_6601594514128786682[386] = 0;
   out_6601594514128786682[387] = 0;
   out_6601594514128786682[388] = 0;
   out_6601594514128786682[389] = 0;
   out_6601594514128786682[390] = 0;
   out_6601594514128786682[391] = 0;
   out_6601594514128786682[392] = 0;
   out_6601594514128786682[393] = 0;
   out_6601594514128786682[394] = 0;
   out_6601594514128786682[395] = 1.0;
   out_6601594514128786682[396] = 0;
   out_6601594514128786682[397] = 0;
   out_6601594514128786682[398] = 0;
   out_6601594514128786682[399] = 0;
   out_6601594514128786682[400] = 0;
   out_6601594514128786682[401] = 0;
   out_6601594514128786682[402] = 0;
   out_6601594514128786682[403] = 0;
   out_6601594514128786682[404] = 0;
   out_6601594514128786682[405] = 0;
   out_6601594514128786682[406] = 0;
   out_6601594514128786682[407] = 0;
   out_6601594514128786682[408] = 0;
   out_6601594514128786682[409] = 0;
   out_6601594514128786682[410] = 0;
   out_6601594514128786682[411] = 0;
   out_6601594514128786682[412] = 0;
   out_6601594514128786682[413] = 0;
   out_6601594514128786682[414] = 0;
   out_6601594514128786682[415] = 0;
   out_6601594514128786682[416] = 0;
   out_6601594514128786682[417] = 1.0;
   out_6601594514128786682[418] = 0;
   out_6601594514128786682[419] = 0;
   out_6601594514128786682[420] = 0;
   out_6601594514128786682[421] = 0;
   out_6601594514128786682[422] = 0;
   out_6601594514128786682[423] = 0;
   out_6601594514128786682[424] = 0;
   out_6601594514128786682[425] = 0;
   out_6601594514128786682[426] = 0;
   out_6601594514128786682[427] = 0;
   out_6601594514128786682[428] = 0;
   out_6601594514128786682[429] = 0;
   out_6601594514128786682[430] = 0;
   out_6601594514128786682[431] = 0;
   out_6601594514128786682[432] = 0;
   out_6601594514128786682[433] = 0;
   out_6601594514128786682[434] = 0;
   out_6601594514128786682[435] = 0;
   out_6601594514128786682[436] = 0;
   out_6601594514128786682[437] = 0;
   out_6601594514128786682[438] = 0;
   out_6601594514128786682[439] = 1.0;
   out_6601594514128786682[440] = 0;
   out_6601594514128786682[441] = 0;
   out_6601594514128786682[442] = 0;
   out_6601594514128786682[443] = 0;
   out_6601594514128786682[444] = 0;
   out_6601594514128786682[445] = 0;
   out_6601594514128786682[446] = 0;
   out_6601594514128786682[447] = 0;
   out_6601594514128786682[448] = 0;
   out_6601594514128786682[449] = 0;
   out_6601594514128786682[450] = 0;
   out_6601594514128786682[451] = 0;
   out_6601594514128786682[452] = 0;
   out_6601594514128786682[453] = 0;
   out_6601594514128786682[454] = 0;
   out_6601594514128786682[455] = 0;
   out_6601594514128786682[456] = 0;
   out_6601594514128786682[457] = 0;
   out_6601594514128786682[458] = 0;
   out_6601594514128786682[459] = 0;
   out_6601594514128786682[460] = 0;
   out_6601594514128786682[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8845733240490315512) {
   out_8845733240490315512[0] = dt*state[7] + state[0];
   out_8845733240490315512[1] = dt*state[8] + state[1];
   out_8845733240490315512[2] = dt*state[9] + state[2];
   out_8845733240490315512[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8845733240490315512[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8845733240490315512[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8845733240490315512[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8845733240490315512[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8845733240490315512[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8845733240490315512[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8845733240490315512[10] = state[10];
   out_8845733240490315512[11] = state[11];
   out_8845733240490315512[12] = state[12];
   out_8845733240490315512[13] = state[13];
   out_8845733240490315512[14] = state[14];
   out_8845733240490315512[15] = state[15];
   out_8845733240490315512[16] = state[16];
   out_8845733240490315512[17] = state[17];
   out_8845733240490315512[18] = state[18];
   out_8845733240490315512[19] = state[19];
   out_8845733240490315512[20] = state[20];
   out_8845733240490315512[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1382002735738886191) {
   out_1382002735738886191[0] = 1;
   out_1382002735738886191[1] = 0;
   out_1382002735738886191[2] = 0;
   out_1382002735738886191[3] = 0;
   out_1382002735738886191[4] = 0;
   out_1382002735738886191[5] = 0;
   out_1382002735738886191[6] = dt;
   out_1382002735738886191[7] = 0;
   out_1382002735738886191[8] = 0;
   out_1382002735738886191[9] = 0;
   out_1382002735738886191[10] = 0;
   out_1382002735738886191[11] = 0;
   out_1382002735738886191[12] = 0;
   out_1382002735738886191[13] = 0;
   out_1382002735738886191[14] = 0;
   out_1382002735738886191[15] = 0;
   out_1382002735738886191[16] = 0;
   out_1382002735738886191[17] = 0;
   out_1382002735738886191[18] = 0;
   out_1382002735738886191[19] = 0;
   out_1382002735738886191[20] = 0;
   out_1382002735738886191[21] = 0;
   out_1382002735738886191[22] = 1;
   out_1382002735738886191[23] = 0;
   out_1382002735738886191[24] = 0;
   out_1382002735738886191[25] = 0;
   out_1382002735738886191[26] = 0;
   out_1382002735738886191[27] = 0;
   out_1382002735738886191[28] = dt;
   out_1382002735738886191[29] = 0;
   out_1382002735738886191[30] = 0;
   out_1382002735738886191[31] = 0;
   out_1382002735738886191[32] = 0;
   out_1382002735738886191[33] = 0;
   out_1382002735738886191[34] = 0;
   out_1382002735738886191[35] = 0;
   out_1382002735738886191[36] = 0;
   out_1382002735738886191[37] = 0;
   out_1382002735738886191[38] = 0;
   out_1382002735738886191[39] = 0;
   out_1382002735738886191[40] = 0;
   out_1382002735738886191[41] = 0;
   out_1382002735738886191[42] = 0;
   out_1382002735738886191[43] = 0;
   out_1382002735738886191[44] = 1;
   out_1382002735738886191[45] = 0;
   out_1382002735738886191[46] = 0;
   out_1382002735738886191[47] = 0;
   out_1382002735738886191[48] = 0;
   out_1382002735738886191[49] = 0;
   out_1382002735738886191[50] = dt;
   out_1382002735738886191[51] = 0;
   out_1382002735738886191[52] = 0;
   out_1382002735738886191[53] = 0;
   out_1382002735738886191[54] = 0;
   out_1382002735738886191[55] = 0;
   out_1382002735738886191[56] = 0;
   out_1382002735738886191[57] = 0;
   out_1382002735738886191[58] = 0;
   out_1382002735738886191[59] = 0;
   out_1382002735738886191[60] = 0;
   out_1382002735738886191[61] = 0;
   out_1382002735738886191[62] = 0;
   out_1382002735738886191[63] = 0;
   out_1382002735738886191[64] = 0;
   out_1382002735738886191[65] = 0;
   out_1382002735738886191[66] = 1;
   out_1382002735738886191[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1382002735738886191[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1382002735738886191[69] = 0;
   out_1382002735738886191[70] = 0;
   out_1382002735738886191[71] = 0;
   out_1382002735738886191[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1382002735738886191[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1382002735738886191[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1382002735738886191[75] = 0;
   out_1382002735738886191[76] = 0;
   out_1382002735738886191[77] = 0;
   out_1382002735738886191[78] = 0;
   out_1382002735738886191[79] = 0;
   out_1382002735738886191[80] = 0;
   out_1382002735738886191[81] = 0;
   out_1382002735738886191[82] = 0;
   out_1382002735738886191[83] = 0;
   out_1382002735738886191[84] = 0;
   out_1382002735738886191[85] = 0;
   out_1382002735738886191[86] = 0;
   out_1382002735738886191[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1382002735738886191[88] = 1;
   out_1382002735738886191[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1382002735738886191[90] = 0;
   out_1382002735738886191[91] = 0;
   out_1382002735738886191[92] = 0;
   out_1382002735738886191[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1382002735738886191[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1382002735738886191[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1382002735738886191[96] = 0;
   out_1382002735738886191[97] = 0;
   out_1382002735738886191[98] = 0;
   out_1382002735738886191[99] = 0;
   out_1382002735738886191[100] = 0;
   out_1382002735738886191[101] = 0;
   out_1382002735738886191[102] = 0;
   out_1382002735738886191[103] = 0;
   out_1382002735738886191[104] = 0;
   out_1382002735738886191[105] = 0;
   out_1382002735738886191[106] = 0;
   out_1382002735738886191[107] = 0;
   out_1382002735738886191[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1382002735738886191[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1382002735738886191[110] = 1;
   out_1382002735738886191[111] = 0;
   out_1382002735738886191[112] = 0;
   out_1382002735738886191[113] = 0;
   out_1382002735738886191[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1382002735738886191[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1382002735738886191[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1382002735738886191[117] = 0;
   out_1382002735738886191[118] = 0;
   out_1382002735738886191[119] = 0;
   out_1382002735738886191[120] = 0;
   out_1382002735738886191[121] = 0;
   out_1382002735738886191[122] = 0;
   out_1382002735738886191[123] = 0;
   out_1382002735738886191[124] = 0;
   out_1382002735738886191[125] = 0;
   out_1382002735738886191[126] = 0;
   out_1382002735738886191[127] = 0;
   out_1382002735738886191[128] = 0;
   out_1382002735738886191[129] = 0;
   out_1382002735738886191[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1382002735738886191[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1382002735738886191[132] = 1;
   out_1382002735738886191[133] = 0;
   out_1382002735738886191[134] = 0;
   out_1382002735738886191[135] = 0;
   out_1382002735738886191[136] = 0;
   out_1382002735738886191[137] = 0;
   out_1382002735738886191[138] = 0;
   out_1382002735738886191[139] = 0;
   out_1382002735738886191[140] = 0;
   out_1382002735738886191[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1382002735738886191[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1382002735738886191[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1382002735738886191[144] = 0;
   out_1382002735738886191[145] = 0;
   out_1382002735738886191[146] = 0;
   out_1382002735738886191[147] = 0;
   out_1382002735738886191[148] = 0;
   out_1382002735738886191[149] = 0;
   out_1382002735738886191[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1382002735738886191[151] = 0;
   out_1382002735738886191[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1382002735738886191[153] = 0;
   out_1382002735738886191[154] = 1;
   out_1382002735738886191[155] = 0;
   out_1382002735738886191[156] = 0;
   out_1382002735738886191[157] = 0;
   out_1382002735738886191[158] = 0;
   out_1382002735738886191[159] = 0;
   out_1382002735738886191[160] = 0;
   out_1382002735738886191[161] = 0;
   out_1382002735738886191[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1382002735738886191[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1382002735738886191[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1382002735738886191[165] = 0;
   out_1382002735738886191[166] = 0;
   out_1382002735738886191[167] = 0;
   out_1382002735738886191[168] = 0;
   out_1382002735738886191[169] = 0;
   out_1382002735738886191[170] = 0;
   out_1382002735738886191[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1382002735738886191[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1382002735738886191[173] = 0;
   out_1382002735738886191[174] = 0;
   out_1382002735738886191[175] = 0;
   out_1382002735738886191[176] = 1;
   out_1382002735738886191[177] = 0;
   out_1382002735738886191[178] = 0;
   out_1382002735738886191[179] = 0;
   out_1382002735738886191[180] = 0;
   out_1382002735738886191[181] = 0;
   out_1382002735738886191[182] = 0;
   out_1382002735738886191[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1382002735738886191[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1382002735738886191[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1382002735738886191[186] = 0;
   out_1382002735738886191[187] = 0;
   out_1382002735738886191[188] = 0;
   out_1382002735738886191[189] = 0;
   out_1382002735738886191[190] = 0;
   out_1382002735738886191[191] = 0;
   out_1382002735738886191[192] = 0;
   out_1382002735738886191[193] = 0;
   out_1382002735738886191[194] = 0;
   out_1382002735738886191[195] = 0;
   out_1382002735738886191[196] = 0;
   out_1382002735738886191[197] = 0;
   out_1382002735738886191[198] = 1;
   out_1382002735738886191[199] = 0;
   out_1382002735738886191[200] = 0;
   out_1382002735738886191[201] = 0;
   out_1382002735738886191[202] = 0;
   out_1382002735738886191[203] = 0;
   out_1382002735738886191[204] = 0;
   out_1382002735738886191[205] = 0;
   out_1382002735738886191[206] = 0;
   out_1382002735738886191[207] = 0;
   out_1382002735738886191[208] = 0;
   out_1382002735738886191[209] = 0;
   out_1382002735738886191[210] = 0;
   out_1382002735738886191[211] = 0;
   out_1382002735738886191[212] = 0;
   out_1382002735738886191[213] = 0;
   out_1382002735738886191[214] = 0;
   out_1382002735738886191[215] = 0;
   out_1382002735738886191[216] = 0;
   out_1382002735738886191[217] = 0;
   out_1382002735738886191[218] = 0;
   out_1382002735738886191[219] = 0;
   out_1382002735738886191[220] = 1;
   out_1382002735738886191[221] = 0;
   out_1382002735738886191[222] = 0;
   out_1382002735738886191[223] = 0;
   out_1382002735738886191[224] = 0;
   out_1382002735738886191[225] = 0;
   out_1382002735738886191[226] = 0;
   out_1382002735738886191[227] = 0;
   out_1382002735738886191[228] = 0;
   out_1382002735738886191[229] = 0;
   out_1382002735738886191[230] = 0;
   out_1382002735738886191[231] = 0;
   out_1382002735738886191[232] = 0;
   out_1382002735738886191[233] = 0;
   out_1382002735738886191[234] = 0;
   out_1382002735738886191[235] = 0;
   out_1382002735738886191[236] = 0;
   out_1382002735738886191[237] = 0;
   out_1382002735738886191[238] = 0;
   out_1382002735738886191[239] = 0;
   out_1382002735738886191[240] = 0;
   out_1382002735738886191[241] = 0;
   out_1382002735738886191[242] = 1;
   out_1382002735738886191[243] = 0;
   out_1382002735738886191[244] = 0;
   out_1382002735738886191[245] = 0;
   out_1382002735738886191[246] = 0;
   out_1382002735738886191[247] = 0;
   out_1382002735738886191[248] = 0;
   out_1382002735738886191[249] = 0;
   out_1382002735738886191[250] = 0;
   out_1382002735738886191[251] = 0;
   out_1382002735738886191[252] = 0;
   out_1382002735738886191[253] = 0;
   out_1382002735738886191[254] = 0;
   out_1382002735738886191[255] = 0;
   out_1382002735738886191[256] = 0;
   out_1382002735738886191[257] = 0;
   out_1382002735738886191[258] = 0;
   out_1382002735738886191[259] = 0;
   out_1382002735738886191[260] = 0;
   out_1382002735738886191[261] = 0;
   out_1382002735738886191[262] = 0;
   out_1382002735738886191[263] = 0;
   out_1382002735738886191[264] = 1;
   out_1382002735738886191[265] = 0;
   out_1382002735738886191[266] = 0;
   out_1382002735738886191[267] = 0;
   out_1382002735738886191[268] = 0;
   out_1382002735738886191[269] = 0;
   out_1382002735738886191[270] = 0;
   out_1382002735738886191[271] = 0;
   out_1382002735738886191[272] = 0;
   out_1382002735738886191[273] = 0;
   out_1382002735738886191[274] = 0;
   out_1382002735738886191[275] = 0;
   out_1382002735738886191[276] = 0;
   out_1382002735738886191[277] = 0;
   out_1382002735738886191[278] = 0;
   out_1382002735738886191[279] = 0;
   out_1382002735738886191[280] = 0;
   out_1382002735738886191[281] = 0;
   out_1382002735738886191[282] = 0;
   out_1382002735738886191[283] = 0;
   out_1382002735738886191[284] = 0;
   out_1382002735738886191[285] = 0;
   out_1382002735738886191[286] = 1;
   out_1382002735738886191[287] = 0;
   out_1382002735738886191[288] = 0;
   out_1382002735738886191[289] = 0;
   out_1382002735738886191[290] = 0;
   out_1382002735738886191[291] = 0;
   out_1382002735738886191[292] = 0;
   out_1382002735738886191[293] = 0;
   out_1382002735738886191[294] = 0;
   out_1382002735738886191[295] = 0;
   out_1382002735738886191[296] = 0;
   out_1382002735738886191[297] = 0;
   out_1382002735738886191[298] = 0;
   out_1382002735738886191[299] = 0;
   out_1382002735738886191[300] = 0;
   out_1382002735738886191[301] = 0;
   out_1382002735738886191[302] = 0;
   out_1382002735738886191[303] = 0;
   out_1382002735738886191[304] = 0;
   out_1382002735738886191[305] = 0;
   out_1382002735738886191[306] = 0;
   out_1382002735738886191[307] = 0;
   out_1382002735738886191[308] = 1;
   out_1382002735738886191[309] = 0;
   out_1382002735738886191[310] = 0;
   out_1382002735738886191[311] = 0;
   out_1382002735738886191[312] = 0;
   out_1382002735738886191[313] = 0;
   out_1382002735738886191[314] = 0;
   out_1382002735738886191[315] = 0;
   out_1382002735738886191[316] = 0;
   out_1382002735738886191[317] = 0;
   out_1382002735738886191[318] = 0;
   out_1382002735738886191[319] = 0;
   out_1382002735738886191[320] = 0;
   out_1382002735738886191[321] = 0;
   out_1382002735738886191[322] = 0;
   out_1382002735738886191[323] = 0;
   out_1382002735738886191[324] = 0;
   out_1382002735738886191[325] = 0;
   out_1382002735738886191[326] = 0;
   out_1382002735738886191[327] = 0;
   out_1382002735738886191[328] = 0;
   out_1382002735738886191[329] = 0;
   out_1382002735738886191[330] = 1;
   out_1382002735738886191[331] = 0;
   out_1382002735738886191[332] = 0;
   out_1382002735738886191[333] = 0;
   out_1382002735738886191[334] = 0;
   out_1382002735738886191[335] = 0;
   out_1382002735738886191[336] = 0;
   out_1382002735738886191[337] = 0;
   out_1382002735738886191[338] = 0;
   out_1382002735738886191[339] = 0;
   out_1382002735738886191[340] = 0;
   out_1382002735738886191[341] = 0;
   out_1382002735738886191[342] = 0;
   out_1382002735738886191[343] = 0;
   out_1382002735738886191[344] = 0;
   out_1382002735738886191[345] = 0;
   out_1382002735738886191[346] = 0;
   out_1382002735738886191[347] = 0;
   out_1382002735738886191[348] = 0;
   out_1382002735738886191[349] = 0;
   out_1382002735738886191[350] = 0;
   out_1382002735738886191[351] = 0;
   out_1382002735738886191[352] = 1;
   out_1382002735738886191[353] = 0;
   out_1382002735738886191[354] = 0;
   out_1382002735738886191[355] = 0;
   out_1382002735738886191[356] = 0;
   out_1382002735738886191[357] = 0;
   out_1382002735738886191[358] = 0;
   out_1382002735738886191[359] = 0;
   out_1382002735738886191[360] = 0;
   out_1382002735738886191[361] = 0;
   out_1382002735738886191[362] = 0;
   out_1382002735738886191[363] = 0;
   out_1382002735738886191[364] = 0;
   out_1382002735738886191[365] = 0;
   out_1382002735738886191[366] = 0;
   out_1382002735738886191[367] = 0;
   out_1382002735738886191[368] = 0;
   out_1382002735738886191[369] = 0;
   out_1382002735738886191[370] = 0;
   out_1382002735738886191[371] = 0;
   out_1382002735738886191[372] = 0;
   out_1382002735738886191[373] = 0;
   out_1382002735738886191[374] = 1;
   out_1382002735738886191[375] = 0;
   out_1382002735738886191[376] = 0;
   out_1382002735738886191[377] = 0;
   out_1382002735738886191[378] = 0;
   out_1382002735738886191[379] = 0;
   out_1382002735738886191[380] = 0;
   out_1382002735738886191[381] = 0;
   out_1382002735738886191[382] = 0;
   out_1382002735738886191[383] = 0;
   out_1382002735738886191[384] = 0;
   out_1382002735738886191[385] = 0;
   out_1382002735738886191[386] = 0;
   out_1382002735738886191[387] = 0;
   out_1382002735738886191[388] = 0;
   out_1382002735738886191[389] = 0;
   out_1382002735738886191[390] = 0;
   out_1382002735738886191[391] = 0;
   out_1382002735738886191[392] = 0;
   out_1382002735738886191[393] = 0;
   out_1382002735738886191[394] = 0;
   out_1382002735738886191[395] = 0;
   out_1382002735738886191[396] = 1;
   out_1382002735738886191[397] = 0;
   out_1382002735738886191[398] = 0;
   out_1382002735738886191[399] = 0;
   out_1382002735738886191[400] = 0;
   out_1382002735738886191[401] = 0;
   out_1382002735738886191[402] = 0;
   out_1382002735738886191[403] = 0;
   out_1382002735738886191[404] = 0;
   out_1382002735738886191[405] = 0;
   out_1382002735738886191[406] = 0;
   out_1382002735738886191[407] = 0;
   out_1382002735738886191[408] = 0;
   out_1382002735738886191[409] = 0;
   out_1382002735738886191[410] = 0;
   out_1382002735738886191[411] = 0;
   out_1382002735738886191[412] = 0;
   out_1382002735738886191[413] = 0;
   out_1382002735738886191[414] = 0;
   out_1382002735738886191[415] = 0;
   out_1382002735738886191[416] = 0;
   out_1382002735738886191[417] = 0;
   out_1382002735738886191[418] = 1;
   out_1382002735738886191[419] = 0;
   out_1382002735738886191[420] = 0;
   out_1382002735738886191[421] = 0;
   out_1382002735738886191[422] = 0;
   out_1382002735738886191[423] = 0;
   out_1382002735738886191[424] = 0;
   out_1382002735738886191[425] = 0;
   out_1382002735738886191[426] = 0;
   out_1382002735738886191[427] = 0;
   out_1382002735738886191[428] = 0;
   out_1382002735738886191[429] = 0;
   out_1382002735738886191[430] = 0;
   out_1382002735738886191[431] = 0;
   out_1382002735738886191[432] = 0;
   out_1382002735738886191[433] = 0;
   out_1382002735738886191[434] = 0;
   out_1382002735738886191[435] = 0;
   out_1382002735738886191[436] = 0;
   out_1382002735738886191[437] = 0;
   out_1382002735738886191[438] = 0;
   out_1382002735738886191[439] = 0;
   out_1382002735738886191[440] = 1;
}
void h_4(double *state, double *unused, double *out_6295913573181500801) {
   out_6295913573181500801[0] = state[10] + state[13];
   out_6295913573181500801[1] = state[11] + state[14];
   out_6295913573181500801[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7346355438007863230) {
   out_7346355438007863230[0] = 0;
   out_7346355438007863230[1] = 0;
   out_7346355438007863230[2] = 0;
   out_7346355438007863230[3] = 0;
   out_7346355438007863230[4] = 0;
   out_7346355438007863230[5] = 0;
   out_7346355438007863230[6] = 0;
   out_7346355438007863230[7] = 0;
   out_7346355438007863230[8] = 0;
   out_7346355438007863230[9] = 0;
   out_7346355438007863230[10] = 1;
   out_7346355438007863230[11] = 0;
   out_7346355438007863230[12] = 0;
   out_7346355438007863230[13] = 1;
   out_7346355438007863230[14] = 0;
   out_7346355438007863230[15] = 0;
   out_7346355438007863230[16] = 0;
   out_7346355438007863230[17] = 0;
   out_7346355438007863230[18] = 0;
   out_7346355438007863230[19] = 0;
   out_7346355438007863230[20] = 0;
   out_7346355438007863230[21] = 0;
   out_7346355438007863230[22] = 0;
   out_7346355438007863230[23] = 0;
   out_7346355438007863230[24] = 0;
   out_7346355438007863230[25] = 0;
   out_7346355438007863230[26] = 0;
   out_7346355438007863230[27] = 0;
   out_7346355438007863230[28] = 0;
   out_7346355438007863230[29] = 0;
   out_7346355438007863230[30] = 0;
   out_7346355438007863230[31] = 0;
   out_7346355438007863230[32] = 0;
   out_7346355438007863230[33] = 1;
   out_7346355438007863230[34] = 0;
   out_7346355438007863230[35] = 0;
   out_7346355438007863230[36] = 1;
   out_7346355438007863230[37] = 0;
   out_7346355438007863230[38] = 0;
   out_7346355438007863230[39] = 0;
   out_7346355438007863230[40] = 0;
   out_7346355438007863230[41] = 0;
   out_7346355438007863230[42] = 0;
   out_7346355438007863230[43] = 0;
   out_7346355438007863230[44] = 0;
   out_7346355438007863230[45] = 0;
   out_7346355438007863230[46] = 0;
   out_7346355438007863230[47] = 0;
   out_7346355438007863230[48] = 0;
   out_7346355438007863230[49] = 0;
   out_7346355438007863230[50] = 0;
   out_7346355438007863230[51] = 0;
   out_7346355438007863230[52] = 0;
   out_7346355438007863230[53] = 0;
   out_7346355438007863230[54] = 0;
   out_7346355438007863230[55] = 0;
   out_7346355438007863230[56] = 1;
   out_7346355438007863230[57] = 0;
   out_7346355438007863230[58] = 0;
   out_7346355438007863230[59] = 1;
   out_7346355438007863230[60] = 0;
   out_7346355438007863230[61] = 0;
   out_7346355438007863230[62] = 0;
   out_7346355438007863230[63] = 0;
   out_7346355438007863230[64] = 0;
   out_7346355438007863230[65] = 0;
}
void h_9(double *state, double *unused, double *out_8505409878227279928) {
   out_8505409878227279928[0] = state[10];
   out_8505409878227279928[1] = state[11];
   out_8505409878227279928[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3813169700437240916) {
   out_3813169700437240916[0] = 0;
   out_3813169700437240916[1] = 0;
   out_3813169700437240916[2] = 0;
   out_3813169700437240916[3] = 0;
   out_3813169700437240916[4] = 0;
   out_3813169700437240916[5] = 0;
   out_3813169700437240916[6] = 0;
   out_3813169700437240916[7] = 0;
   out_3813169700437240916[8] = 0;
   out_3813169700437240916[9] = 0;
   out_3813169700437240916[10] = 1;
   out_3813169700437240916[11] = 0;
   out_3813169700437240916[12] = 0;
   out_3813169700437240916[13] = 0;
   out_3813169700437240916[14] = 0;
   out_3813169700437240916[15] = 0;
   out_3813169700437240916[16] = 0;
   out_3813169700437240916[17] = 0;
   out_3813169700437240916[18] = 0;
   out_3813169700437240916[19] = 0;
   out_3813169700437240916[20] = 0;
   out_3813169700437240916[21] = 0;
   out_3813169700437240916[22] = 0;
   out_3813169700437240916[23] = 0;
   out_3813169700437240916[24] = 0;
   out_3813169700437240916[25] = 0;
   out_3813169700437240916[26] = 0;
   out_3813169700437240916[27] = 0;
   out_3813169700437240916[28] = 0;
   out_3813169700437240916[29] = 0;
   out_3813169700437240916[30] = 0;
   out_3813169700437240916[31] = 0;
   out_3813169700437240916[32] = 0;
   out_3813169700437240916[33] = 1;
   out_3813169700437240916[34] = 0;
   out_3813169700437240916[35] = 0;
   out_3813169700437240916[36] = 0;
   out_3813169700437240916[37] = 0;
   out_3813169700437240916[38] = 0;
   out_3813169700437240916[39] = 0;
   out_3813169700437240916[40] = 0;
   out_3813169700437240916[41] = 0;
   out_3813169700437240916[42] = 0;
   out_3813169700437240916[43] = 0;
   out_3813169700437240916[44] = 0;
   out_3813169700437240916[45] = 0;
   out_3813169700437240916[46] = 0;
   out_3813169700437240916[47] = 0;
   out_3813169700437240916[48] = 0;
   out_3813169700437240916[49] = 0;
   out_3813169700437240916[50] = 0;
   out_3813169700437240916[51] = 0;
   out_3813169700437240916[52] = 0;
   out_3813169700437240916[53] = 0;
   out_3813169700437240916[54] = 0;
   out_3813169700437240916[55] = 0;
   out_3813169700437240916[56] = 1;
   out_3813169700437240916[57] = 0;
   out_3813169700437240916[58] = 0;
   out_3813169700437240916[59] = 0;
   out_3813169700437240916[60] = 0;
   out_3813169700437240916[61] = 0;
   out_3813169700437240916[62] = 0;
   out_3813169700437240916[63] = 0;
   out_3813169700437240916[64] = 0;
   out_3813169700437240916[65] = 0;
}
void h_10(double *state, double *unused, double *out_2471859477179688568) {
   out_2471859477179688568[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2471859477179688568[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2471859477179688568[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7463458794690068065) {
   out_7463458794690068065[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7463458794690068065[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7463458794690068065[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7463458794690068065[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7463458794690068065[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7463458794690068065[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7463458794690068065[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7463458794690068065[7] = 0;
   out_7463458794690068065[8] = 0;
   out_7463458794690068065[9] = 0;
   out_7463458794690068065[10] = 0;
   out_7463458794690068065[11] = 0;
   out_7463458794690068065[12] = 0;
   out_7463458794690068065[13] = 0;
   out_7463458794690068065[14] = 0;
   out_7463458794690068065[15] = 0;
   out_7463458794690068065[16] = 1;
   out_7463458794690068065[17] = 0;
   out_7463458794690068065[18] = 0;
   out_7463458794690068065[19] = 1;
   out_7463458794690068065[20] = 0;
   out_7463458794690068065[21] = 0;
   out_7463458794690068065[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7463458794690068065[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7463458794690068065[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7463458794690068065[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7463458794690068065[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7463458794690068065[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7463458794690068065[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7463458794690068065[29] = 0;
   out_7463458794690068065[30] = 0;
   out_7463458794690068065[31] = 0;
   out_7463458794690068065[32] = 0;
   out_7463458794690068065[33] = 0;
   out_7463458794690068065[34] = 0;
   out_7463458794690068065[35] = 0;
   out_7463458794690068065[36] = 0;
   out_7463458794690068065[37] = 0;
   out_7463458794690068065[38] = 0;
   out_7463458794690068065[39] = 1;
   out_7463458794690068065[40] = 0;
   out_7463458794690068065[41] = 0;
   out_7463458794690068065[42] = 1;
   out_7463458794690068065[43] = 0;
   out_7463458794690068065[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7463458794690068065[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7463458794690068065[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7463458794690068065[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7463458794690068065[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7463458794690068065[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7463458794690068065[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7463458794690068065[51] = 0;
   out_7463458794690068065[52] = 0;
   out_7463458794690068065[53] = 0;
   out_7463458794690068065[54] = 0;
   out_7463458794690068065[55] = 0;
   out_7463458794690068065[56] = 0;
   out_7463458794690068065[57] = 0;
   out_7463458794690068065[58] = 0;
   out_7463458794690068065[59] = 0;
   out_7463458794690068065[60] = 0;
   out_7463458794690068065[61] = 0;
   out_7463458794690068065[62] = 1;
   out_7463458794690068065[63] = 0;
   out_7463458794690068065[64] = 0;
   out_7463458794690068065[65] = 1;
}
void h_12(double *state, double *unused, double *out_3832372823363074171) {
   out_3832372823363074171[0] = state[0];
   out_3832372823363074171[1] = state[1];
   out_3832372823363074171[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3433260322019237894) {
   out_3433260322019237894[0] = 1;
   out_3433260322019237894[1] = 0;
   out_3433260322019237894[2] = 0;
   out_3433260322019237894[3] = 0;
   out_3433260322019237894[4] = 0;
   out_3433260322019237894[5] = 0;
   out_3433260322019237894[6] = 0;
   out_3433260322019237894[7] = 0;
   out_3433260322019237894[8] = 0;
   out_3433260322019237894[9] = 0;
   out_3433260322019237894[10] = 0;
   out_3433260322019237894[11] = 0;
   out_3433260322019237894[12] = 0;
   out_3433260322019237894[13] = 0;
   out_3433260322019237894[14] = 0;
   out_3433260322019237894[15] = 0;
   out_3433260322019237894[16] = 0;
   out_3433260322019237894[17] = 0;
   out_3433260322019237894[18] = 0;
   out_3433260322019237894[19] = 0;
   out_3433260322019237894[20] = 0;
   out_3433260322019237894[21] = 0;
   out_3433260322019237894[22] = 0;
   out_3433260322019237894[23] = 1;
   out_3433260322019237894[24] = 0;
   out_3433260322019237894[25] = 0;
   out_3433260322019237894[26] = 0;
   out_3433260322019237894[27] = 0;
   out_3433260322019237894[28] = 0;
   out_3433260322019237894[29] = 0;
   out_3433260322019237894[30] = 0;
   out_3433260322019237894[31] = 0;
   out_3433260322019237894[32] = 0;
   out_3433260322019237894[33] = 0;
   out_3433260322019237894[34] = 0;
   out_3433260322019237894[35] = 0;
   out_3433260322019237894[36] = 0;
   out_3433260322019237894[37] = 0;
   out_3433260322019237894[38] = 0;
   out_3433260322019237894[39] = 0;
   out_3433260322019237894[40] = 0;
   out_3433260322019237894[41] = 0;
   out_3433260322019237894[42] = 0;
   out_3433260322019237894[43] = 0;
   out_3433260322019237894[44] = 0;
   out_3433260322019237894[45] = 0;
   out_3433260322019237894[46] = 1;
   out_3433260322019237894[47] = 0;
   out_3433260322019237894[48] = 0;
   out_3433260322019237894[49] = 0;
   out_3433260322019237894[50] = 0;
   out_3433260322019237894[51] = 0;
   out_3433260322019237894[52] = 0;
   out_3433260322019237894[53] = 0;
   out_3433260322019237894[54] = 0;
   out_3433260322019237894[55] = 0;
   out_3433260322019237894[56] = 0;
   out_3433260322019237894[57] = 0;
   out_3433260322019237894[58] = 0;
   out_3433260322019237894[59] = 0;
   out_3433260322019237894[60] = 0;
   out_3433260322019237894[61] = 0;
   out_3433260322019237894[62] = 0;
   out_3433260322019237894[63] = 0;
   out_3433260322019237894[64] = 0;
   out_3433260322019237894[65] = 0;
}
void h_35(double *state, double *unused, double *out_6235703645985212609) {
   out_6235703645985212609[0] = state[7];
   out_6235703645985212609[1] = state[8];
   out_6235703645985212609[2] = state[9];
}
void H_35(double *state, double *unused, double *out_687697289694224185) {
   out_687697289694224185[0] = 0;
   out_687697289694224185[1] = 0;
   out_687697289694224185[2] = 0;
   out_687697289694224185[3] = 0;
   out_687697289694224185[4] = 0;
   out_687697289694224185[5] = 0;
   out_687697289694224185[6] = 0;
   out_687697289694224185[7] = 1;
   out_687697289694224185[8] = 0;
   out_687697289694224185[9] = 0;
   out_687697289694224185[10] = 0;
   out_687697289694224185[11] = 0;
   out_687697289694224185[12] = 0;
   out_687697289694224185[13] = 0;
   out_687697289694224185[14] = 0;
   out_687697289694224185[15] = 0;
   out_687697289694224185[16] = 0;
   out_687697289694224185[17] = 0;
   out_687697289694224185[18] = 0;
   out_687697289694224185[19] = 0;
   out_687697289694224185[20] = 0;
   out_687697289694224185[21] = 0;
   out_687697289694224185[22] = 0;
   out_687697289694224185[23] = 0;
   out_687697289694224185[24] = 0;
   out_687697289694224185[25] = 0;
   out_687697289694224185[26] = 0;
   out_687697289694224185[27] = 0;
   out_687697289694224185[28] = 0;
   out_687697289694224185[29] = 0;
   out_687697289694224185[30] = 1;
   out_687697289694224185[31] = 0;
   out_687697289694224185[32] = 0;
   out_687697289694224185[33] = 0;
   out_687697289694224185[34] = 0;
   out_687697289694224185[35] = 0;
   out_687697289694224185[36] = 0;
   out_687697289694224185[37] = 0;
   out_687697289694224185[38] = 0;
   out_687697289694224185[39] = 0;
   out_687697289694224185[40] = 0;
   out_687697289694224185[41] = 0;
   out_687697289694224185[42] = 0;
   out_687697289694224185[43] = 0;
   out_687697289694224185[44] = 0;
   out_687697289694224185[45] = 0;
   out_687697289694224185[46] = 0;
   out_687697289694224185[47] = 0;
   out_687697289694224185[48] = 0;
   out_687697289694224185[49] = 0;
   out_687697289694224185[50] = 0;
   out_687697289694224185[51] = 0;
   out_687697289694224185[52] = 0;
   out_687697289694224185[53] = 1;
   out_687697289694224185[54] = 0;
   out_687697289694224185[55] = 0;
   out_687697289694224185[56] = 0;
   out_687697289694224185[57] = 0;
   out_687697289694224185[58] = 0;
   out_687697289694224185[59] = 0;
   out_687697289694224185[60] = 0;
   out_687697289694224185[61] = 0;
   out_687697289694224185[62] = 0;
   out_687697289694224185[63] = 0;
   out_687697289694224185[64] = 0;
   out_687697289694224185[65] = 0;
}
void h_32(double *state, double *unused, double *out_6171406099382606695) {
   out_6171406099382606695[0] = state[3];
   out_6171406099382606695[1] = state[4];
   out_6171406099382606695[2] = state[5];
   out_6171406099382606695[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7602561793388340541) {
   out_7602561793388340541[0] = 0;
   out_7602561793388340541[1] = 0;
   out_7602561793388340541[2] = 0;
   out_7602561793388340541[3] = 1;
   out_7602561793388340541[4] = 0;
   out_7602561793388340541[5] = 0;
   out_7602561793388340541[6] = 0;
   out_7602561793388340541[7] = 0;
   out_7602561793388340541[8] = 0;
   out_7602561793388340541[9] = 0;
   out_7602561793388340541[10] = 0;
   out_7602561793388340541[11] = 0;
   out_7602561793388340541[12] = 0;
   out_7602561793388340541[13] = 0;
   out_7602561793388340541[14] = 0;
   out_7602561793388340541[15] = 0;
   out_7602561793388340541[16] = 0;
   out_7602561793388340541[17] = 0;
   out_7602561793388340541[18] = 0;
   out_7602561793388340541[19] = 0;
   out_7602561793388340541[20] = 0;
   out_7602561793388340541[21] = 0;
   out_7602561793388340541[22] = 0;
   out_7602561793388340541[23] = 0;
   out_7602561793388340541[24] = 0;
   out_7602561793388340541[25] = 0;
   out_7602561793388340541[26] = 1;
   out_7602561793388340541[27] = 0;
   out_7602561793388340541[28] = 0;
   out_7602561793388340541[29] = 0;
   out_7602561793388340541[30] = 0;
   out_7602561793388340541[31] = 0;
   out_7602561793388340541[32] = 0;
   out_7602561793388340541[33] = 0;
   out_7602561793388340541[34] = 0;
   out_7602561793388340541[35] = 0;
   out_7602561793388340541[36] = 0;
   out_7602561793388340541[37] = 0;
   out_7602561793388340541[38] = 0;
   out_7602561793388340541[39] = 0;
   out_7602561793388340541[40] = 0;
   out_7602561793388340541[41] = 0;
   out_7602561793388340541[42] = 0;
   out_7602561793388340541[43] = 0;
   out_7602561793388340541[44] = 0;
   out_7602561793388340541[45] = 0;
   out_7602561793388340541[46] = 0;
   out_7602561793388340541[47] = 0;
   out_7602561793388340541[48] = 0;
   out_7602561793388340541[49] = 1;
   out_7602561793388340541[50] = 0;
   out_7602561793388340541[51] = 0;
   out_7602561793388340541[52] = 0;
   out_7602561793388340541[53] = 0;
   out_7602561793388340541[54] = 0;
   out_7602561793388340541[55] = 0;
   out_7602561793388340541[56] = 0;
   out_7602561793388340541[57] = 0;
   out_7602561793388340541[58] = 0;
   out_7602561793388340541[59] = 0;
   out_7602561793388340541[60] = 0;
   out_7602561793388340541[61] = 0;
   out_7602561793388340541[62] = 0;
   out_7602561793388340541[63] = 0;
   out_7602561793388340541[64] = 0;
   out_7602561793388340541[65] = 0;
   out_7602561793388340541[66] = 0;
   out_7602561793388340541[67] = 0;
   out_7602561793388340541[68] = 0;
   out_7602561793388340541[69] = 0;
   out_7602561793388340541[70] = 0;
   out_7602561793388340541[71] = 0;
   out_7602561793388340541[72] = 1;
   out_7602561793388340541[73] = 0;
   out_7602561793388340541[74] = 0;
   out_7602561793388340541[75] = 0;
   out_7602561793388340541[76] = 0;
   out_7602561793388340541[77] = 0;
   out_7602561793388340541[78] = 0;
   out_7602561793388340541[79] = 0;
   out_7602561793388340541[80] = 0;
   out_7602561793388340541[81] = 0;
   out_7602561793388340541[82] = 0;
   out_7602561793388340541[83] = 0;
   out_7602561793388340541[84] = 0;
   out_7602561793388340541[85] = 0;
   out_7602561793388340541[86] = 0;
   out_7602561793388340541[87] = 0;
}
void h_13(double *state, double *unused, double *out_5743512044801874994) {
   out_5743512044801874994[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5743512044801874994[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5743512044801874994[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_9039445725242075232) {
   out_9039445725242075232[0] = 0;
   out_9039445725242075232[1] = 0;
   out_9039445725242075232[2] = 0;
   out_9039445725242075232[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9039445725242075232[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9039445725242075232[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_9039445725242075232[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9039445725242075232[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_9039445725242075232[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_9039445725242075232[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_9039445725242075232[10] = 0;
   out_9039445725242075232[11] = 0;
   out_9039445725242075232[12] = 0;
   out_9039445725242075232[13] = 0;
   out_9039445725242075232[14] = 0;
   out_9039445725242075232[15] = 0;
   out_9039445725242075232[16] = 0;
   out_9039445725242075232[17] = 0;
   out_9039445725242075232[18] = 0;
   out_9039445725242075232[19] = 0;
   out_9039445725242075232[20] = 0;
   out_9039445725242075232[21] = 0;
   out_9039445725242075232[22] = 0;
   out_9039445725242075232[23] = 0;
   out_9039445725242075232[24] = 0;
   out_9039445725242075232[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9039445725242075232[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9039445725242075232[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9039445725242075232[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_9039445725242075232[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_9039445725242075232[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_9039445725242075232[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_9039445725242075232[32] = 0;
   out_9039445725242075232[33] = 0;
   out_9039445725242075232[34] = 0;
   out_9039445725242075232[35] = 0;
   out_9039445725242075232[36] = 0;
   out_9039445725242075232[37] = 0;
   out_9039445725242075232[38] = 0;
   out_9039445725242075232[39] = 0;
   out_9039445725242075232[40] = 0;
   out_9039445725242075232[41] = 0;
   out_9039445725242075232[42] = 0;
   out_9039445725242075232[43] = 0;
   out_9039445725242075232[44] = 0;
   out_9039445725242075232[45] = 0;
   out_9039445725242075232[46] = 0;
   out_9039445725242075232[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9039445725242075232[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_9039445725242075232[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9039445725242075232[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9039445725242075232[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_9039445725242075232[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_9039445725242075232[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_9039445725242075232[54] = 0;
   out_9039445725242075232[55] = 0;
   out_9039445725242075232[56] = 0;
   out_9039445725242075232[57] = 0;
   out_9039445725242075232[58] = 0;
   out_9039445725242075232[59] = 0;
   out_9039445725242075232[60] = 0;
   out_9039445725242075232[61] = 0;
   out_9039445725242075232[62] = 0;
   out_9039445725242075232[63] = 0;
   out_9039445725242075232[64] = 0;
   out_9039445725242075232[65] = 0;
}
void h_14(double *state, double *unused, double *out_8505409878227279928) {
   out_8505409878227279928[0] = state[10];
   out_8505409878227279928[1] = state[11];
   out_8505409878227279928[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3813169700437240916) {
   out_3813169700437240916[0] = 0;
   out_3813169700437240916[1] = 0;
   out_3813169700437240916[2] = 0;
   out_3813169700437240916[3] = 0;
   out_3813169700437240916[4] = 0;
   out_3813169700437240916[5] = 0;
   out_3813169700437240916[6] = 0;
   out_3813169700437240916[7] = 0;
   out_3813169700437240916[8] = 0;
   out_3813169700437240916[9] = 0;
   out_3813169700437240916[10] = 1;
   out_3813169700437240916[11] = 0;
   out_3813169700437240916[12] = 0;
   out_3813169700437240916[13] = 0;
   out_3813169700437240916[14] = 0;
   out_3813169700437240916[15] = 0;
   out_3813169700437240916[16] = 0;
   out_3813169700437240916[17] = 0;
   out_3813169700437240916[18] = 0;
   out_3813169700437240916[19] = 0;
   out_3813169700437240916[20] = 0;
   out_3813169700437240916[21] = 0;
   out_3813169700437240916[22] = 0;
   out_3813169700437240916[23] = 0;
   out_3813169700437240916[24] = 0;
   out_3813169700437240916[25] = 0;
   out_3813169700437240916[26] = 0;
   out_3813169700437240916[27] = 0;
   out_3813169700437240916[28] = 0;
   out_3813169700437240916[29] = 0;
   out_3813169700437240916[30] = 0;
   out_3813169700437240916[31] = 0;
   out_3813169700437240916[32] = 0;
   out_3813169700437240916[33] = 1;
   out_3813169700437240916[34] = 0;
   out_3813169700437240916[35] = 0;
   out_3813169700437240916[36] = 0;
   out_3813169700437240916[37] = 0;
   out_3813169700437240916[38] = 0;
   out_3813169700437240916[39] = 0;
   out_3813169700437240916[40] = 0;
   out_3813169700437240916[41] = 0;
   out_3813169700437240916[42] = 0;
   out_3813169700437240916[43] = 0;
   out_3813169700437240916[44] = 0;
   out_3813169700437240916[45] = 0;
   out_3813169700437240916[46] = 0;
   out_3813169700437240916[47] = 0;
   out_3813169700437240916[48] = 0;
   out_3813169700437240916[49] = 0;
   out_3813169700437240916[50] = 0;
   out_3813169700437240916[51] = 0;
   out_3813169700437240916[52] = 0;
   out_3813169700437240916[53] = 0;
   out_3813169700437240916[54] = 0;
   out_3813169700437240916[55] = 0;
   out_3813169700437240916[56] = 1;
   out_3813169700437240916[57] = 0;
   out_3813169700437240916[58] = 0;
   out_3813169700437240916[59] = 0;
   out_3813169700437240916[60] = 0;
   out_3813169700437240916[61] = 0;
   out_3813169700437240916[62] = 0;
   out_3813169700437240916[63] = 0;
   out_3813169700437240916[64] = 0;
   out_3813169700437240916[65] = 0;
}
void h_33(double *state, double *unused, double *out_1281986419790075968) {
   out_1281986419790075968[0] = state[16];
   out_1281986419790075968[1] = state[17];
   out_1281986419790075968[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2462859714944633419) {
   out_2462859714944633419[0] = 0;
   out_2462859714944633419[1] = 0;
   out_2462859714944633419[2] = 0;
   out_2462859714944633419[3] = 0;
   out_2462859714944633419[4] = 0;
   out_2462859714944633419[5] = 0;
   out_2462859714944633419[6] = 0;
   out_2462859714944633419[7] = 0;
   out_2462859714944633419[8] = 0;
   out_2462859714944633419[9] = 0;
   out_2462859714944633419[10] = 0;
   out_2462859714944633419[11] = 0;
   out_2462859714944633419[12] = 0;
   out_2462859714944633419[13] = 0;
   out_2462859714944633419[14] = 0;
   out_2462859714944633419[15] = 0;
   out_2462859714944633419[16] = 1;
   out_2462859714944633419[17] = 0;
   out_2462859714944633419[18] = 0;
   out_2462859714944633419[19] = 0;
   out_2462859714944633419[20] = 0;
   out_2462859714944633419[21] = 0;
   out_2462859714944633419[22] = 0;
   out_2462859714944633419[23] = 0;
   out_2462859714944633419[24] = 0;
   out_2462859714944633419[25] = 0;
   out_2462859714944633419[26] = 0;
   out_2462859714944633419[27] = 0;
   out_2462859714944633419[28] = 0;
   out_2462859714944633419[29] = 0;
   out_2462859714944633419[30] = 0;
   out_2462859714944633419[31] = 0;
   out_2462859714944633419[32] = 0;
   out_2462859714944633419[33] = 0;
   out_2462859714944633419[34] = 0;
   out_2462859714944633419[35] = 0;
   out_2462859714944633419[36] = 0;
   out_2462859714944633419[37] = 0;
   out_2462859714944633419[38] = 0;
   out_2462859714944633419[39] = 1;
   out_2462859714944633419[40] = 0;
   out_2462859714944633419[41] = 0;
   out_2462859714944633419[42] = 0;
   out_2462859714944633419[43] = 0;
   out_2462859714944633419[44] = 0;
   out_2462859714944633419[45] = 0;
   out_2462859714944633419[46] = 0;
   out_2462859714944633419[47] = 0;
   out_2462859714944633419[48] = 0;
   out_2462859714944633419[49] = 0;
   out_2462859714944633419[50] = 0;
   out_2462859714944633419[51] = 0;
   out_2462859714944633419[52] = 0;
   out_2462859714944633419[53] = 0;
   out_2462859714944633419[54] = 0;
   out_2462859714944633419[55] = 0;
   out_2462859714944633419[56] = 0;
   out_2462859714944633419[57] = 0;
   out_2462859714944633419[58] = 0;
   out_2462859714944633419[59] = 0;
   out_2462859714944633419[60] = 0;
   out_2462859714944633419[61] = 0;
   out_2462859714944633419[62] = 1;
   out_2462859714944633419[63] = 0;
   out_2462859714944633419[64] = 0;
   out_2462859714944633419[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8859560392771966978) {
  H(in_vec, out_8859560392771966978);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_275793430844566277) {
  err_fun(nom_x, delta_x, out_275793430844566277);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1256350007897599276) {
  inv_err_fun(nom_x, true_x, out_1256350007897599276);
}
void live_H_mod_fun(double *state, double *out_6601594514128786682) {
  H_mod_fun(state, out_6601594514128786682);
}
void live_f_fun(double *state, double dt, double *out_8845733240490315512) {
  f_fun(state,  dt, out_8845733240490315512);
}
void live_F_fun(double *state, double dt, double *out_1382002735738886191) {
  F_fun(state,  dt, out_1382002735738886191);
}
void live_h_4(double *state, double *unused, double *out_6295913573181500801) {
  h_4(state, unused, out_6295913573181500801);
}
void live_H_4(double *state, double *unused, double *out_7346355438007863230) {
  H_4(state, unused, out_7346355438007863230);
}
void live_h_9(double *state, double *unused, double *out_8505409878227279928) {
  h_9(state, unused, out_8505409878227279928);
}
void live_H_9(double *state, double *unused, double *out_3813169700437240916) {
  H_9(state, unused, out_3813169700437240916);
}
void live_h_10(double *state, double *unused, double *out_2471859477179688568) {
  h_10(state, unused, out_2471859477179688568);
}
void live_H_10(double *state, double *unused, double *out_7463458794690068065) {
  H_10(state, unused, out_7463458794690068065);
}
void live_h_12(double *state, double *unused, double *out_3832372823363074171) {
  h_12(state, unused, out_3832372823363074171);
}
void live_H_12(double *state, double *unused, double *out_3433260322019237894) {
  H_12(state, unused, out_3433260322019237894);
}
void live_h_35(double *state, double *unused, double *out_6235703645985212609) {
  h_35(state, unused, out_6235703645985212609);
}
void live_H_35(double *state, double *unused, double *out_687697289694224185) {
  H_35(state, unused, out_687697289694224185);
}
void live_h_32(double *state, double *unused, double *out_6171406099382606695) {
  h_32(state, unused, out_6171406099382606695);
}
void live_H_32(double *state, double *unused, double *out_7602561793388340541) {
  H_32(state, unused, out_7602561793388340541);
}
void live_h_13(double *state, double *unused, double *out_5743512044801874994) {
  h_13(state, unused, out_5743512044801874994);
}
void live_H_13(double *state, double *unused, double *out_9039445725242075232) {
  H_13(state, unused, out_9039445725242075232);
}
void live_h_14(double *state, double *unused, double *out_8505409878227279928) {
  h_14(state, unused, out_8505409878227279928);
}
void live_H_14(double *state, double *unused, double *out_3813169700437240916) {
  H_14(state, unused, out_3813169700437240916);
}
void live_h_33(double *state, double *unused, double *out_1281986419790075968) {
  h_33(state, unused, out_1281986419790075968);
}
void live_H_33(double *state, double *unused, double *out_2462859714944633419) {
  H_33(state, unused, out_2462859714944633419);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
