#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7941023759042693369) {
   out_7941023759042693369[0] = 0;
   out_7941023759042693369[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7941023759042693369[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7941023759042693369[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7941023759042693369[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7941023759042693369[5] = -sin(in_vec[1]);
   out_7941023759042693369[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7941023759042693369[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7941023759042693369[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7941023759042693369[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7941023759042693369[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7941023759042693369[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7941023759042693369[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7941023759042693369[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7941023759042693369[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7941023759042693369[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7941023759042693369[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7941023759042693369[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1859974344818569590) {
   out_1859974344818569590[0] = delta_x[0] + nom_x[0];
   out_1859974344818569590[1] = delta_x[1] + nom_x[1];
   out_1859974344818569590[2] = delta_x[2] + nom_x[2];
   out_1859974344818569590[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1859974344818569590[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1859974344818569590[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1859974344818569590[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1859974344818569590[7] = delta_x[6] + nom_x[7];
   out_1859974344818569590[8] = delta_x[7] + nom_x[8];
   out_1859974344818569590[9] = delta_x[8] + nom_x[9];
   out_1859974344818569590[10] = delta_x[9] + nom_x[10];
   out_1859974344818569590[11] = delta_x[10] + nom_x[11];
   out_1859974344818569590[12] = delta_x[11] + nom_x[12];
   out_1859974344818569590[13] = delta_x[12] + nom_x[13];
   out_1859974344818569590[14] = delta_x[13] + nom_x[14];
   out_1859974344818569590[15] = delta_x[14] + nom_x[15];
   out_1859974344818569590[16] = delta_x[15] + nom_x[16];
   out_1859974344818569590[17] = delta_x[16] + nom_x[17];
   out_1859974344818569590[18] = delta_x[17] + nom_x[18];
   out_1859974344818569590[19] = delta_x[18] + nom_x[19];
   out_1859974344818569590[20] = delta_x[19] + nom_x[20];
   out_1859974344818569590[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9004749950139765637) {
   out_9004749950139765637[0] = -nom_x[0] + true_x[0];
   out_9004749950139765637[1] = -nom_x[1] + true_x[1];
   out_9004749950139765637[2] = -nom_x[2] + true_x[2];
   out_9004749950139765637[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9004749950139765637[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9004749950139765637[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9004749950139765637[6] = -nom_x[7] + true_x[7];
   out_9004749950139765637[7] = -nom_x[8] + true_x[8];
   out_9004749950139765637[8] = -nom_x[9] + true_x[9];
   out_9004749950139765637[9] = -nom_x[10] + true_x[10];
   out_9004749950139765637[10] = -nom_x[11] + true_x[11];
   out_9004749950139765637[11] = -nom_x[12] + true_x[12];
   out_9004749950139765637[12] = -nom_x[13] + true_x[13];
   out_9004749950139765637[13] = -nom_x[14] + true_x[14];
   out_9004749950139765637[14] = -nom_x[15] + true_x[15];
   out_9004749950139765637[15] = -nom_x[16] + true_x[16];
   out_9004749950139765637[16] = -nom_x[17] + true_x[17];
   out_9004749950139765637[17] = -nom_x[18] + true_x[18];
   out_9004749950139765637[18] = -nom_x[19] + true_x[19];
   out_9004749950139765637[19] = -nom_x[20] + true_x[20];
   out_9004749950139765637[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2720961815570706232) {
   out_2720961815570706232[0] = 1.0;
   out_2720961815570706232[1] = 0;
   out_2720961815570706232[2] = 0;
   out_2720961815570706232[3] = 0;
   out_2720961815570706232[4] = 0;
   out_2720961815570706232[5] = 0;
   out_2720961815570706232[6] = 0;
   out_2720961815570706232[7] = 0;
   out_2720961815570706232[8] = 0;
   out_2720961815570706232[9] = 0;
   out_2720961815570706232[10] = 0;
   out_2720961815570706232[11] = 0;
   out_2720961815570706232[12] = 0;
   out_2720961815570706232[13] = 0;
   out_2720961815570706232[14] = 0;
   out_2720961815570706232[15] = 0;
   out_2720961815570706232[16] = 0;
   out_2720961815570706232[17] = 0;
   out_2720961815570706232[18] = 0;
   out_2720961815570706232[19] = 0;
   out_2720961815570706232[20] = 0;
   out_2720961815570706232[21] = 0;
   out_2720961815570706232[22] = 1.0;
   out_2720961815570706232[23] = 0;
   out_2720961815570706232[24] = 0;
   out_2720961815570706232[25] = 0;
   out_2720961815570706232[26] = 0;
   out_2720961815570706232[27] = 0;
   out_2720961815570706232[28] = 0;
   out_2720961815570706232[29] = 0;
   out_2720961815570706232[30] = 0;
   out_2720961815570706232[31] = 0;
   out_2720961815570706232[32] = 0;
   out_2720961815570706232[33] = 0;
   out_2720961815570706232[34] = 0;
   out_2720961815570706232[35] = 0;
   out_2720961815570706232[36] = 0;
   out_2720961815570706232[37] = 0;
   out_2720961815570706232[38] = 0;
   out_2720961815570706232[39] = 0;
   out_2720961815570706232[40] = 0;
   out_2720961815570706232[41] = 0;
   out_2720961815570706232[42] = 0;
   out_2720961815570706232[43] = 0;
   out_2720961815570706232[44] = 1.0;
   out_2720961815570706232[45] = 0;
   out_2720961815570706232[46] = 0;
   out_2720961815570706232[47] = 0;
   out_2720961815570706232[48] = 0;
   out_2720961815570706232[49] = 0;
   out_2720961815570706232[50] = 0;
   out_2720961815570706232[51] = 0;
   out_2720961815570706232[52] = 0;
   out_2720961815570706232[53] = 0;
   out_2720961815570706232[54] = 0;
   out_2720961815570706232[55] = 0;
   out_2720961815570706232[56] = 0;
   out_2720961815570706232[57] = 0;
   out_2720961815570706232[58] = 0;
   out_2720961815570706232[59] = 0;
   out_2720961815570706232[60] = 0;
   out_2720961815570706232[61] = 0;
   out_2720961815570706232[62] = 0;
   out_2720961815570706232[63] = 0;
   out_2720961815570706232[64] = 0;
   out_2720961815570706232[65] = 0;
   out_2720961815570706232[66] = -0.5*state[4];
   out_2720961815570706232[67] = -0.5*state[5];
   out_2720961815570706232[68] = -0.5*state[6];
   out_2720961815570706232[69] = 0;
   out_2720961815570706232[70] = 0;
   out_2720961815570706232[71] = 0;
   out_2720961815570706232[72] = 0;
   out_2720961815570706232[73] = 0;
   out_2720961815570706232[74] = 0;
   out_2720961815570706232[75] = 0;
   out_2720961815570706232[76] = 0;
   out_2720961815570706232[77] = 0;
   out_2720961815570706232[78] = 0;
   out_2720961815570706232[79] = 0;
   out_2720961815570706232[80] = 0;
   out_2720961815570706232[81] = 0;
   out_2720961815570706232[82] = 0;
   out_2720961815570706232[83] = 0;
   out_2720961815570706232[84] = 0;
   out_2720961815570706232[85] = 0;
   out_2720961815570706232[86] = 0;
   out_2720961815570706232[87] = 0.5*state[3];
   out_2720961815570706232[88] = 0.5*state[6];
   out_2720961815570706232[89] = -0.5*state[5];
   out_2720961815570706232[90] = 0;
   out_2720961815570706232[91] = 0;
   out_2720961815570706232[92] = 0;
   out_2720961815570706232[93] = 0;
   out_2720961815570706232[94] = 0;
   out_2720961815570706232[95] = 0;
   out_2720961815570706232[96] = 0;
   out_2720961815570706232[97] = 0;
   out_2720961815570706232[98] = 0;
   out_2720961815570706232[99] = 0;
   out_2720961815570706232[100] = 0;
   out_2720961815570706232[101] = 0;
   out_2720961815570706232[102] = 0;
   out_2720961815570706232[103] = 0;
   out_2720961815570706232[104] = 0;
   out_2720961815570706232[105] = 0;
   out_2720961815570706232[106] = 0;
   out_2720961815570706232[107] = 0;
   out_2720961815570706232[108] = -0.5*state[6];
   out_2720961815570706232[109] = 0.5*state[3];
   out_2720961815570706232[110] = 0.5*state[4];
   out_2720961815570706232[111] = 0;
   out_2720961815570706232[112] = 0;
   out_2720961815570706232[113] = 0;
   out_2720961815570706232[114] = 0;
   out_2720961815570706232[115] = 0;
   out_2720961815570706232[116] = 0;
   out_2720961815570706232[117] = 0;
   out_2720961815570706232[118] = 0;
   out_2720961815570706232[119] = 0;
   out_2720961815570706232[120] = 0;
   out_2720961815570706232[121] = 0;
   out_2720961815570706232[122] = 0;
   out_2720961815570706232[123] = 0;
   out_2720961815570706232[124] = 0;
   out_2720961815570706232[125] = 0;
   out_2720961815570706232[126] = 0;
   out_2720961815570706232[127] = 0;
   out_2720961815570706232[128] = 0;
   out_2720961815570706232[129] = 0.5*state[5];
   out_2720961815570706232[130] = -0.5*state[4];
   out_2720961815570706232[131] = 0.5*state[3];
   out_2720961815570706232[132] = 0;
   out_2720961815570706232[133] = 0;
   out_2720961815570706232[134] = 0;
   out_2720961815570706232[135] = 0;
   out_2720961815570706232[136] = 0;
   out_2720961815570706232[137] = 0;
   out_2720961815570706232[138] = 0;
   out_2720961815570706232[139] = 0;
   out_2720961815570706232[140] = 0;
   out_2720961815570706232[141] = 0;
   out_2720961815570706232[142] = 0;
   out_2720961815570706232[143] = 0;
   out_2720961815570706232[144] = 0;
   out_2720961815570706232[145] = 0;
   out_2720961815570706232[146] = 0;
   out_2720961815570706232[147] = 0;
   out_2720961815570706232[148] = 0;
   out_2720961815570706232[149] = 0;
   out_2720961815570706232[150] = 0;
   out_2720961815570706232[151] = 0;
   out_2720961815570706232[152] = 0;
   out_2720961815570706232[153] = 1.0;
   out_2720961815570706232[154] = 0;
   out_2720961815570706232[155] = 0;
   out_2720961815570706232[156] = 0;
   out_2720961815570706232[157] = 0;
   out_2720961815570706232[158] = 0;
   out_2720961815570706232[159] = 0;
   out_2720961815570706232[160] = 0;
   out_2720961815570706232[161] = 0;
   out_2720961815570706232[162] = 0;
   out_2720961815570706232[163] = 0;
   out_2720961815570706232[164] = 0;
   out_2720961815570706232[165] = 0;
   out_2720961815570706232[166] = 0;
   out_2720961815570706232[167] = 0;
   out_2720961815570706232[168] = 0;
   out_2720961815570706232[169] = 0;
   out_2720961815570706232[170] = 0;
   out_2720961815570706232[171] = 0;
   out_2720961815570706232[172] = 0;
   out_2720961815570706232[173] = 0;
   out_2720961815570706232[174] = 0;
   out_2720961815570706232[175] = 1.0;
   out_2720961815570706232[176] = 0;
   out_2720961815570706232[177] = 0;
   out_2720961815570706232[178] = 0;
   out_2720961815570706232[179] = 0;
   out_2720961815570706232[180] = 0;
   out_2720961815570706232[181] = 0;
   out_2720961815570706232[182] = 0;
   out_2720961815570706232[183] = 0;
   out_2720961815570706232[184] = 0;
   out_2720961815570706232[185] = 0;
   out_2720961815570706232[186] = 0;
   out_2720961815570706232[187] = 0;
   out_2720961815570706232[188] = 0;
   out_2720961815570706232[189] = 0;
   out_2720961815570706232[190] = 0;
   out_2720961815570706232[191] = 0;
   out_2720961815570706232[192] = 0;
   out_2720961815570706232[193] = 0;
   out_2720961815570706232[194] = 0;
   out_2720961815570706232[195] = 0;
   out_2720961815570706232[196] = 0;
   out_2720961815570706232[197] = 1.0;
   out_2720961815570706232[198] = 0;
   out_2720961815570706232[199] = 0;
   out_2720961815570706232[200] = 0;
   out_2720961815570706232[201] = 0;
   out_2720961815570706232[202] = 0;
   out_2720961815570706232[203] = 0;
   out_2720961815570706232[204] = 0;
   out_2720961815570706232[205] = 0;
   out_2720961815570706232[206] = 0;
   out_2720961815570706232[207] = 0;
   out_2720961815570706232[208] = 0;
   out_2720961815570706232[209] = 0;
   out_2720961815570706232[210] = 0;
   out_2720961815570706232[211] = 0;
   out_2720961815570706232[212] = 0;
   out_2720961815570706232[213] = 0;
   out_2720961815570706232[214] = 0;
   out_2720961815570706232[215] = 0;
   out_2720961815570706232[216] = 0;
   out_2720961815570706232[217] = 0;
   out_2720961815570706232[218] = 0;
   out_2720961815570706232[219] = 1.0;
   out_2720961815570706232[220] = 0;
   out_2720961815570706232[221] = 0;
   out_2720961815570706232[222] = 0;
   out_2720961815570706232[223] = 0;
   out_2720961815570706232[224] = 0;
   out_2720961815570706232[225] = 0;
   out_2720961815570706232[226] = 0;
   out_2720961815570706232[227] = 0;
   out_2720961815570706232[228] = 0;
   out_2720961815570706232[229] = 0;
   out_2720961815570706232[230] = 0;
   out_2720961815570706232[231] = 0;
   out_2720961815570706232[232] = 0;
   out_2720961815570706232[233] = 0;
   out_2720961815570706232[234] = 0;
   out_2720961815570706232[235] = 0;
   out_2720961815570706232[236] = 0;
   out_2720961815570706232[237] = 0;
   out_2720961815570706232[238] = 0;
   out_2720961815570706232[239] = 0;
   out_2720961815570706232[240] = 0;
   out_2720961815570706232[241] = 1.0;
   out_2720961815570706232[242] = 0;
   out_2720961815570706232[243] = 0;
   out_2720961815570706232[244] = 0;
   out_2720961815570706232[245] = 0;
   out_2720961815570706232[246] = 0;
   out_2720961815570706232[247] = 0;
   out_2720961815570706232[248] = 0;
   out_2720961815570706232[249] = 0;
   out_2720961815570706232[250] = 0;
   out_2720961815570706232[251] = 0;
   out_2720961815570706232[252] = 0;
   out_2720961815570706232[253] = 0;
   out_2720961815570706232[254] = 0;
   out_2720961815570706232[255] = 0;
   out_2720961815570706232[256] = 0;
   out_2720961815570706232[257] = 0;
   out_2720961815570706232[258] = 0;
   out_2720961815570706232[259] = 0;
   out_2720961815570706232[260] = 0;
   out_2720961815570706232[261] = 0;
   out_2720961815570706232[262] = 0;
   out_2720961815570706232[263] = 1.0;
   out_2720961815570706232[264] = 0;
   out_2720961815570706232[265] = 0;
   out_2720961815570706232[266] = 0;
   out_2720961815570706232[267] = 0;
   out_2720961815570706232[268] = 0;
   out_2720961815570706232[269] = 0;
   out_2720961815570706232[270] = 0;
   out_2720961815570706232[271] = 0;
   out_2720961815570706232[272] = 0;
   out_2720961815570706232[273] = 0;
   out_2720961815570706232[274] = 0;
   out_2720961815570706232[275] = 0;
   out_2720961815570706232[276] = 0;
   out_2720961815570706232[277] = 0;
   out_2720961815570706232[278] = 0;
   out_2720961815570706232[279] = 0;
   out_2720961815570706232[280] = 0;
   out_2720961815570706232[281] = 0;
   out_2720961815570706232[282] = 0;
   out_2720961815570706232[283] = 0;
   out_2720961815570706232[284] = 0;
   out_2720961815570706232[285] = 1.0;
   out_2720961815570706232[286] = 0;
   out_2720961815570706232[287] = 0;
   out_2720961815570706232[288] = 0;
   out_2720961815570706232[289] = 0;
   out_2720961815570706232[290] = 0;
   out_2720961815570706232[291] = 0;
   out_2720961815570706232[292] = 0;
   out_2720961815570706232[293] = 0;
   out_2720961815570706232[294] = 0;
   out_2720961815570706232[295] = 0;
   out_2720961815570706232[296] = 0;
   out_2720961815570706232[297] = 0;
   out_2720961815570706232[298] = 0;
   out_2720961815570706232[299] = 0;
   out_2720961815570706232[300] = 0;
   out_2720961815570706232[301] = 0;
   out_2720961815570706232[302] = 0;
   out_2720961815570706232[303] = 0;
   out_2720961815570706232[304] = 0;
   out_2720961815570706232[305] = 0;
   out_2720961815570706232[306] = 0;
   out_2720961815570706232[307] = 1.0;
   out_2720961815570706232[308] = 0;
   out_2720961815570706232[309] = 0;
   out_2720961815570706232[310] = 0;
   out_2720961815570706232[311] = 0;
   out_2720961815570706232[312] = 0;
   out_2720961815570706232[313] = 0;
   out_2720961815570706232[314] = 0;
   out_2720961815570706232[315] = 0;
   out_2720961815570706232[316] = 0;
   out_2720961815570706232[317] = 0;
   out_2720961815570706232[318] = 0;
   out_2720961815570706232[319] = 0;
   out_2720961815570706232[320] = 0;
   out_2720961815570706232[321] = 0;
   out_2720961815570706232[322] = 0;
   out_2720961815570706232[323] = 0;
   out_2720961815570706232[324] = 0;
   out_2720961815570706232[325] = 0;
   out_2720961815570706232[326] = 0;
   out_2720961815570706232[327] = 0;
   out_2720961815570706232[328] = 0;
   out_2720961815570706232[329] = 1.0;
   out_2720961815570706232[330] = 0;
   out_2720961815570706232[331] = 0;
   out_2720961815570706232[332] = 0;
   out_2720961815570706232[333] = 0;
   out_2720961815570706232[334] = 0;
   out_2720961815570706232[335] = 0;
   out_2720961815570706232[336] = 0;
   out_2720961815570706232[337] = 0;
   out_2720961815570706232[338] = 0;
   out_2720961815570706232[339] = 0;
   out_2720961815570706232[340] = 0;
   out_2720961815570706232[341] = 0;
   out_2720961815570706232[342] = 0;
   out_2720961815570706232[343] = 0;
   out_2720961815570706232[344] = 0;
   out_2720961815570706232[345] = 0;
   out_2720961815570706232[346] = 0;
   out_2720961815570706232[347] = 0;
   out_2720961815570706232[348] = 0;
   out_2720961815570706232[349] = 0;
   out_2720961815570706232[350] = 0;
   out_2720961815570706232[351] = 1.0;
   out_2720961815570706232[352] = 0;
   out_2720961815570706232[353] = 0;
   out_2720961815570706232[354] = 0;
   out_2720961815570706232[355] = 0;
   out_2720961815570706232[356] = 0;
   out_2720961815570706232[357] = 0;
   out_2720961815570706232[358] = 0;
   out_2720961815570706232[359] = 0;
   out_2720961815570706232[360] = 0;
   out_2720961815570706232[361] = 0;
   out_2720961815570706232[362] = 0;
   out_2720961815570706232[363] = 0;
   out_2720961815570706232[364] = 0;
   out_2720961815570706232[365] = 0;
   out_2720961815570706232[366] = 0;
   out_2720961815570706232[367] = 0;
   out_2720961815570706232[368] = 0;
   out_2720961815570706232[369] = 0;
   out_2720961815570706232[370] = 0;
   out_2720961815570706232[371] = 0;
   out_2720961815570706232[372] = 0;
   out_2720961815570706232[373] = 1.0;
   out_2720961815570706232[374] = 0;
   out_2720961815570706232[375] = 0;
   out_2720961815570706232[376] = 0;
   out_2720961815570706232[377] = 0;
   out_2720961815570706232[378] = 0;
   out_2720961815570706232[379] = 0;
   out_2720961815570706232[380] = 0;
   out_2720961815570706232[381] = 0;
   out_2720961815570706232[382] = 0;
   out_2720961815570706232[383] = 0;
   out_2720961815570706232[384] = 0;
   out_2720961815570706232[385] = 0;
   out_2720961815570706232[386] = 0;
   out_2720961815570706232[387] = 0;
   out_2720961815570706232[388] = 0;
   out_2720961815570706232[389] = 0;
   out_2720961815570706232[390] = 0;
   out_2720961815570706232[391] = 0;
   out_2720961815570706232[392] = 0;
   out_2720961815570706232[393] = 0;
   out_2720961815570706232[394] = 0;
   out_2720961815570706232[395] = 1.0;
   out_2720961815570706232[396] = 0;
   out_2720961815570706232[397] = 0;
   out_2720961815570706232[398] = 0;
   out_2720961815570706232[399] = 0;
   out_2720961815570706232[400] = 0;
   out_2720961815570706232[401] = 0;
   out_2720961815570706232[402] = 0;
   out_2720961815570706232[403] = 0;
   out_2720961815570706232[404] = 0;
   out_2720961815570706232[405] = 0;
   out_2720961815570706232[406] = 0;
   out_2720961815570706232[407] = 0;
   out_2720961815570706232[408] = 0;
   out_2720961815570706232[409] = 0;
   out_2720961815570706232[410] = 0;
   out_2720961815570706232[411] = 0;
   out_2720961815570706232[412] = 0;
   out_2720961815570706232[413] = 0;
   out_2720961815570706232[414] = 0;
   out_2720961815570706232[415] = 0;
   out_2720961815570706232[416] = 0;
   out_2720961815570706232[417] = 1.0;
   out_2720961815570706232[418] = 0;
   out_2720961815570706232[419] = 0;
   out_2720961815570706232[420] = 0;
   out_2720961815570706232[421] = 0;
   out_2720961815570706232[422] = 0;
   out_2720961815570706232[423] = 0;
   out_2720961815570706232[424] = 0;
   out_2720961815570706232[425] = 0;
   out_2720961815570706232[426] = 0;
   out_2720961815570706232[427] = 0;
   out_2720961815570706232[428] = 0;
   out_2720961815570706232[429] = 0;
   out_2720961815570706232[430] = 0;
   out_2720961815570706232[431] = 0;
   out_2720961815570706232[432] = 0;
   out_2720961815570706232[433] = 0;
   out_2720961815570706232[434] = 0;
   out_2720961815570706232[435] = 0;
   out_2720961815570706232[436] = 0;
   out_2720961815570706232[437] = 0;
   out_2720961815570706232[438] = 0;
   out_2720961815570706232[439] = 1.0;
   out_2720961815570706232[440] = 0;
   out_2720961815570706232[441] = 0;
   out_2720961815570706232[442] = 0;
   out_2720961815570706232[443] = 0;
   out_2720961815570706232[444] = 0;
   out_2720961815570706232[445] = 0;
   out_2720961815570706232[446] = 0;
   out_2720961815570706232[447] = 0;
   out_2720961815570706232[448] = 0;
   out_2720961815570706232[449] = 0;
   out_2720961815570706232[450] = 0;
   out_2720961815570706232[451] = 0;
   out_2720961815570706232[452] = 0;
   out_2720961815570706232[453] = 0;
   out_2720961815570706232[454] = 0;
   out_2720961815570706232[455] = 0;
   out_2720961815570706232[456] = 0;
   out_2720961815570706232[457] = 0;
   out_2720961815570706232[458] = 0;
   out_2720961815570706232[459] = 0;
   out_2720961815570706232[460] = 0;
   out_2720961815570706232[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3053570887846599330) {
   out_3053570887846599330[0] = dt*state[7] + state[0];
   out_3053570887846599330[1] = dt*state[8] + state[1];
   out_3053570887846599330[2] = dt*state[9] + state[2];
   out_3053570887846599330[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3053570887846599330[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3053570887846599330[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3053570887846599330[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3053570887846599330[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3053570887846599330[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3053570887846599330[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3053570887846599330[10] = state[10];
   out_3053570887846599330[11] = state[11];
   out_3053570887846599330[12] = state[12];
   out_3053570887846599330[13] = state[13];
   out_3053570887846599330[14] = state[14];
   out_3053570887846599330[15] = state[15];
   out_3053570887846599330[16] = state[16];
   out_3053570887846599330[17] = state[17];
   out_3053570887846599330[18] = state[18];
   out_3053570887846599330[19] = state[19];
   out_3053570887846599330[20] = state[20];
   out_3053570887846599330[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4672631377469707742) {
   out_4672631377469707742[0] = 1;
   out_4672631377469707742[1] = 0;
   out_4672631377469707742[2] = 0;
   out_4672631377469707742[3] = 0;
   out_4672631377469707742[4] = 0;
   out_4672631377469707742[5] = 0;
   out_4672631377469707742[6] = dt;
   out_4672631377469707742[7] = 0;
   out_4672631377469707742[8] = 0;
   out_4672631377469707742[9] = 0;
   out_4672631377469707742[10] = 0;
   out_4672631377469707742[11] = 0;
   out_4672631377469707742[12] = 0;
   out_4672631377469707742[13] = 0;
   out_4672631377469707742[14] = 0;
   out_4672631377469707742[15] = 0;
   out_4672631377469707742[16] = 0;
   out_4672631377469707742[17] = 0;
   out_4672631377469707742[18] = 0;
   out_4672631377469707742[19] = 0;
   out_4672631377469707742[20] = 0;
   out_4672631377469707742[21] = 0;
   out_4672631377469707742[22] = 1;
   out_4672631377469707742[23] = 0;
   out_4672631377469707742[24] = 0;
   out_4672631377469707742[25] = 0;
   out_4672631377469707742[26] = 0;
   out_4672631377469707742[27] = 0;
   out_4672631377469707742[28] = dt;
   out_4672631377469707742[29] = 0;
   out_4672631377469707742[30] = 0;
   out_4672631377469707742[31] = 0;
   out_4672631377469707742[32] = 0;
   out_4672631377469707742[33] = 0;
   out_4672631377469707742[34] = 0;
   out_4672631377469707742[35] = 0;
   out_4672631377469707742[36] = 0;
   out_4672631377469707742[37] = 0;
   out_4672631377469707742[38] = 0;
   out_4672631377469707742[39] = 0;
   out_4672631377469707742[40] = 0;
   out_4672631377469707742[41] = 0;
   out_4672631377469707742[42] = 0;
   out_4672631377469707742[43] = 0;
   out_4672631377469707742[44] = 1;
   out_4672631377469707742[45] = 0;
   out_4672631377469707742[46] = 0;
   out_4672631377469707742[47] = 0;
   out_4672631377469707742[48] = 0;
   out_4672631377469707742[49] = 0;
   out_4672631377469707742[50] = dt;
   out_4672631377469707742[51] = 0;
   out_4672631377469707742[52] = 0;
   out_4672631377469707742[53] = 0;
   out_4672631377469707742[54] = 0;
   out_4672631377469707742[55] = 0;
   out_4672631377469707742[56] = 0;
   out_4672631377469707742[57] = 0;
   out_4672631377469707742[58] = 0;
   out_4672631377469707742[59] = 0;
   out_4672631377469707742[60] = 0;
   out_4672631377469707742[61] = 0;
   out_4672631377469707742[62] = 0;
   out_4672631377469707742[63] = 0;
   out_4672631377469707742[64] = 0;
   out_4672631377469707742[65] = 0;
   out_4672631377469707742[66] = 1;
   out_4672631377469707742[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4672631377469707742[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4672631377469707742[69] = 0;
   out_4672631377469707742[70] = 0;
   out_4672631377469707742[71] = 0;
   out_4672631377469707742[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4672631377469707742[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4672631377469707742[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4672631377469707742[75] = 0;
   out_4672631377469707742[76] = 0;
   out_4672631377469707742[77] = 0;
   out_4672631377469707742[78] = 0;
   out_4672631377469707742[79] = 0;
   out_4672631377469707742[80] = 0;
   out_4672631377469707742[81] = 0;
   out_4672631377469707742[82] = 0;
   out_4672631377469707742[83] = 0;
   out_4672631377469707742[84] = 0;
   out_4672631377469707742[85] = 0;
   out_4672631377469707742[86] = 0;
   out_4672631377469707742[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4672631377469707742[88] = 1;
   out_4672631377469707742[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4672631377469707742[90] = 0;
   out_4672631377469707742[91] = 0;
   out_4672631377469707742[92] = 0;
   out_4672631377469707742[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4672631377469707742[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4672631377469707742[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4672631377469707742[96] = 0;
   out_4672631377469707742[97] = 0;
   out_4672631377469707742[98] = 0;
   out_4672631377469707742[99] = 0;
   out_4672631377469707742[100] = 0;
   out_4672631377469707742[101] = 0;
   out_4672631377469707742[102] = 0;
   out_4672631377469707742[103] = 0;
   out_4672631377469707742[104] = 0;
   out_4672631377469707742[105] = 0;
   out_4672631377469707742[106] = 0;
   out_4672631377469707742[107] = 0;
   out_4672631377469707742[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4672631377469707742[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4672631377469707742[110] = 1;
   out_4672631377469707742[111] = 0;
   out_4672631377469707742[112] = 0;
   out_4672631377469707742[113] = 0;
   out_4672631377469707742[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4672631377469707742[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4672631377469707742[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4672631377469707742[117] = 0;
   out_4672631377469707742[118] = 0;
   out_4672631377469707742[119] = 0;
   out_4672631377469707742[120] = 0;
   out_4672631377469707742[121] = 0;
   out_4672631377469707742[122] = 0;
   out_4672631377469707742[123] = 0;
   out_4672631377469707742[124] = 0;
   out_4672631377469707742[125] = 0;
   out_4672631377469707742[126] = 0;
   out_4672631377469707742[127] = 0;
   out_4672631377469707742[128] = 0;
   out_4672631377469707742[129] = 0;
   out_4672631377469707742[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4672631377469707742[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4672631377469707742[132] = 1;
   out_4672631377469707742[133] = 0;
   out_4672631377469707742[134] = 0;
   out_4672631377469707742[135] = 0;
   out_4672631377469707742[136] = 0;
   out_4672631377469707742[137] = 0;
   out_4672631377469707742[138] = 0;
   out_4672631377469707742[139] = 0;
   out_4672631377469707742[140] = 0;
   out_4672631377469707742[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4672631377469707742[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4672631377469707742[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4672631377469707742[144] = 0;
   out_4672631377469707742[145] = 0;
   out_4672631377469707742[146] = 0;
   out_4672631377469707742[147] = 0;
   out_4672631377469707742[148] = 0;
   out_4672631377469707742[149] = 0;
   out_4672631377469707742[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4672631377469707742[151] = 0;
   out_4672631377469707742[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4672631377469707742[153] = 0;
   out_4672631377469707742[154] = 1;
   out_4672631377469707742[155] = 0;
   out_4672631377469707742[156] = 0;
   out_4672631377469707742[157] = 0;
   out_4672631377469707742[158] = 0;
   out_4672631377469707742[159] = 0;
   out_4672631377469707742[160] = 0;
   out_4672631377469707742[161] = 0;
   out_4672631377469707742[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4672631377469707742[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4672631377469707742[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4672631377469707742[165] = 0;
   out_4672631377469707742[166] = 0;
   out_4672631377469707742[167] = 0;
   out_4672631377469707742[168] = 0;
   out_4672631377469707742[169] = 0;
   out_4672631377469707742[170] = 0;
   out_4672631377469707742[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4672631377469707742[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4672631377469707742[173] = 0;
   out_4672631377469707742[174] = 0;
   out_4672631377469707742[175] = 0;
   out_4672631377469707742[176] = 1;
   out_4672631377469707742[177] = 0;
   out_4672631377469707742[178] = 0;
   out_4672631377469707742[179] = 0;
   out_4672631377469707742[180] = 0;
   out_4672631377469707742[181] = 0;
   out_4672631377469707742[182] = 0;
   out_4672631377469707742[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4672631377469707742[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4672631377469707742[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4672631377469707742[186] = 0;
   out_4672631377469707742[187] = 0;
   out_4672631377469707742[188] = 0;
   out_4672631377469707742[189] = 0;
   out_4672631377469707742[190] = 0;
   out_4672631377469707742[191] = 0;
   out_4672631377469707742[192] = 0;
   out_4672631377469707742[193] = 0;
   out_4672631377469707742[194] = 0;
   out_4672631377469707742[195] = 0;
   out_4672631377469707742[196] = 0;
   out_4672631377469707742[197] = 0;
   out_4672631377469707742[198] = 1;
   out_4672631377469707742[199] = 0;
   out_4672631377469707742[200] = 0;
   out_4672631377469707742[201] = 0;
   out_4672631377469707742[202] = 0;
   out_4672631377469707742[203] = 0;
   out_4672631377469707742[204] = 0;
   out_4672631377469707742[205] = 0;
   out_4672631377469707742[206] = 0;
   out_4672631377469707742[207] = 0;
   out_4672631377469707742[208] = 0;
   out_4672631377469707742[209] = 0;
   out_4672631377469707742[210] = 0;
   out_4672631377469707742[211] = 0;
   out_4672631377469707742[212] = 0;
   out_4672631377469707742[213] = 0;
   out_4672631377469707742[214] = 0;
   out_4672631377469707742[215] = 0;
   out_4672631377469707742[216] = 0;
   out_4672631377469707742[217] = 0;
   out_4672631377469707742[218] = 0;
   out_4672631377469707742[219] = 0;
   out_4672631377469707742[220] = 1;
   out_4672631377469707742[221] = 0;
   out_4672631377469707742[222] = 0;
   out_4672631377469707742[223] = 0;
   out_4672631377469707742[224] = 0;
   out_4672631377469707742[225] = 0;
   out_4672631377469707742[226] = 0;
   out_4672631377469707742[227] = 0;
   out_4672631377469707742[228] = 0;
   out_4672631377469707742[229] = 0;
   out_4672631377469707742[230] = 0;
   out_4672631377469707742[231] = 0;
   out_4672631377469707742[232] = 0;
   out_4672631377469707742[233] = 0;
   out_4672631377469707742[234] = 0;
   out_4672631377469707742[235] = 0;
   out_4672631377469707742[236] = 0;
   out_4672631377469707742[237] = 0;
   out_4672631377469707742[238] = 0;
   out_4672631377469707742[239] = 0;
   out_4672631377469707742[240] = 0;
   out_4672631377469707742[241] = 0;
   out_4672631377469707742[242] = 1;
   out_4672631377469707742[243] = 0;
   out_4672631377469707742[244] = 0;
   out_4672631377469707742[245] = 0;
   out_4672631377469707742[246] = 0;
   out_4672631377469707742[247] = 0;
   out_4672631377469707742[248] = 0;
   out_4672631377469707742[249] = 0;
   out_4672631377469707742[250] = 0;
   out_4672631377469707742[251] = 0;
   out_4672631377469707742[252] = 0;
   out_4672631377469707742[253] = 0;
   out_4672631377469707742[254] = 0;
   out_4672631377469707742[255] = 0;
   out_4672631377469707742[256] = 0;
   out_4672631377469707742[257] = 0;
   out_4672631377469707742[258] = 0;
   out_4672631377469707742[259] = 0;
   out_4672631377469707742[260] = 0;
   out_4672631377469707742[261] = 0;
   out_4672631377469707742[262] = 0;
   out_4672631377469707742[263] = 0;
   out_4672631377469707742[264] = 1;
   out_4672631377469707742[265] = 0;
   out_4672631377469707742[266] = 0;
   out_4672631377469707742[267] = 0;
   out_4672631377469707742[268] = 0;
   out_4672631377469707742[269] = 0;
   out_4672631377469707742[270] = 0;
   out_4672631377469707742[271] = 0;
   out_4672631377469707742[272] = 0;
   out_4672631377469707742[273] = 0;
   out_4672631377469707742[274] = 0;
   out_4672631377469707742[275] = 0;
   out_4672631377469707742[276] = 0;
   out_4672631377469707742[277] = 0;
   out_4672631377469707742[278] = 0;
   out_4672631377469707742[279] = 0;
   out_4672631377469707742[280] = 0;
   out_4672631377469707742[281] = 0;
   out_4672631377469707742[282] = 0;
   out_4672631377469707742[283] = 0;
   out_4672631377469707742[284] = 0;
   out_4672631377469707742[285] = 0;
   out_4672631377469707742[286] = 1;
   out_4672631377469707742[287] = 0;
   out_4672631377469707742[288] = 0;
   out_4672631377469707742[289] = 0;
   out_4672631377469707742[290] = 0;
   out_4672631377469707742[291] = 0;
   out_4672631377469707742[292] = 0;
   out_4672631377469707742[293] = 0;
   out_4672631377469707742[294] = 0;
   out_4672631377469707742[295] = 0;
   out_4672631377469707742[296] = 0;
   out_4672631377469707742[297] = 0;
   out_4672631377469707742[298] = 0;
   out_4672631377469707742[299] = 0;
   out_4672631377469707742[300] = 0;
   out_4672631377469707742[301] = 0;
   out_4672631377469707742[302] = 0;
   out_4672631377469707742[303] = 0;
   out_4672631377469707742[304] = 0;
   out_4672631377469707742[305] = 0;
   out_4672631377469707742[306] = 0;
   out_4672631377469707742[307] = 0;
   out_4672631377469707742[308] = 1;
   out_4672631377469707742[309] = 0;
   out_4672631377469707742[310] = 0;
   out_4672631377469707742[311] = 0;
   out_4672631377469707742[312] = 0;
   out_4672631377469707742[313] = 0;
   out_4672631377469707742[314] = 0;
   out_4672631377469707742[315] = 0;
   out_4672631377469707742[316] = 0;
   out_4672631377469707742[317] = 0;
   out_4672631377469707742[318] = 0;
   out_4672631377469707742[319] = 0;
   out_4672631377469707742[320] = 0;
   out_4672631377469707742[321] = 0;
   out_4672631377469707742[322] = 0;
   out_4672631377469707742[323] = 0;
   out_4672631377469707742[324] = 0;
   out_4672631377469707742[325] = 0;
   out_4672631377469707742[326] = 0;
   out_4672631377469707742[327] = 0;
   out_4672631377469707742[328] = 0;
   out_4672631377469707742[329] = 0;
   out_4672631377469707742[330] = 1;
   out_4672631377469707742[331] = 0;
   out_4672631377469707742[332] = 0;
   out_4672631377469707742[333] = 0;
   out_4672631377469707742[334] = 0;
   out_4672631377469707742[335] = 0;
   out_4672631377469707742[336] = 0;
   out_4672631377469707742[337] = 0;
   out_4672631377469707742[338] = 0;
   out_4672631377469707742[339] = 0;
   out_4672631377469707742[340] = 0;
   out_4672631377469707742[341] = 0;
   out_4672631377469707742[342] = 0;
   out_4672631377469707742[343] = 0;
   out_4672631377469707742[344] = 0;
   out_4672631377469707742[345] = 0;
   out_4672631377469707742[346] = 0;
   out_4672631377469707742[347] = 0;
   out_4672631377469707742[348] = 0;
   out_4672631377469707742[349] = 0;
   out_4672631377469707742[350] = 0;
   out_4672631377469707742[351] = 0;
   out_4672631377469707742[352] = 1;
   out_4672631377469707742[353] = 0;
   out_4672631377469707742[354] = 0;
   out_4672631377469707742[355] = 0;
   out_4672631377469707742[356] = 0;
   out_4672631377469707742[357] = 0;
   out_4672631377469707742[358] = 0;
   out_4672631377469707742[359] = 0;
   out_4672631377469707742[360] = 0;
   out_4672631377469707742[361] = 0;
   out_4672631377469707742[362] = 0;
   out_4672631377469707742[363] = 0;
   out_4672631377469707742[364] = 0;
   out_4672631377469707742[365] = 0;
   out_4672631377469707742[366] = 0;
   out_4672631377469707742[367] = 0;
   out_4672631377469707742[368] = 0;
   out_4672631377469707742[369] = 0;
   out_4672631377469707742[370] = 0;
   out_4672631377469707742[371] = 0;
   out_4672631377469707742[372] = 0;
   out_4672631377469707742[373] = 0;
   out_4672631377469707742[374] = 1;
   out_4672631377469707742[375] = 0;
   out_4672631377469707742[376] = 0;
   out_4672631377469707742[377] = 0;
   out_4672631377469707742[378] = 0;
   out_4672631377469707742[379] = 0;
   out_4672631377469707742[380] = 0;
   out_4672631377469707742[381] = 0;
   out_4672631377469707742[382] = 0;
   out_4672631377469707742[383] = 0;
   out_4672631377469707742[384] = 0;
   out_4672631377469707742[385] = 0;
   out_4672631377469707742[386] = 0;
   out_4672631377469707742[387] = 0;
   out_4672631377469707742[388] = 0;
   out_4672631377469707742[389] = 0;
   out_4672631377469707742[390] = 0;
   out_4672631377469707742[391] = 0;
   out_4672631377469707742[392] = 0;
   out_4672631377469707742[393] = 0;
   out_4672631377469707742[394] = 0;
   out_4672631377469707742[395] = 0;
   out_4672631377469707742[396] = 1;
   out_4672631377469707742[397] = 0;
   out_4672631377469707742[398] = 0;
   out_4672631377469707742[399] = 0;
   out_4672631377469707742[400] = 0;
   out_4672631377469707742[401] = 0;
   out_4672631377469707742[402] = 0;
   out_4672631377469707742[403] = 0;
   out_4672631377469707742[404] = 0;
   out_4672631377469707742[405] = 0;
   out_4672631377469707742[406] = 0;
   out_4672631377469707742[407] = 0;
   out_4672631377469707742[408] = 0;
   out_4672631377469707742[409] = 0;
   out_4672631377469707742[410] = 0;
   out_4672631377469707742[411] = 0;
   out_4672631377469707742[412] = 0;
   out_4672631377469707742[413] = 0;
   out_4672631377469707742[414] = 0;
   out_4672631377469707742[415] = 0;
   out_4672631377469707742[416] = 0;
   out_4672631377469707742[417] = 0;
   out_4672631377469707742[418] = 1;
   out_4672631377469707742[419] = 0;
   out_4672631377469707742[420] = 0;
   out_4672631377469707742[421] = 0;
   out_4672631377469707742[422] = 0;
   out_4672631377469707742[423] = 0;
   out_4672631377469707742[424] = 0;
   out_4672631377469707742[425] = 0;
   out_4672631377469707742[426] = 0;
   out_4672631377469707742[427] = 0;
   out_4672631377469707742[428] = 0;
   out_4672631377469707742[429] = 0;
   out_4672631377469707742[430] = 0;
   out_4672631377469707742[431] = 0;
   out_4672631377469707742[432] = 0;
   out_4672631377469707742[433] = 0;
   out_4672631377469707742[434] = 0;
   out_4672631377469707742[435] = 0;
   out_4672631377469707742[436] = 0;
   out_4672631377469707742[437] = 0;
   out_4672631377469707742[438] = 0;
   out_4672631377469707742[439] = 0;
   out_4672631377469707742[440] = 1;
}
void h_4(double *state, double *unused, double *out_3957759162106459955) {
   out_3957759162106459955[0] = state[10] + state[13];
   out_3957759162106459955[1] = state[11] + state[14];
   out_3957759162106459955[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8744211529056501276) {
   out_8744211529056501276[0] = 0;
   out_8744211529056501276[1] = 0;
   out_8744211529056501276[2] = 0;
   out_8744211529056501276[3] = 0;
   out_8744211529056501276[4] = 0;
   out_8744211529056501276[5] = 0;
   out_8744211529056501276[6] = 0;
   out_8744211529056501276[7] = 0;
   out_8744211529056501276[8] = 0;
   out_8744211529056501276[9] = 0;
   out_8744211529056501276[10] = 1;
   out_8744211529056501276[11] = 0;
   out_8744211529056501276[12] = 0;
   out_8744211529056501276[13] = 1;
   out_8744211529056501276[14] = 0;
   out_8744211529056501276[15] = 0;
   out_8744211529056501276[16] = 0;
   out_8744211529056501276[17] = 0;
   out_8744211529056501276[18] = 0;
   out_8744211529056501276[19] = 0;
   out_8744211529056501276[20] = 0;
   out_8744211529056501276[21] = 0;
   out_8744211529056501276[22] = 0;
   out_8744211529056501276[23] = 0;
   out_8744211529056501276[24] = 0;
   out_8744211529056501276[25] = 0;
   out_8744211529056501276[26] = 0;
   out_8744211529056501276[27] = 0;
   out_8744211529056501276[28] = 0;
   out_8744211529056501276[29] = 0;
   out_8744211529056501276[30] = 0;
   out_8744211529056501276[31] = 0;
   out_8744211529056501276[32] = 0;
   out_8744211529056501276[33] = 1;
   out_8744211529056501276[34] = 0;
   out_8744211529056501276[35] = 0;
   out_8744211529056501276[36] = 1;
   out_8744211529056501276[37] = 0;
   out_8744211529056501276[38] = 0;
   out_8744211529056501276[39] = 0;
   out_8744211529056501276[40] = 0;
   out_8744211529056501276[41] = 0;
   out_8744211529056501276[42] = 0;
   out_8744211529056501276[43] = 0;
   out_8744211529056501276[44] = 0;
   out_8744211529056501276[45] = 0;
   out_8744211529056501276[46] = 0;
   out_8744211529056501276[47] = 0;
   out_8744211529056501276[48] = 0;
   out_8744211529056501276[49] = 0;
   out_8744211529056501276[50] = 0;
   out_8744211529056501276[51] = 0;
   out_8744211529056501276[52] = 0;
   out_8744211529056501276[53] = 0;
   out_8744211529056501276[54] = 0;
   out_8744211529056501276[55] = 0;
   out_8744211529056501276[56] = 1;
   out_8744211529056501276[57] = 0;
   out_8744211529056501276[58] = 0;
   out_8744211529056501276[59] = 1;
   out_8744211529056501276[60] = 0;
   out_8744211529056501276[61] = 0;
   out_8744211529056501276[62] = 0;
   out_8744211529056501276[63] = 0;
   out_8744211529056501276[64] = 0;
   out_8744211529056501276[65] = 0;
}
void h_9(double *state, double *unused, double *out_6576856407365962507) {
   out_6576856407365962507[0] = state[10];
   out_6576856407365962507[1] = state[11];
   out_6576856407365962507[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2415313609388602870) {
   out_2415313609388602870[0] = 0;
   out_2415313609388602870[1] = 0;
   out_2415313609388602870[2] = 0;
   out_2415313609388602870[3] = 0;
   out_2415313609388602870[4] = 0;
   out_2415313609388602870[5] = 0;
   out_2415313609388602870[6] = 0;
   out_2415313609388602870[7] = 0;
   out_2415313609388602870[8] = 0;
   out_2415313609388602870[9] = 0;
   out_2415313609388602870[10] = 1;
   out_2415313609388602870[11] = 0;
   out_2415313609388602870[12] = 0;
   out_2415313609388602870[13] = 0;
   out_2415313609388602870[14] = 0;
   out_2415313609388602870[15] = 0;
   out_2415313609388602870[16] = 0;
   out_2415313609388602870[17] = 0;
   out_2415313609388602870[18] = 0;
   out_2415313609388602870[19] = 0;
   out_2415313609388602870[20] = 0;
   out_2415313609388602870[21] = 0;
   out_2415313609388602870[22] = 0;
   out_2415313609388602870[23] = 0;
   out_2415313609388602870[24] = 0;
   out_2415313609388602870[25] = 0;
   out_2415313609388602870[26] = 0;
   out_2415313609388602870[27] = 0;
   out_2415313609388602870[28] = 0;
   out_2415313609388602870[29] = 0;
   out_2415313609388602870[30] = 0;
   out_2415313609388602870[31] = 0;
   out_2415313609388602870[32] = 0;
   out_2415313609388602870[33] = 1;
   out_2415313609388602870[34] = 0;
   out_2415313609388602870[35] = 0;
   out_2415313609388602870[36] = 0;
   out_2415313609388602870[37] = 0;
   out_2415313609388602870[38] = 0;
   out_2415313609388602870[39] = 0;
   out_2415313609388602870[40] = 0;
   out_2415313609388602870[41] = 0;
   out_2415313609388602870[42] = 0;
   out_2415313609388602870[43] = 0;
   out_2415313609388602870[44] = 0;
   out_2415313609388602870[45] = 0;
   out_2415313609388602870[46] = 0;
   out_2415313609388602870[47] = 0;
   out_2415313609388602870[48] = 0;
   out_2415313609388602870[49] = 0;
   out_2415313609388602870[50] = 0;
   out_2415313609388602870[51] = 0;
   out_2415313609388602870[52] = 0;
   out_2415313609388602870[53] = 0;
   out_2415313609388602870[54] = 0;
   out_2415313609388602870[55] = 0;
   out_2415313609388602870[56] = 1;
   out_2415313609388602870[57] = 0;
   out_2415313609388602870[58] = 0;
   out_2415313609388602870[59] = 0;
   out_2415313609388602870[60] = 0;
   out_2415313609388602870[61] = 0;
   out_2415313609388602870[62] = 0;
   out_2415313609388602870[63] = 0;
   out_2415313609388602870[64] = 0;
   out_2415313609388602870[65] = 0;
}
void h_10(double *state, double *unused, double *out_4747328977182000186) {
   out_4747328977182000186[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4747328977182000186[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4747328977182000186[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6344708103702225709) {
   out_6344708103702225709[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6344708103702225709[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6344708103702225709[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6344708103702225709[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6344708103702225709[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6344708103702225709[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6344708103702225709[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6344708103702225709[7] = 0;
   out_6344708103702225709[8] = 0;
   out_6344708103702225709[9] = 0;
   out_6344708103702225709[10] = 0;
   out_6344708103702225709[11] = 0;
   out_6344708103702225709[12] = 0;
   out_6344708103702225709[13] = 0;
   out_6344708103702225709[14] = 0;
   out_6344708103702225709[15] = 0;
   out_6344708103702225709[16] = 1;
   out_6344708103702225709[17] = 0;
   out_6344708103702225709[18] = 0;
   out_6344708103702225709[19] = 1;
   out_6344708103702225709[20] = 0;
   out_6344708103702225709[21] = 0;
   out_6344708103702225709[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6344708103702225709[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6344708103702225709[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6344708103702225709[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6344708103702225709[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6344708103702225709[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6344708103702225709[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6344708103702225709[29] = 0;
   out_6344708103702225709[30] = 0;
   out_6344708103702225709[31] = 0;
   out_6344708103702225709[32] = 0;
   out_6344708103702225709[33] = 0;
   out_6344708103702225709[34] = 0;
   out_6344708103702225709[35] = 0;
   out_6344708103702225709[36] = 0;
   out_6344708103702225709[37] = 0;
   out_6344708103702225709[38] = 0;
   out_6344708103702225709[39] = 1;
   out_6344708103702225709[40] = 0;
   out_6344708103702225709[41] = 0;
   out_6344708103702225709[42] = 1;
   out_6344708103702225709[43] = 0;
   out_6344708103702225709[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6344708103702225709[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6344708103702225709[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6344708103702225709[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6344708103702225709[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6344708103702225709[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6344708103702225709[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6344708103702225709[51] = 0;
   out_6344708103702225709[52] = 0;
   out_6344708103702225709[53] = 0;
   out_6344708103702225709[54] = 0;
   out_6344708103702225709[55] = 0;
   out_6344708103702225709[56] = 0;
   out_6344708103702225709[57] = 0;
   out_6344708103702225709[58] = 0;
   out_6344708103702225709[59] = 0;
   out_6344708103702225709[60] = 0;
   out_6344708103702225709[61] = 0;
   out_6344708103702225709[62] = 1;
   out_6344708103702225709[63] = 0;
   out_6344708103702225709[64] = 0;
   out_6344708103702225709[65] = 1;
}
void h_12(double *state, double *unused, double *out_2351388817550320165) {
   out_2351388817550320165[0] = state[0];
   out_2351388817550320165[1] = state[1];
   out_2351388817550320165[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9081433519605456673) {
   out_9081433519605456673[0] = 1;
   out_9081433519605456673[1] = 0;
   out_9081433519605456673[2] = 0;
   out_9081433519605456673[3] = 0;
   out_9081433519605456673[4] = 0;
   out_9081433519605456673[5] = 0;
   out_9081433519605456673[6] = 0;
   out_9081433519605456673[7] = 0;
   out_9081433519605456673[8] = 0;
   out_9081433519605456673[9] = 0;
   out_9081433519605456673[10] = 0;
   out_9081433519605456673[11] = 0;
   out_9081433519605456673[12] = 0;
   out_9081433519605456673[13] = 0;
   out_9081433519605456673[14] = 0;
   out_9081433519605456673[15] = 0;
   out_9081433519605456673[16] = 0;
   out_9081433519605456673[17] = 0;
   out_9081433519605456673[18] = 0;
   out_9081433519605456673[19] = 0;
   out_9081433519605456673[20] = 0;
   out_9081433519605456673[21] = 0;
   out_9081433519605456673[22] = 0;
   out_9081433519605456673[23] = 1;
   out_9081433519605456673[24] = 0;
   out_9081433519605456673[25] = 0;
   out_9081433519605456673[26] = 0;
   out_9081433519605456673[27] = 0;
   out_9081433519605456673[28] = 0;
   out_9081433519605456673[29] = 0;
   out_9081433519605456673[30] = 0;
   out_9081433519605456673[31] = 0;
   out_9081433519605456673[32] = 0;
   out_9081433519605456673[33] = 0;
   out_9081433519605456673[34] = 0;
   out_9081433519605456673[35] = 0;
   out_9081433519605456673[36] = 0;
   out_9081433519605456673[37] = 0;
   out_9081433519605456673[38] = 0;
   out_9081433519605456673[39] = 0;
   out_9081433519605456673[40] = 0;
   out_9081433519605456673[41] = 0;
   out_9081433519605456673[42] = 0;
   out_9081433519605456673[43] = 0;
   out_9081433519605456673[44] = 0;
   out_9081433519605456673[45] = 0;
   out_9081433519605456673[46] = 1;
   out_9081433519605456673[47] = 0;
   out_9081433519605456673[48] = 0;
   out_9081433519605456673[49] = 0;
   out_9081433519605456673[50] = 0;
   out_9081433519605456673[51] = 0;
   out_9081433519605456673[52] = 0;
   out_9081433519605456673[53] = 0;
   out_9081433519605456673[54] = 0;
   out_9081433519605456673[55] = 0;
   out_9081433519605456673[56] = 0;
   out_9081433519605456673[57] = 0;
   out_9081433519605456673[58] = 0;
   out_9081433519605456673[59] = 0;
   out_9081433519605456673[60] = 0;
   out_9081433519605456673[61] = 0;
   out_9081433519605456673[62] = 0;
   out_9081433519605456673[63] = 0;
   out_9081433519605456673[64] = 0;
   out_9081433519605456673[65] = 0;
}
void h_35(double *state, double *unused, double *out_4544883733830743788) {
   out_4544883733830743788[0] = state[7];
   out_4544883733830743788[1] = state[8];
   out_4544883733830743788[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6335870487280442964) {
   out_6335870487280442964[0] = 0;
   out_6335870487280442964[1] = 0;
   out_6335870487280442964[2] = 0;
   out_6335870487280442964[3] = 0;
   out_6335870487280442964[4] = 0;
   out_6335870487280442964[5] = 0;
   out_6335870487280442964[6] = 0;
   out_6335870487280442964[7] = 1;
   out_6335870487280442964[8] = 0;
   out_6335870487280442964[9] = 0;
   out_6335870487280442964[10] = 0;
   out_6335870487280442964[11] = 0;
   out_6335870487280442964[12] = 0;
   out_6335870487280442964[13] = 0;
   out_6335870487280442964[14] = 0;
   out_6335870487280442964[15] = 0;
   out_6335870487280442964[16] = 0;
   out_6335870487280442964[17] = 0;
   out_6335870487280442964[18] = 0;
   out_6335870487280442964[19] = 0;
   out_6335870487280442964[20] = 0;
   out_6335870487280442964[21] = 0;
   out_6335870487280442964[22] = 0;
   out_6335870487280442964[23] = 0;
   out_6335870487280442964[24] = 0;
   out_6335870487280442964[25] = 0;
   out_6335870487280442964[26] = 0;
   out_6335870487280442964[27] = 0;
   out_6335870487280442964[28] = 0;
   out_6335870487280442964[29] = 0;
   out_6335870487280442964[30] = 1;
   out_6335870487280442964[31] = 0;
   out_6335870487280442964[32] = 0;
   out_6335870487280442964[33] = 0;
   out_6335870487280442964[34] = 0;
   out_6335870487280442964[35] = 0;
   out_6335870487280442964[36] = 0;
   out_6335870487280442964[37] = 0;
   out_6335870487280442964[38] = 0;
   out_6335870487280442964[39] = 0;
   out_6335870487280442964[40] = 0;
   out_6335870487280442964[41] = 0;
   out_6335870487280442964[42] = 0;
   out_6335870487280442964[43] = 0;
   out_6335870487280442964[44] = 0;
   out_6335870487280442964[45] = 0;
   out_6335870487280442964[46] = 0;
   out_6335870487280442964[47] = 0;
   out_6335870487280442964[48] = 0;
   out_6335870487280442964[49] = 0;
   out_6335870487280442964[50] = 0;
   out_6335870487280442964[51] = 0;
   out_6335870487280442964[52] = 0;
   out_6335870487280442964[53] = 1;
   out_6335870487280442964[54] = 0;
   out_6335870487280442964[55] = 0;
   out_6335870487280442964[56] = 0;
   out_6335870487280442964[57] = 0;
   out_6335870487280442964[58] = 0;
   out_6335870487280442964[59] = 0;
   out_6335870487280442964[60] = 0;
   out_6335870487280442964[61] = 0;
   out_6335870487280442964[62] = 0;
   out_6335870487280442964[63] = 0;
   out_6335870487280442964[64] = 0;
   out_6335870487280442964[65] = 0;
}
void h_32(double *state, double *unused, double *out_6942880184821978167) {
   out_6942880184821978167[0] = state[3];
   out_6942880184821978167[1] = state[4];
   out_6942880184821978167[2] = state[5];
   out_6942880184821978167[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9222351910128897460) {
   out_9222351910128897460[0] = 0;
   out_9222351910128897460[1] = 0;
   out_9222351910128897460[2] = 0;
   out_9222351910128897460[3] = 1;
   out_9222351910128897460[4] = 0;
   out_9222351910128897460[5] = 0;
   out_9222351910128897460[6] = 0;
   out_9222351910128897460[7] = 0;
   out_9222351910128897460[8] = 0;
   out_9222351910128897460[9] = 0;
   out_9222351910128897460[10] = 0;
   out_9222351910128897460[11] = 0;
   out_9222351910128897460[12] = 0;
   out_9222351910128897460[13] = 0;
   out_9222351910128897460[14] = 0;
   out_9222351910128897460[15] = 0;
   out_9222351910128897460[16] = 0;
   out_9222351910128897460[17] = 0;
   out_9222351910128897460[18] = 0;
   out_9222351910128897460[19] = 0;
   out_9222351910128897460[20] = 0;
   out_9222351910128897460[21] = 0;
   out_9222351910128897460[22] = 0;
   out_9222351910128897460[23] = 0;
   out_9222351910128897460[24] = 0;
   out_9222351910128897460[25] = 0;
   out_9222351910128897460[26] = 1;
   out_9222351910128897460[27] = 0;
   out_9222351910128897460[28] = 0;
   out_9222351910128897460[29] = 0;
   out_9222351910128897460[30] = 0;
   out_9222351910128897460[31] = 0;
   out_9222351910128897460[32] = 0;
   out_9222351910128897460[33] = 0;
   out_9222351910128897460[34] = 0;
   out_9222351910128897460[35] = 0;
   out_9222351910128897460[36] = 0;
   out_9222351910128897460[37] = 0;
   out_9222351910128897460[38] = 0;
   out_9222351910128897460[39] = 0;
   out_9222351910128897460[40] = 0;
   out_9222351910128897460[41] = 0;
   out_9222351910128897460[42] = 0;
   out_9222351910128897460[43] = 0;
   out_9222351910128897460[44] = 0;
   out_9222351910128897460[45] = 0;
   out_9222351910128897460[46] = 0;
   out_9222351910128897460[47] = 0;
   out_9222351910128897460[48] = 0;
   out_9222351910128897460[49] = 1;
   out_9222351910128897460[50] = 0;
   out_9222351910128897460[51] = 0;
   out_9222351910128897460[52] = 0;
   out_9222351910128897460[53] = 0;
   out_9222351910128897460[54] = 0;
   out_9222351910128897460[55] = 0;
   out_9222351910128897460[56] = 0;
   out_9222351910128897460[57] = 0;
   out_9222351910128897460[58] = 0;
   out_9222351910128897460[59] = 0;
   out_9222351910128897460[60] = 0;
   out_9222351910128897460[61] = 0;
   out_9222351910128897460[62] = 0;
   out_9222351910128897460[63] = 0;
   out_9222351910128897460[64] = 0;
   out_9222351910128897460[65] = 0;
   out_9222351910128897460[66] = 0;
   out_9222351910128897460[67] = 0;
   out_9222351910128897460[68] = 0;
   out_9222351910128897460[69] = 0;
   out_9222351910128897460[70] = 0;
   out_9222351910128897460[71] = 0;
   out_9222351910128897460[72] = 1;
   out_9222351910128897460[73] = 0;
   out_9222351910128897460[74] = 0;
   out_9222351910128897460[75] = 0;
   out_9222351910128897460[76] = 0;
   out_9222351910128897460[77] = 0;
   out_9222351910128897460[78] = 0;
   out_9222351910128897460[79] = 0;
   out_9222351910128897460[80] = 0;
   out_9222351910128897460[81] = 0;
   out_9222351910128897460[82] = 0;
   out_9222351910128897460[83] = 0;
   out_9222351910128897460[84] = 0;
   out_9222351910128897460[85] = 0;
   out_9222351910128897460[86] = 0;
   out_9222351910128897460[87] = 0;
}
void h_13(double *state, double *unused, double *out_7655900047573857255) {
   out_7655900047573857255[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7655900047573857255[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7655900047573857255[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7863485562721535985) {
   out_7863485562721535985[0] = 0;
   out_7863485562721535985[1] = 0;
   out_7863485562721535985[2] = 0;
   out_7863485562721535985[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7863485562721535985[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7863485562721535985[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7863485562721535985[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7863485562721535985[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7863485562721535985[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7863485562721535985[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7863485562721535985[10] = 0;
   out_7863485562721535985[11] = 0;
   out_7863485562721535985[12] = 0;
   out_7863485562721535985[13] = 0;
   out_7863485562721535985[14] = 0;
   out_7863485562721535985[15] = 0;
   out_7863485562721535985[16] = 0;
   out_7863485562721535985[17] = 0;
   out_7863485562721535985[18] = 0;
   out_7863485562721535985[19] = 0;
   out_7863485562721535985[20] = 0;
   out_7863485562721535985[21] = 0;
   out_7863485562721535985[22] = 0;
   out_7863485562721535985[23] = 0;
   out_7863485562721535985[24] = 0;
   out_7863485562721535985[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7863485562721535985[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7863485562721535985[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7863485562721535985[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7863485562721535985[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7863485562721535985[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7863485562721535985[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7863485562721535985[32] = 0;
   out_7863485562721535985[33] = 0;
   out_7863485562721535985[34] = 0;
   out_7863485562721535985[35] = 0;
   out_7863485562721535985[36] = 0;
   out_7863485562721535985[37] = 0;
   out_7863485562721535985[38] = 0;
   out_7863485562721535985[39] = 0;
   out_7863485562721535985[40] = 0;
   out_7863485562721535985[41] = 0;
   out_7863485562721535985[42] = 0;
   out_7863485562721535985[43] = 0;
   out_7863485562721535985[44] = 0;
   out_7863485562721535985[45] = 0;
   out_7863485562721535985[46] = 0;
   out_7863485562721535985[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7863485562721535985[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7863485562721535985[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7863485562721535985[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7863485562721535985[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7863485562721535985[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7863485562721535985[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7863485562721535985[54] = 0;
   out_7863485562721535985[55] = 0;
   out_7863485562721535985[56] = 0;
   out_7863485562721535985[57] = 0;
   out_7863485562721535985[58] = 0;
   out_7863485562721535985[59] = 0;
   out_7863485562721535985[60] = 0;
   out_7863485562721535985[61] = 0;
   out_7863485562721535985[62] = 0;
   out_7863485562721535985[63] = 0;
   out_7863485562721535985[64] = 0;
   out_7863485562721535985[65] = 0;
}
void h_14(double *state, double *unused, double *out_6576856407365962507) {
   out_6576856407365962507[0] = state[10];
   out_6576856407365962507[1] = state[11];
   out_6576856407365962507[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2415313609388602870) {
   out_2415313609388602870[0] = 0;
   out_2415313609388602870[1] = 0;
   out_2415313609388602870[2] = 0;
   out_2415313609388602870[3] = 0;
   out_2415313609388602870[4] = 0;
   out_2415313609388602870[5] = 0;
   out_2415313609388602870[6] = 0;
   out_2415313609388602870[7] = 0;
   out_2415313609388602870[8] = 0;
   out_2415313609388602870[9] = 0;
   out_2415313609388602870[10] = 1;
   out_2415313609388602870[11] = 0;
   out_2415313609388602870[12] = 0;
   out_2415313609388602870[13] = 0;
   out_2415313609388602870[14] = 0;
   out_2415313609388602870[15] = 0;
   out_2415313609388602870[16] = 0;
   out_2415313609388602870[17] = 0;
   out_2415313609388602870[18] = 0;
   out_2415313609388602870[19] = 0;
   out_2415313609388602870[20] = 0;
   out_2415313609388602870[21] = 0;
   out_2415313609388602870[22] = 0;
   out_2415313609388602870[23] = 0;
   out_2415313609388602870[24] = 0;
   out_2415313609388602870[25] = 0;
   out_2415313609388602870[26] = 0;
   out_2415313609388602870[27] = 0;
   out_2415313609388602870[28] = 0;
   out_2415313609388602870[29] = 0;
   out_2415313609388602870[30] = 0;
   out_2415313609388602870[31] = 0;
   out_2415313609388602870[32] = 0;
   out_2415313609388602870[33] = 1;
   out_2415313609388602870[34] = 0;
   out_2415313609388602870[35] = 0;
   out_2415313609388602870[36] = 0;
   out_2415313609388602870[37] = 0;
   out_2415313609388602870[38] = 0;
   out_2415313609388602870[39] = 0;
   out_2415313609388602870[40] = 0;
   out_2415313609388602870[41] = 0;
   out_2415313609388602870[42] = 0;
   out_2415313609388602870[43] = 0;
   out_2415313609388602870[44] = 0;
   out_2415313609388602870[45] = 0;
   out_2415313609388602870[46] = 0;
   out_2415313609388602870[47] = 0;
   out_2415313609388602870[48] = 0;
   out_2415313609388602870[49] = 0;
   out_2415313609388602870[50] = 0;
   out_2415313609388602870[51] = 0;
   out_2415313609388602870[52] = 0;
   out_2415313609388602870[53] = 0;
   out_2415313609388602870[54] = 0;
   out_2415313609388602870[55] = 0;
   out_2415313609388602870[56] = 1;
   out_2415313609388602870[57] = 0;
   out_2415313609388602870[58] = 0;
   out_2415313609388602870[59] = 0;
   out_2415313609388602870[60] = 0;
   out_2415313609388602870[61] = 0;
   out_2415313609388602870[62] = 0;
   out_2415313609388602870[63] = 0;
   out_2415313609388602870[64] = 0;
   out_2415313609388602870[65] = 0;
}
void h_33(double *state, double *unused, double *out_8024822863313080523) {
   out_8024822863313080523[0] = state[16];
   out_8024822863313080523[1] = state[17];
   out_8024822863313080523[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3185313482641585360) {
   out_3185313482641585360[0] = 0;
   out_3185313482641585360[1] = 0;
   out_3185313482641585360[2] = 0;
   out_3185313482641585360[3] = 0;
   out_3185313482641585360[4] = 0;
   out_3185313482641585360[5] = 0;
   out_3185313482641585360[6] = 0;
   out_3185313482641585360[7] = 0;
   out_3185313482641585360[8] = 0;
   out_3185313482641585360[9] = 0;
   out_3185313482641585360[10] = 0;
   out_3185313482641585360[11] = 0;
   out_3185313482641585360[12] = 0;
   out_3185313482641585360[13] = 0;
   out_3185313482641585360[14] = 0;
   out_3185313482641585360[15] = 0;
   out_3185313482641585360[16] = 1;
   out_3185313482641585360[17] = 0;
   out_3185313482641585360[18] = 0;
   out_3185313482641585360[19] = 0;
   out_3185313482641585360[20] = 0;
   out_3185313482641585360[21] = 0;
   out_3185313482641585360[22] = 0;
   out_3185313482641585360[23] = 0;
   out_3185313482641585360[24] = 0;
   out_3185313482641585360[25] = 0;
   out_3185313482641585360[26] = 0;
   out_3185313482641585360[27] = 0;
   out_3185313482641585360[28] = 0;
   out_3185313482641585360[29] = 0;
   out_3185313482641585360[30] = 0;
   out_3185313482641585360[31] = 0;
   out_3185313482641585360[32] = 0;
   out_3185313482641585360[33] = 0;
   out_3185313482641585360[34] = 0;
   out_3185313482641585360[35] = 0;
   out_3185313482641585360[36] = 0;
   out_3185313482641585360[37] = 0;
   out_3185313482641585360[38] = 0;
   out_3185313482641585360[39] = 1;
   out_3185313482641585360[40] = 0;
   out_3185313482641585360[41] = 0;
   out_3185313482641585360[42] = 0;
   out_3185313482641585360[43] = 0;
   out_3185313482641585360[44] = 0;
   out_3185313482641585360[45] = 0;
   out_3185313482641585360[46] = 0;
   out_3185313482641585360[47] = 0;
   out_3185313482641585360[48] = 0;
   out_3185313482641585360[49] = 0;
   out_3185313482641585360[50] = 0;
   out_3185313482641585360[51] = 0;
   out_3185313482641585360[52] = 0;
   out_3185313482641585360[53] = 0;
   out_3185313482641585360[54] = 0;
   out_3185313482641585360[55] = 0;
   out_3185313482641585360[56] = 0;
   out_3185313482641585360[57] = 0;
   out_3185313482641585360[58] = 0;
   out_3185313482641585360[59] = 0;
   out_3185313482641585360[60] = 0;
   out_3185313482641585360[61] = 0;
   out_3185313482641585360[62] = 1;
   out_3185313482641585360[63] = 0;
   out_3185313482641585360[64] = 0;
   out_3185313482641585360[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7941023759042693369) {
  H(in_vec, out_7941023759042693369);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1859974344818569590) {
  err_fun(nom_x, delta_x, out_1859974344818569590);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9004749950139765637) {
  inv_err_fun(nom_x, true_x, out_9004749950139765637);
}
void live_H_mod_fun(double *state, double *out_2720961815570706232) {
  H_mod_fun(state, out_2720961815570706232);
}
void live_f_fun(double *state, double dt, double *out_3053570887846599330) {
  f_fun(state,  dt, out_3053570887846599330);
}
void live_F_fun(double *state, double dt, double *out_4672631377469707742) {
  F_fun(state,  dt, out_4672631377469707742);
}
void live_h_4(double *state, double *unused, double *out_3957759162106459955) {
  h_4(state, unused, out_3957759162106459955);
}
void live_H_4(double *state, double *unused, double *out_8744211529056501276) {
  H_4(state, unused, out_8744211529056501276);
}
void live_h_9(double *state, double *unused, double *out_6576856407365962507) {
  h_9(state, unused, out_6576856407365962507);
}
void live_H_9(double *state, double *unused, double *out_2415313609388602870) {
  H_9(state, unused, out_2415313609388602870);
}
void live_h_10(double *state, double *unused, double *out_4747328977182000186) {
  h_10(state, unused, out_4747328977182000186);
}
void live_H_10(double *state, double *unused, double *out_6344708103702225709) {
  H_10(state, unused, out_6344708103702225709);
}
void live_h_12(double *state, double *unused, double *out_2351388817550320165) {
  h_12(state, unused, out_2351388817550320165);
}
void live_H_12(double *state, double *unused, double *out_9081433519605456673) {
  H_12(state, unused, out_9081433519605456673);
}
void live_h_35(double *state, double *unused, double *out_4544883733830743788) {
  h_35(state, unused, out_4544883733830743788);
}
void live_H_35(double *state, double *unused, double *out_6335870487280442964) {
  H_35(state, unused, out_6335870487280442964);
}
void live_h_32(double *state, double *unused, double *out_6942880184821978167) {
  h_32(state, unused, out_6942880184821978167);
}
void live_H_32(double *state, double *unused, double *out_9222351910128897460) {
  H_32(state, unused, out_9222351910128897460);
}
void live_h_13(double *state, double *unused, double *out_7655900047573857255) {
  h_13(state, unused, out_7655900047573857255);
}
void live_H_13(double *state, double *unused, double *out_7863485562721535985) {
  H_13(state, unused, out_7863485562721535985);
}
void live_h_14(double *state, double *unused, double *out_6576856407365962507) {
  h_14(state, unused, out_6576856407365962507);
}
void live_H_14(double *state, double *unused, double *out_2415313609388602870) {
  H_14(state, unused, out_2415313609388602870);
}
void live_h_33(double *state, double *unused, double *out_8024822863313080523) {
  h_33(state, unused, out_8024822863313080523);
}
void live_H_33(double *state, double *unused, double *out_3185313482641585360) {
  H_33(state, unused, out_3185313482641585360);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
