#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5765856962138507314) {
   out_5765856962138507314[0] = 0;
   out_5765856962138507314[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5765856962138507314[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5765856962138507314[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5765856962138507314[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5765856962138507314[5] = -sin(in_vec[1]);
   out_5765856962138507314[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5765856962138507314[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5765856962138507314[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5765856962138507314[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5765856962138507314[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5765856962138507314[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5765856962138507314[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5765856962138507314[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5765856962138507314[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5765856962138507314[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5765856962138507314[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5765856962138507314[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8128801794583824831) {
   out_8128801794583824831[0] = delta_x[0] + nom_x[0];
   out_8128801794583824831[1] = delta_x[1] + nom_x[1];
   out_8128801794583824831[2] = delta_x[2] + nom_x[2];
   out_8128801794583824831[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8128801794583824831[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8128801794583824831[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8128801794583824831[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8128801794583824831[7] = delta_x[6] + nom_x[7];
   out_8128801794583824831[8] = delta_x[7] + nom_x[8];
   out_8128801794583824831[9] = delta_x[8] + nom_x[9];
   out_8128801794583824831[10] = delta_x[9] + nom_x[10];
   out_8128801794583824831[11] = delta_x[10] + nom_x[11];
   out_8128801794583824831[12] = delta_x[11] + nom_x[12];
   out_8128801794583824831[13] = delta_x[12] + nom_x[13];
   out_8128801794583824831[14] = delta_x[13] + nom_x[14];
   out_8128801794583824831[15] = delta_x[14] + nom_x[15];
   out_8128801794583824831[16] = delta_x[15] + nom_x[16];
   out_8128801794583824831[17] = delta_x[16] + nom_x[17];
   out_8128801794583824831[18] = delta_x[17] + nom_x[18];
   out_8128801794583824831[19] = delta_x[18] + nom_x[19];
   out_8128801794583824831[20] = delta_x[19] + nom_x[20];
   out_8128801794583824831[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8392023562780547307) {
   out_8392023562780547307[0] = -nom_x[0] + true_x[0];
   out_8392023562780547307[1] = -nom_x[1] + true_x[1];
   out_8392023562780547307[2] = -nom_x[2] + true_x[2];
   out_8392023562780547307[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8392023562780547307[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8392023562780547307[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8392023562780547307[6] = -nom_x[7] + true_x[7];
   out_8392023562780547307[7] = -nom_x[8] + true_x[8];
   out_8392023562780547307[8] = -nom_x[9] + true_x[9];
   out_8392023562780547307[9] = -nom_x[10] + true_x[10];
   out_8392023562780547307[10] = -nom_x[11] + true_x[11];
   out_8392023562780547307[11] = -nom_x[12] + true_x[12];
   out_8392023562780547307[12] = -nom_x[13] + true_x[13];
   out_8392023562780547307[13] = -nom_x[14] + true_x[14];
   out_8392023562780547307[14] = -nom_x[15] + true_x[15];
   out_8392023562780547307[15] = -nom_x[16] + true_x[16];
   out_8392023562780547307[16] = -nom_x[17] + true_x[17];
   out_8392023562780547307[17] = -nom_x[18] + true_x[18];
   out_8392023562780547307[18] = -nom_x[19] + true_x[19];
   out_8392023562780547307[19] = -nom_x[20] + true_x[20];
   out_8392023562780547307[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5878743350081727116) {
   out_5878743350081727116[0] = 1.0;
   out_5878743350081727116[1] = 0;
   out_5878743350081727116[2] = 0;
   out_5878743350081727116[3] = 0;
   out_5878743350081727116[4] = 0;
   out_5878743350081727116[5] = 0;
   out_5878743350081727116[6] = 0;
   out_5878743350081727116[7] = 0;
   out_5878743350081727116[8] = 0;
   out_5878743350081727116[9] = 0;
   out_5878743350081727116[10] = 0;
   out_5878743350081727116[11] = 0;
   out_5878743350081727116[12] = 0;
   out_5878743350081727116[13] = 0;
   out_5878743350081727116[14] = 0;
   out_5878743350081727116[15] = 0;
   out_5878743350081727116[16] = 0;
   out_5878743350081727116[17] = 0;
   out_5878743350081727116[18] = 0;
   out_5878743350081727116[19] = 0;
   out_5878743350081727116[20] = 0;
   out_5878743350081727116[21] = 0;
   out_5878743350081727116[22] = 1.0;
   out_5878743350081727116[23] = 0;
   out_5878743350081727116[24] = 0;
   out_5878743350081727116[25] = 0;
   out_5878743350081727116[26] = 0;
   out_5878743350081727116[27] = 0;
   out_5878743350081727116[28] = 0;
   out_5878743350081727116[29] = 0;
   out_5878743350081727116[30] = 0;
   out_5878743350081727116[31] = 0;
   out_5878743350081727116[32] = 0;
   out_5878743350081727116[33] = 0;
   out_5878743350081727116[34] = 0;
   out_5878743350081727116[35] = 0;
   out_5878743350081727116[36] = 0;
   out_5878743350081727116[37] = 0;
   out_5878743350081727116[38] = 0;
   out_5878743350081727116[39] = 0;
   out_5878743350081727116[40] = 0;
   out_5878743350081727116[41] = 0;
   out_5878743350081727116[42] = 0;
   out_5878743350081727116[43] = 0;
   out_5878743350081727116[44] = 1.0;
   out_5878743350081727116[45] = 0;
   out_5878743350081727116[46] = 0;
   out_5878743350081727116[47] = 0;
   out_5878743350081727116[48] = 0;
   out_5878743350081727116[49] = 0;
   out_5878743350081727116[50] = 0;
   out_5878743350081727116[51] = 0;
   out_5878743350081727116[52] = 0;
   out_5878743350081727116[53] = 0;
   out_5878743350081727116[54] = 0;
   out_5878743350081727116[55] = 0;
   out_5878743350081727116[56] = 0;
   out_5878743350081727116[57] = 0;
   out_5878743350081727116[58] = 0;
   out_5878743350081727116[59] = 0;
   out_5878743350081727116[60] = 0;
   out_5878743350081727116[61] = 0;
   out_5878743350081727116[62] = 0;
   out_5878743350081727116[63] = 0;
   out_5878743350081727116[64] = 0;
   out_5878743350081727116[65] = 0;
   out_5878743350081727116[66] = -0.5*state[4];
   out_5878743350081727116[67] = -0.5*state[5];
   out_5878743350081727116[68] = -0.5*state[6];
   out_5878743350081727116[69] = 0;
   out_5878743350081727116[70] = 0;
   out_5878743350081727116[71] = 0;
   out_5878743350081727116[72] = 0;
   out_5878743350081727116[73] = 0;
   out_5878743350081727116[74] = 0;
   out_5878743350081727116[75] = 0;
   out_5878743350081727116[76] = 0;
   out_5878743350081727116[77] = 0;
   out_5878743350081727116[78] = 0;
   out_5878743350081727116[79] = 0;
   out_5878743350081727116[80] = 0;
   out_5878743350081727116[81] = 0;
   out_5878743350081727116[82] = 0;
   out_5878743350081727116[83] = 0;
   out_5878743350081727116[84] = 0;
   out_5878743350081727116[85] = 0;
   out_5878743350081727116[86] = 0;
   out_5878743350081727116[87] = 0.5*state[3];
   out_5878743350081727116[88] = 0.5*state[6];
   out_5878743350081727116[89] = -0.5*state[5];
   out_5878743350081727116[90] = 0;
   out_5878743350081727116[91] = 0;
   out_5878743350081727116[92] = 0;
   out_5878743350081727116[93] = 0;
   out_5878743350081727116[94] = 0;
   out_5878743350081727116[95] = 0;
   out_5878743350081727116[96] = 0;
   out_5878743350081727116[97] = 0;
   out_5878743350081727116[98] = 0;
   out_5878743350081727116[99] = 0;
   out_5878743350081727116[100] = 0;
   out_5878743350081727116[101] = 0;
   out_5878743350081727116[102] = 0;
   out_5878743350081727116[103] = 0;
   out_5878743350081727116[104] = 0;
   out_5878743350081727116[105] = 0;
   out_5878743350081727116[106] = 0;
   out_5878743350081727116[107] = 0;
   out_5878743350081727116[108] = -0.5*state[6];
   out_5878743350081727116[109] = 0.5*state[3];
   out_5878743350081727116[110] = 0.5*state[4];
   out_5878743350081727116[111] = 0;
   out_5878743350081727116[112] = 0;
   out_5878743350081727116[113] = 0;
   out_5878743350081727116[114] = 0;
   out_5878743350081727116[115] = 0;
   out_5878743350081727116[116] = 0;
   out_5878743350081727116[117] = 0;
   out_5878743350081727116[118] = 0;
   out_5878743350081727116[119] = 0;
   out_5878743350081727116[120] = 0;
   out_5878743350081727116[121] = 0;
   out_5878743350081727116[122] = 0;
   out_5878743350081727116[123] = 0;
   out_5878743350081727116[124] = 0;
   out_5878743350081727116[125] = 0;
   out_5878743350081727116[126] = 0;
   out_5878743350081727116[127] = 0;
   out_5878743350081727116[128] = 0;
   out_5878743350081727116[129] = 0.5*state[5];
   out_5878743350081727116[130] = -0.5*state[4];
   out_5878743350081727116[131] = 0.5*state[3];
   out_5878743350081727116[132] = 0;
   out_5878743350081727116[133] = 0;
   out_5878743350081727116[134] = 0;
   out_5878743350081727116[135] = 0;
   out_5878743350081727116[136] = 0;
   out_5878743350081727116[137] = 0;
   out_5878743350081727116[138] = 0;
   out_5878743350081727116[139] = 0;
   out_5878743350081727116[140] = 0;
   out_5878743350081727116[141] = 0;
   out_5878743350081727116[142] = 0;
   out_5878743350081727116[143] = 0;
   out_5878743350081727116[144] = 0;
   out_5878743350081727116[145] = 0;
   out_5878743350081727116[146] = 0;
   out_5878743350081727116[147] = 0;
   out_5878743350081727116[148] = 0;
   out_5878743350081727116[149] = 0;
   out_5878743350081727116[150] = 0;
   out_5878743350081727116[151] = 0;
   out_5878743350081727116[152] = 0;
   out_5878743350081727116[153] = 1.0;
   out_5878743350081727116[154] = 0;
   out_5878743350081727116[155] = 0;
   out_5878743350081727116[156] = 0;
   out_5878743350081727116[157] = 0;
   out_5878743350081727116[158] = 0;
   out_5878743350081727116[159] = 0;
   out_5878743350081727116[160] = 0;
   out_5878743350081727116[161] = 0;
   out_5878743350081727116[162] = 0;
   out_5878743350081727116[163] = 0;
   out_5878743350081727116[164] = 0;
   out_5878743350081727116[165] = 0;
   out_5878743350081727116[166] = 0;
   out_5878743350081727116[167] = 0;
   out_5878743350081727116[168] = 0;
   out_5878743350081727116[169] = 0;
   out_5878743350081727116[170] = 0;
   out_5878743350081727116[171] = 0;
   out_5878743350081727116[172] = 0;
   out_5878743350081727116[173] = 0;
   out_5878743350081727116[174] = 0;
   out_5878743350081727116[175] = 1.0;
   out_5878743350081727116[176] = 0;
   out_5878743350081727116[177] = 0;
   out_5878743350081727116[178] = 0;
   out_5878743350081727116[179] = 0;
   out_5878743350081727116[180] = 0;
   out_5878743350081727116[181] = 0;
   out_5878743350081727116[182] = 0;
   out_5878743350081727116[183] = 0;
   out_5878743350081727116[184] = 0;
   out_5878743350081727116[185] = 0;
   out_5878743350081727116[186] = 0;
   out_5878743350081727116[187] = 0;
   out_5878743350081727116[188] = 0;
   out_5878743350081727116[189] = 0;
   out_5878743350081727116[190] = 0;
   out_5878743350081727116[191] = 0;
   out_5878743350081727116[192] = 0;
   out_5878743350081727116[193] = 0;
   out_5878743350081727116[194] = 0;
   out_5878743350081727116[195] = 0;
   out_5878743350081727116[196] = 0;
   out_5878743350081727116[197] = 1.0;
   out_5878743350081727116[198] = 0;
   out_5878743350081727116[199] = 0;
   out_5878743350081727116[200] = 0;
   out_5878743350081727116[201] = 0;
   out_5878743350081727116[202] = 0;
   out_5878743350081727116[203] = 0;
   out_5878743350081727116[204] = 0;
   out_5878743350081727116[205] = 0;
   out_5878743350081727116[206] = 0;
   out_5878743350081727116[207] = 0;
   out_5878743350081727116[208] = 0;
   out_5878743350081727116[209] = 0;
   out_5878743350081727116[210] = 0;
   out_5878743350081727116[211] = 0;
   out_5878743350081727116[212] = 0;
   out_5878743350081727116[213] = 0;
   out_5878743350081727116[214] = 0;
   out_5878743350081727116[215] = 0;
   out_5878743350081727116[216] = 0;
   out_5878743350081727116[217] = 0;
   out_5878743350081727116[218] = 0;
   out_5878743350081727116[219] = 1.0;
   out_5878743350081727116[220] = 0;
   out_5878743350081727116[221] = 0;
   out_5878743350081727116[222] = 0;
   out_5878743350081727116[223] = 0;
   out_5878743350081727116[224] = 0;
   out_5878743350081727116[225] = 0;
   out_5878743350081727116[226] = 0;
   out_5878743350081727116[227] = 0;
   out_5878743350081727116[228] = 0;
   out_5878743350081727116[229] = 0;
   out_5878743350081727116[230] = 0;
   out_5878743350081727116[231] = 0;
   out_5878743350081727116[232] = 0;
   out_5878743350081727116[233] = 0;
   out_5878743350081727116[234] = 0;
   out_5878743350081727116[235] = 0;
   out_5878743350081727116[236] = 0;
   out_5878743350081727116[237] = 0;
   out_5878743350081727116[238] = 0;
   out_5878743350081727116[239] = 0;
   out_5878743350081727116[240] = 0;
   out_5878743350081727116[241] = 1.0;
   out_5878743350081727116[242] = 0;
   out_5878743350081727116[243] = 0;
   out_5878743350081727116[244] = 0;
   out_5878743350081727116[245] = 0;
   out_5878743350081727116[246] = 0;
   out_5878743350081727116[247] = 0;
   out_5878743350081727116[248] = 0;
   out_5878743350081727116[249] = 0;
   out_5878743350081727116[250] = 0;
   out_5878743350081727116[251] = 0;
   out_5878743350081727116[252] = 0;
   out_5878743350081727116[253] = 0;
   out_5878743350081727116[254] = 0;
   out_5878743350081727116[255] = 0;
   out_5878743350081727116[256] = 0;
   out_5878743350081727116[257] = 0;
   out_5878743350081727116[258] = 0;
   out_5878743350081727116[259] = 0;
   out_5878743350081727116[260] = 0;
   out_5878743350081727116[261] = 0;
   out_5878743350081727116[262] = 0;
   out_5878743350081727116[263] = 1.0;
   out_5878743350081727116[264] = 0;
   out_5878743350081727116[265] = 0;
   out_5878743350081727116[266] = 0;
   out_5878743350081727116[267] = 0;
   out_5878743350081727116[268] = 0;
   out_5878743350081727116[269] = 0;
   out_5878743350081727116[270] = 0;
   out_5878743350081727116[271] = 0;
   out_5878743350081727116[272] = 0;
   out_5878743350081727116[273] = 0;
   out_5878743350081727116[274] = 0;
   out_5878743350081727116[275] = 0;
   out_5878743350081727116[276] = 0;
   out_5878743350081727116[277] = 0;
   out_5878743350081727116[278] = 0;
   out_5878743350081727116[279] = 0;
   out_5878743350081727116[280] = 0;
   out_5878743350081727116[281] = 0;
   out_5878743350081727116[282] = 0;
   out_5878743350081727116[283] = 0;
   out_5878743350081727116[284] = 0;
   out_5878743350081727116[285] = 1.0;
   out_5878743350081727116[286] = 0;
   out_5878743350081727116[287] = 0;
   out_5878743350081727116[288] = 0;
   out_5878743350081727116[289] = 0;
   out_5878743350081727116[290] = 0;
   out_5878743350081727116[291] = 0;
   out_5878743350081727116[292] = 0;
   out_5878743350081727116[293] = 0;
   out_5878743350081727116[294] = 0;
   out_5878743350081727116[295] = 0;
   out_5878743350081727116[296] = 0;
   out_5878743350081727116[297] = 0;
   out_5878743350081727116[298] = 0;
   out_5878743350081727116[299] = 0;
   out_5878743350081727116[300] = 0;
   out_5878743350081727116[301] = 0;
   out_5878743350081727116[302] = 0;
   out_5878743350081727116[303] = 0;
   out_5878743350081727116[304] = 0;
   out_5878743350081727116[305] = 0;
   out_5878743350081727116[306] = 0;
   out_5878743350081727116[307] = 1.0;
   out_5878743350081727116[308] = 0;
   out_5878743350081727116[309] = 0;
   out_5878743350081727116[310] = 0;
   out_5878743350081727116[311] = 0;
   out_5878743350081727116[312] = 0;
   out_5878743350081727116[313] = 0;
   out_5878743350081727116[314] = 0;
   out_5878743350081727116[315] = 0;
   out_5878743350081727116[316] = 0;
   out_5878743350081727116[317] = 0;
   out_5878743350081727116[318] = 0;
   out_5878743350081727116[319] = 0;
   out_5878743350081727116[320] = 0;
   out_5878743350081727116[321] = 0;
   out_5878743350081727116[322] = 0;
   out_5878743350081727116[323] = 0;
   out_5878743350081727116[324] = 0;
   out_5878743350081727116[325] = 0;
   out_5878743350081727116[326] = 0;
   out_5878743350081727116[327] = 0;
   out_5878743350081727116[328] = 0;
   out_5878743350081727116[329] = 1.0;
   out_5878743350081727116[330] = 0;
   out_5878743350081727116[331] = 0;
   out_5878743350081727116[332] = 0;
   out_5878743350081727116[333] = 0;
   out_5878743350081727116[334] = 0;
   out_5878743350081727116[335] = 0;
   out_5878743350081727116[336] = 0;
   out_5878743350081727116[337] = 0;
   out_5878743350081727116[338] = 0;
   out_5878743350081727116[339] = 0;
   out_5878743350081727116[340] = 0;
   out_5878743350081727116[341] = 0;
   out_5878743350081727116[342] = 0;
   out_5878743350081727116[343] = 0;
   out_5878743350081727116[344] = 0;
   out_5878743350081727116[345] = 0;
   out_5878743350081727116[346] = 0;
   out_5878743350081727116[347] = 0;
   out_5878743350081727116[348] = 0;
   out_5878743350081727116[349] = 0;
   out_5878743350081727116[350] = 0;
   out_5878743350081727116[351] = 1.0;
   out_5878743350081727116[352] = 0;
   out_5878743350081727116[353] = 0;
   out_5878743350081727116[354] = 0;
   out_5878743350081727116[355] = 0;
   out_5878743350081727116[356] = 0;
   out_5878743350081727116[357] = 0;
   out_5878743350081727116[358] = 0;
   out_5878743350081727116[359] = 0;
   out_5878743350081727116[360] = 0;
   out_5878743350081727116[361] = 0;
   out_5878743350081727116[362] = 0;
   out_5878743350081727116[363] = 0;
   out_5878743350081727116[364] = 0;
   out_5878743350081727116[365] = 0;
   out_5878743350081727116[366] = 0;
   out_5878743350081727116[367] = 0;
   out_5878743350081727116[368] = 0;
   out_5878743350081727116[369] = 0;
   out_5878743350081727116[370] = 0;
   out_5878743350081727116[371] = 0;
   out_5878743350081727116[372] = 0;
   out_5878743350081727116[373] = 1.0;
   out_5878743350081727116[374] = 0;
   out_5878743350081727116[375] = 0;
   out_5878743350081727116[376] = 0;
   out_5878743350081727116[377] = 0;
   out_5878743350081727116[378] = 0;
   out_5878743350081727116[379] = 0;
   out_5878743350081727116[380] = 0;
   out_5878743350081727116[381] = 0;
   out_5878743350081727116[382] = 0;
   out_5878743350081727116[383] = 0;
   out_5878743350081727116[384] = 0;
   out_5878743350081727116[385] = 0;
   out_5878743350081727116[386] = 0;
   out_5878743350081727116[387] = 0;
   out_5878743350081727116[388] = 0;
   out_5878743350081727116[389] = 0;
   out_5878743350081727116[390] = 0;
   out_5878743350081727116[391] = 0;
   out_5878743350081727116[392] = 0;
   out_5878743350081727116[393] = 0;
   out_5878743350081727116[394] = 0;
   out_5878743350081727116[395] = 1.0;
   out_5878743350081727116[396] = 0;
   out_5878743350081727116[397] = 0;
   out_5878743350081727116[398] = 0;
   out_5878743350081727116[399] = 0;
   out_5878743350081727116[400] = 0;
   out_5878743350081727116[401] = 0;
   out_5878743350081727116[402] = 0;
   out_5878743350081727116[403] = 0;
   out_5878743350081727116[404] = 0;
   out_5878743350081727116[405] = 0;
   out_5878743350081727116[406] = 0;
   out_5878743350081727116[407] = 0;
   out_5878743350081727116[408] = 0;
   out_5878743350081727116[409] = 0;
   out_5878743350081727116[410] = 0;
   out_5878743350081727116[411] = 0;
   out_5878743350081727116[412] = 0;
   out_5878743350081727116[413] = 0;
   out_5878743350081727116[414] = 0;
   out_5878743350081727116[415] = 0;
   out_5878743350081727116[416] = 0;
   out_5878743350081727116[417] = 1.0;
   out_5878743350081727116[418] = 0;
   out_5878743350081727116[419] = 0;
   out_5878743350081727116[420] = 0;
   out_5878743350081727116[421] = 0;
   out_5878743350081727116[422] = 0;
   out_5878743350081727116[423] = 0;
   out_5878743350081727116[424] = 0;
   out_5878743350081727116[425] = 0;
   out_5878743350081727116[426] = 0;
   out_5878743350081727116[427] = 0;
   out_5878743350081727116[428] = 0;
   out_5878743350081727116[429] = 0;
   out_5878743350081727116[430] = 0;
   out_5878743350081727116[431] = 0;
   out_5878743350081727116[432] = 0;
   out_5878743350081727116[433] = 0;
   out_5878743350081727116[434] = 0;
   out_5878743350081727116[435] = 0;
   out_5878743350081727116[436] = 0;
   out_5878743350081727116[437] = 0;
   out_5878743350081727116[438] = 0;
   out_5878743350081727116[439] = 1.0;
   out_5878743350081727116[440] = 0;
   out_5878743350081727116[441] = 0;
   out_5878743350081727116[442] = 0;
   out_5878743350081727116[443] = 0;
   out_5878743350081727116[444] = 0;
   out_5878743350081727116[445] = 0;
   out_5878743350081727116[446] = 0;
   out_5878743350081727116[447] = 0;
   out_5878743350081727116[448] = 0;
   out_5878743350081727116[449] = 0;
   out_5878743350081727116[450] = 0;
   out_5878743350081727116[451] = 0;
   out_5878743350081727116[452] = 0;
   out_5878743350081727116[453] = 0;
   out_5878743350081727116[454] = 0;
   out_5878743350081727116[455] = 0;
   out_5878743350081727116[456] = 0;
   out_5878743350081727116[457] = 0;
   out_5878743350081727116[458] = 0;
   out_5878743350081727116[459] = 0;
   out_5878743350081727116[460] = 0;
   out_5878743350081727116[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4858778294711581647) {
   out_4858778294711581647[0] = dt*state[7] + state[0];
   out_4858778294711581647[1] = dt*state[8] + state[1];
   out_4858778294711581647[2] = dt*state[9] + state[2];
   out_4858778294711581647[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4858778294711581647[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4858778294711581647[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4858778294711581647[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4858778294711581647[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4858778294711581647[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4858778294711581647[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4858778294711581647[10] = state[10];
   out_4858778294711581647[11] = state[11];
   out_4858778294711581647[12] = state[12];
   out_4858778294711581647[13] = state[13];
   out_4858778294711581647[14] = state[14];
   out_4858778294711581647[15] = state[15];
   out_4858778294711581647[16] = state[16];
   out_4858778294711581647[17] = state[17];
   out_4858778294711581647[18] = state[18];
   out_4858778294711581647[19] = state[19];
   out_4858778294711581647[20] = state[20];
   out_4858778294711581647[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4437991197939110159) {
   out_4437991197939110159[0] = 1;
   out_4437991197939110159[1] = 0;
   out_4437991197939110159[2] = 0;
   out_4437991197939110159[3] = 0;
   out_4437991197939110159[4] = 0;
   out_4437991197939110159[5] = 0;
   out_4437991197939110159[6] = dt;
   out_4437991197939110159[7] = 0;
   out_4437991197939110159[8] = 0;
   out_4437991197939110159[9] = 0;
   out_4437991197939110159[10] = 0;
   out_4437991197939110159[11] = 0;
   out_4437991197939110159[12] = 0;
   out_4437991197939110159[13] = 0;
   out_4437991197939110159[14] = 0;
   out_4437991197939110159[15] = 0;
   out_4437991197939110159[16] = 0;
   out_4437991197939110159[17] = 0;
   out_4437991197939110159[18] = 0;
   out_4437991197939110159[19] = 0;
   out_4437991197939110159[20] = 0;
   out_4437991197939110159[21] = 0;
   out_4437991197939110159[22] = 1;
   out_4437991197939110159[23] = 0;
   out_4437991197939110159[24] = 0;
   out_4437991197939110159[25] = 0;
   out_4437991197939110159[26] = 0;
   out_4437991197939110159[27] = 0;
   out_4437991197939110159[28] = dt;
   out_4437991197939110159[29] = 0;
   out_4437991197939110159[30] = 0;
   out_4437991197939110159[31] = 0;
   out_4437991197939110159[32] = 0;
   out_4437991197939110159[33] = 0;
   out_4437991197939110159[34] = 0;
   out_4437991197939110159[35] = 0;
   out_4437991197939110159[36] = 0;
   out_4437991197939110159[37] = 0;
   out_4437991197939110159[38] = 0;
   out_4437991197939110159[39] = 0;
   out_4437991197939110159[40] = 0;
   out_4437991197939110159[41] = 0;
   out_4437991197939110159[42] = 0;
   out_4437991197939110159[43] = 0;
   out_4437991197939110159[44] = 1;
   out_4437991197939110159[45] = 0;
   out_4437991197939110159[46] = 0;
   out_4437991197939110159[47] = 0;
   out_4437991197939110159[48] = 0;
   out_4437991197939110159[49] = 0;
   out_4437991197939110159[50] = dt;
   out_4437991197939110159[51] = 0;
   out_4437991197939110159[52] = 0;
   out_4437991197939110159[53] = 0;
   out_4437991197939110159[54] = 0;
   out_4437991197939110159[55] = 0;
   out_4437991197939110159[56] = 0;
   out_4437991197939110159[57] = 0;
   out_4437991197939110159[58] = 0;
   out_4437991197939110159[59] = 0;
   out_4437991197939110159[60] = 0;
   out_4437991197939110159[61] = 0;
   out_4437991197939110159[62] = 0;
   out_4437991197939110159[63] = 0;
   out_4437991197939110159[64] = 0;
   out_4437991197939110159[65] = 0;
   out_4437991197939110159[66] = 1;
   out_4437991197939110159[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4437991197939110159[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4437991197939110159[69] = 0;
   out_4437991197939110159[70] = 0;
   out_4437991197939110159[71] = 0;
   out_4437991197939110159[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4437991197939110159[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4437991197939110159[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4437991197939110159[75] = 0;
   out_4437991197939110159[76] = 0;
   out_4437991197939110159[77] = 0;
   out_4437991197939110159[78] = 0;
   out_4437991197939110159[79] = 0;
   out_4437991197939110159[80] = 0;
   out_4437991197939110159[81] = 0;
   out_4437991197939110159[82] = 0;
   out_4437991197939110159[83] = 0;
   out_4437991197939110159[84] = 0;
   out_4437991197939110159[85] = 0;
   out_4437991197939110159[86] = 0;
   out_4437991197939110159[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4437991197939110159[88] = 1;
   out_4437991197939110159[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4437991197939110159[90] = 0;
   out_4437991197939110159[91] = 0;
   out_4437991197939110159[92] = 0;
   out_4437991197939110159[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4437991197939110159[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4437991197939110159[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4437991197939110159[96] = 0;
   out_4437991197939110159[97] = 0;
   out_4437991197939110159[98] = 0;
   out_4437991197939110159[99] = 0;
   out_4437991197939110159[100] = 0;
   out_4437991197939110159[101] = 0;
   out_4437991197939110159[102] = 0;
   out_4437991197939110159[103] = 0;
   out_4437991197939110159[104] = 0;
   out_4437991197939110159[105] = 0;
   out_4437991197939110159[106] = 0;
   out_4437991197939110159[107] = 0;
   out_4437991197939110159[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4437991197939110159[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4437991197939110159[110] = 1;
   out_4437991197939110159[111] = 0;
   out_4437991197939110159[112] = 0;
   out_4437991197939110159[113] = 0;
   out_4437991197939110159[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4437991197939110159[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4437991197939110159[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4437991197939110159[117] = 0;
   out_4437991197939110159[118] = 0;
   out_4437991197939110159[119] = 0;
   out_4437991197939110159[120] = 0;
   out_4437991197939110159[121] = 0;
   out_4437991197939110159[122] = 0;
   out_4437991197939110159[123] = 0;
   out_4437991197939110159[124] = 0;
   out_4437991197939110159[125] = 0;
   out_4437991197939110159[126] = 0;
   out_4437991197939110159[127] = 0;
   out_4437991197939110159[128] = 0;
   out_4437991197939110159[129] = 0;
   out_4437991197939110159[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4437991197939110159[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4437991197939110159[132] = 1;
   out_4437991197939110159[133] = 0;
   out_4437991197939110159[134] = 0;
   out_4437991197939110159[135] = 0;
   out_4437991197939110159[136] = 0;
   out_4437991197939110159[137] = 0;
   out_4437991197939110159[138] = 0;
   out_4437991197939110159[139] = 0;
   out_4437991197939110159[140] = 0;
   out_4437991197939110159[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4437991197939110159[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4437991197939110159[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4437991197939110159[144] = 0;
   out_4437991197939110159[145] = 0;
   out_4437991197939110159[146] = 0;
   out_4437991197939110159[147] = 0;
   out_4437991197939110159[148] = 0;
   out_4437991197939110159[149] = 0;
   out_4437991197939110159[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4437991197939110159[151] = 0;
   out_4437991197939110159[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4437991197939110159[153] = 0;
   out_4437991197939110159[154] = 1;
   out_4437991197939110159[155] = 0;
   out_4437991197939110159[156] = 0;
   out_4437991197939110159[157] = 0;
   out_4437991197939110159[158] = 0;
   out_4437991197939110159[159] = 0;
   out_4437991197939110159[160] = 0;
   out_4437991197939110159[161] = 0;
   out_4437991197939110159[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4437991197939110159[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4437991197939110159[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4437991197939110159[165] = 0;
   out_4437991197939110159[166] = 0;
   out_4437991197939110159[167] = 0;
   out_4437991197939110159[168] = 0;
   out_4437991197939110159[169] = 0;
   out_4437991197939110159[170] = 0;
   out_4437991197939110159[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4437991197939110159[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4437991197939110159[173] = 0;
   out_4437991197939110159[174] = 0;
   out_4437991197939110159[175] = 0;
   out_4437991197939110159[176] = 1;
   out_4437991197939110159[177] = 0;
   out_4437991197939110159[178] = 0;
   out_4437991197939110159[179] = 0;
   out_4437991197939110159[180] = 0;
   out_4437991197939110159[181] = 0;
   out_4437991197939110159[182] = 0;
   out_4437991197939110159[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4437991197939110159[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4437991197939110159[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4437991197939110159[186] = 0;
   out_4437991197939110159[187] = 0;
   out_4437991197939110159[188] = 0;
   out_4437991197939110159[189] = 0;
   out_4437991197939110159[190] = 0;
   out_4437991197939110159[191] = 0;
   out_4437991197939110159[192] = 0;
   out_4437991197939110159[193] = 0;
   out_4437991197939110159[194] = 0;
   out_4437991197939110159[195] = 0;
   out_4437991197939110159[196] = 0;
   out_4437991197939110159[197] = 0;
   out_4437991197939110159[198] = 1;
   out_4437991197939110159[199] = 0;
   out_4437991197939110159[200] = 0;
   out_4437991197939110159[201] = 0;
   out_4437991197939110159[202] = 0;
   out_4437991197939110159[203] = 0;
   out_4437991197939110159[204] = 0;
   out_4437991197939110159[205] = 0;
   out_4437991197939110159[206] = 0;
   out_4437991197939110159[207] = 0;
   out_4437991197939110159[208] = 0;
   out_4437991197939110159[209] = 0;
   out_4437991197939110159[210] = 0;
   out_4437991197939110159[211] = 0;
   out_4437991197939110159[212] = 0;
   out_4437991197939110159[213] = 0;
   out_4437991197939110159[214] = 0;
   out_4437991197939110159[215] = 0;
   out_4437991197939110159[216] = 0;
   out_4437991197939110159[217] = 0;
   out_4437991197939110159[218] = 0;
   out_4437991197939110159[219] = 0;
   out_4437991197939110159[220] = 1;
   out_4437991197939110159[221] = 0;
   out_4437991197939110159[222] = 0;
   out_4437991197939110159[223] = 0;
   out_4437991197939110159[224] = 0;
   out_4437991197939110159[225] = 0;
   out_4437991197939110159[226] = 0;
   out_4437991197939110159[227] = 0;
   out_4437991197939110159[228] = 0;
   out_4437991197939110159[229] = 0;
   out_4437991197939110159[230] = 0;
   out_4437991197939110159[231] = 0;
   out_4437991197939110159[232] = 0;
   out_4437991197939110159[233] = 0;
   out_4437991197939110159[234] = 0;
   out_4437991197939110159[235] = 0;
   out_4437991197939110159[236] = 0;
   out_4437991197939110159[237] = 0;
   out_4437991197939110159[238] = 0;
   out_4437991197939110159[239] = 0;
   out_4437991197939110159[240] = 0;
   out_4437991197939110159[241] = 0;
   out_4437991197939110159[242] = 1;
   out_4437991197939110159[243] = 0;
   out_4437991197939110159[244] = 0;
   out_4437991197939110159[245] = 0;
   out_4437991197939110159[246] = 0;
   out_4437991197939110159[247] = 0;
   out_4437991197939110159[248] = 0;
   out_4437991197939110159[249] = 0;
   out_4437991197939110159[250] = 0;
   out_4437991197939110159[251] = 0;
   out_4437991197939110159[252] = 0;
   out_4437991197939110159[253] = 0;
   out_4437991197939110159[254] = 0;
   out_4437991197939110159[255] = 0;
   out_4437991197939110159[256] = 0;
   out_4437991197939110159[257] = 0;
   out_4437991197939110159[258] = 0;
   out_4437991197939110159[259] = 0;
   out_4437991197939110159[260] = 0;
   out_4437991197939110159[261] = 0;
   out_4437991197939110159[262] = 0;
   out_4437991197939110159[263] = 0;
   out_4437991197939110159[264] = 1;
   out_4437991197939110159[265] = 0;
   out_4437991197939110159[266] = 0;
   out_4437991197939110159[267] = 0;
   out_4437991197939110159[268] = 0;
   out_4437991197939110159[269] = 0;
   out_4437991197939110159[270] = 0;
   out_4437991197939110159[271] = 0;
   out_4437991197939110159[272] = 0;
   out_4437991197939110159[273] = 0;
   out_4437991197939110159[274] = 0;
   out_4437991197939110159[275] = 0;
   out_4437991197939110159[276] = 0;
   out_4437991197939110159[277] = 0;
   out_4437991197939110159[278] = 0;
   out_4437991197939110159[279] = 0;
   out_4437991197939110159[280] = 0;
   out_4437991197939110159[281] = 0;
   out_4437991197939110159[282] = 0;
   out_4437991197939110159[283] = 0;
   out_4437991197939110159[284] = 0;
   out_4437991197939110159[285] = 0;
   out_4437991197939110159[286] = 1;
   out_4437991197939110159[287] = 0;
   out_4437991197939110159[288] = 0;
   out_4437991197939110159[289] = 0;
   out_4437991197939110159[290] = 0;
   out_4437991197939110159[291] = 0;
   out_4437991197939110159[292] = 0;
   out_4437991197939110159[293] = 0;
   out_4437991197939110159[294] = 0;
   out_4437991197939110159[295] = 0;
   out_4437991197939110159[296] = 0;
   out_4437991197939110159[297] = 0;
   out_4437991197939110159[298] = 0;
   out_4437991197939110159[299] = 0;
   out_4437991197939110159[300] = 0;
   out_4437991197939110159[301] = 0;
   out_4437991197939110159[302] = 0;
   out_4437991197939110159[303] = 0;
   out_4437991197939110159[304] = 0;
   out_4437991197939110159[305] = 0;
   out_4437991197939110159[306] = 0;
   out_4437991197939110159[307] = 0;
   out_4437991197939110159[308] = 1;
   out_4437991197939110159[309] = 0;
   out_4437991197939110159[310] = 0;
   out_4437991197939110159[311] = 0;
   out_4437991197939110159[312] = 0;
   out_4437991197939110159[313] = 0;
   out_4437991197939110159[314] = 0;
   out_4437991197939110159[315] = 0;
   out_4437991197939110159[316] = 0;
   out_4437991197939110159[317] = 0;
   out_4437991197939110159[318] = 0;
   out_4437991197939110159[319] = 0;
   out_4437991197939110159[320] = 0;
   out_4437991197939110159[321] = 0;
   out_4437991197939110159[322] = 0;
   out_4437991197939110159[323] = 0;
   out_4437991197939110159[324] = 0;
   out_4437991197939110159[325] = 0;
   out_4437991197939110159[326] = 0;
   out_4437991197939110159[327] = 0;
   out_4437991197939110159[328] = 0;
   out_4437991197939110159[329] = 0;
   out_4437991197939110159[330] = 1;
   out_4437991197939110159[331] = 0;
   out_4437991197939110159[332] = 0;
   out_4437991197939110159[333] = 0;
   out_4437991197939110159[334] = 0;
   out_4437991197939110159[335] = 0;
   out_4437991197939110159[336] = 0;
   out_4437991197939110159[337] = 0;
   out_4437991197939110159[338] = 0;
   out_4437991197939110159[339] = 0;
   out_4437991197939110159[340] = 0;
   out_4437991197939110159[341] = 0;
   out_4437991197939110159[342] = 0;
   out_4437991197939110159[343] = 0;
   out_4437991197939110159[344] = 0;
   out_4437991197939110159[345] = 0;
   out_4437991197939110159[346] = 0;
   out_4437991197939110159[347] = 0;
   out_4437991197939110159[348] = 0;
   out_4437991197939110159[349] = 0;
   out_4437991197939110159[350] = 0;
   out_4437991197939110159[351] = 0;
   out_4437991197939110159[352] = 1;
   out_4437991197939110159[353] = 0;
   out_4437991197939110159[354] = 0;
   out_4437991197939110159[355] = 0;
   out_4437991197939110159[356] = 0;
   out_4437991197939110159[357] = 0;
   out_4437991197939110159[358] = 0;
   out_4437991197939110159[359] = 0;
   out_4437991197939110159[360] = 0;
   out_4437991197939110159[361] = 0;
   out_4437991197939110159[362] = 0;
   out_4437991197939110159[363] = 0;
   out_4437991197939110159[364] = 0;
   out_4437991197939110159[365] = 0;
   out_4437991197939110159[366] = 0;
   out_4437991197939110159[367] = 0;
   out_4437991197939110159[368] = 0;
   out_4437991197939110159[369] = 0;
   out_4437991197939110159[370] = 0;
   out_4437991197939110159[371] = 0;
   out_4437991197939110159[372] = 0;
   out_4437991197939110159[373] = 0;
   out_4437991197939110159[374] = 1;
   out_4437991197939110159[375] = 0;
   out_4437991197939110159[376] = 0;
   out_4437991197939110159[377] = 0;
   out_4437991197939110159[378] = 0;
   out_4437991197939110159[379] = 0;
   out_4437991197939110159[380] = 0;
   out_4437991197939110159[381] = 0;
   out_4437991197939110159[382] = 0;
   out_4437991197939110159[383] = 0;
   out_4437991197939110159[384] = 0;
   out_4437991197939110159[385] = 0;
   out_4437991197939110159[386] = 0;
   out_4437991197939110159[387] = 0;
   out_4437991197939110159[388] = 0;
   out_4437991197939110159[389] = 0;
   out_4437991197939110159[390] = 0;
   out_4437991197939110159[391] = 0;
   out_4437991197939110159[392] = 0;
   out_4437991197939110159[393] = 0;
   out_4437991197939110159[394] = 0;
   out_4437991197939110159[395] = 0;
   out_4437991197939110159[396] = 1;
   out_4437991197939110159[397] = 0;
   out_4437991197939110159[398] = 0;
   out_4437991197939110159[399] = 0;
   out_4437991197939110159[400] = 0;
   out_4437991197939110159[401] = 0;
   out_4437991197939110159[402] = 0;
   out_4437991197939110159[403] = 0;
   out_4437991197939110159[404] = 0;
   out_4437991197939110159[405] = 0;
   out_4437991197939110159[406] = 0;
   out_4437991197939110159[407] = 0;
   out_4437991197939110159[408] = 0;
   out_4437991197939110159[409] = 0;
   out_4437991197939110159[410] = 0;
   out_4437991197939110159[411] = 0;
   out_4437991197939110159[412] = 0;
   out_4437991197939110159[413] = 0;
   out_4437991197939110159[414] = 0;
   out_4437991197939110159[415] = 0;
   out_4437991197939110159[416] = 0;
   out_4437991197939110159[417] = 0;
   out_4437991197939110159[418] = 1;
   out_4437991197939110159[419] = 0;
   out_4437991197939110159[420] = 0;
   out_4437991197939110159[421] = 0;
   out_4437991197939110159[422] = 0;
   out_4437991197939110159[423] = 0;
   out_4437991197939110159[424] = 0;
   out_4437991197939110159[425] = 0;
   out_4437991197939110159[426] = 0;
   out_4437991197939110159[427] = 0;
   out_4437991197939110159[428] = 0;
   out_4437991197939110159[429] = 0;
   out_4437991197939110159[430] = 0;
   out_4437991197939110159[431] = 0;
   out_4437991197939110159[432] = 0;
   out_4437991197939110159[433] = 0;
   out_4437991197939110159[434] = 0;
   out_4437991197939110159[435] = 0;
   out_4437991197939110159[436] = 0;
   out_4437991197939110159[437] = 0;
   out_4437991197939110159[438] = 0;
   out_4437991197939110159[439] = 0;
   out_4437991197939110159[440] = 1;
}
void h_4(double *state, double *unused, double *out_1526533485984711682) {
   out_1526533485984711682[0] = state[10] + state[13];
   out_1526533485984711682[1] = state[11] + state[14];
   out_1526533485984711682[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8614362426384290758) {
   out_8614362426384290758[0] = 0;
   out_8614362426384290758[1] = 0;
   out_8614362426384290758[2] = 0;
   out_8614362426384290758[3] = 0;
   out_8614362426384290758[4] = 0;
   out_8614362426384290758[5] = 0;
   out_8614362426384290758[6] = 0;
   out_8614362426384290758[7] = 0;
   out_8614362426384290758[8] = 0;
   out_8614362426384290758[9] = 0;
   out_8614362426384290758[10] = 1;
   out_8614362426384290758[11] = 0;
   out_8614362426384290758[12] = 0;
   out_8614362426384290758[13] = 1;
   out_8614362426384290758[14] = 0;
   out_8614362426384290758[15] = 0;
   out_8614362426384290758[16] = 0;
   out_8614362426384290758[17] = 0;
   out_8614362426384290758[18] = 0;
   out_8614362426384290758[19] = 0;
   out_8614362426384290758[20] = 0;
   out_8614362426384290758[21] = 0;
   out_8614362426384290758[22] = 0;
   out_8614362426384290758[23] = 0;
   out_8614362426384290758[24] = 0;
   out_8614362426384290758[25] = 0;
   out_8614362426384290758[26] = 0;
   out_8614362426384290758[27] = 0;
   out_8614362426384290758[28] = 0;
   out_8614362426384290758[29] = 0;
   out_8614362426384290758[30] = 0;
   out_8614362426384290758[31] = 0;
   out_8614362426384290758[32] = 0;
   out_8614362426384290758[33] = 1;
   out_8614362426384290758[34] = 0;
   out_8614362426384290758[35] = 0;
   out_8614362426384290758[36] = 1;
   out_8614362426384290758[37] = 0;
   out_8614362426384290758[38] = 0;
   out_8614362426384290758[39] = 0;
   out_8614362426384290758[40] = 0;
   out_8614362426384290758[41] = 0;
   out_8614362426384290758[42] = 0;
   out_8614362426384290758[43] = 0;
   out_8614362426384290758[44] = 0;
   out_8614362426384290758[45] = 0;
   out_8614362426384290758[46] = 0;
   out_8614362426384290758[47] = 0;
   out_8614362426384290758[48] = 0;
   out_8614362426384290758[49] = 0;
   out_8614362426384290758[50] = 0;
   out_8614362426384290758[51] = 0;
   out_8614362426384290758[52] = 0;
   out_8614362426384290758[53] = 0;
   out_8614362426384290758[54] = 0;
   out_8614362426384290758[55] = 0;
   out_8614362426384290758[56] = 1;
   out_8614362426384290758[57] = 0;
   out_8614362426384290758[58] = 0;
   out_8614362426384290758[59] = 1;
   out_8614362426384290758[60] = 0;
   out_8614362426384290758[61] = 0;
   out_8614362426384290758[62] = 0;
   out_8614362426384290758[63] = 0;
   out_8614362426384290758[64] = 0;
   out_8614362426384290758[65] = 0;
}
void h_9(double *state, double *unused, double *out_558098318269232442) {
   out_558098318269232442[0] = state[10];
   out_558098318269232442[1] = state[11];
   out_558098318269232442[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8855552073013881403) {
   out_8855552073013881403[0] = 0;
   out_8855552073013881403[1] = 0;
   out_8855552073013881403[2] = 0;
   out_8855552073013881403[3] = 0;
   out_8855552073013881403[4] = 0;
   out_8855552073013881403[5] = 0;
   out_8855552073013881403[6] = 0;
   out_8855552073013881403[7] = 0;
   out_8855552073013881403[8] = 0;
   out_8855552073013881403[9] = 0;
   out_8855552073013881403[10] = 1;
   out_8855552073013881403[11] = 0;
   out_8855552073013881403[12] = 0;
   out_8855552073013881403[13] = 0;
   out_8855552073013881403[14] = 0;
   out_8855552073013881403[15] = 0;
   out_8855552073013881403[16] = 0;
   out_8855552073013881403[17] = 0;
   out_8855552073013881403[18] = 0;
   out_8855552073013881403[19] = 0;
   out_8855552073013881403[20] = 0;
   out_8855552073013881403[21] = 0;
   out_8855552073013881403[22] = 0;
   out_8855552073013881403[23] = 0;
   out_8855552073013881403[24] = 0;
   out_8855552073013881403[25] = 0;
   out_8855552073013881403[26] = 0;
   out_8855552073013881403[27] = 0;
   out_8855552073013881403[28] = 0;
   out_8855552073013881403[29] = 0;
   out_8855552073013881403[30] = 0;
   out_8855552073013881403[31] = 0;
   out_8855552073013881403[32] = 0;
   out_8855552073013881403[33] = 1;
   out_8855552073013881403[34] = 0;
   out_8855552073013881403[35] = 0;
   out_8855552073013881403[36] = 0;
   out_8855552073013881403[37] = 0;
   out_8855552073013881403[38] = 0;
   out_8855552073013881403[39] = 0;
   out_8855552073013881403[40] = 0;
   out_8855552073013881403[41] = 0;
   out_8855552073013881403[42] = 0;
   out_8855552073013881403[43] = 0;
   out_8855552073013881403[44] = 0;
   out_8855552073013881403[45] = 0;
   out_8855552073013881403[46] = 0;
   out_8855552073013881403[47] = 0;
   out_8855552073013881403[48] = 0;
   out_8855552073013881403[49] = 0;
   out_8855552073013881403[50] = 0;
   out_8855552073013881403[51] = 0;
   out_8855552073013881403[52] = 0;
   out_8855552073013881403[53] = 0;
   out_8855552073013881403[54] = 0;
   out_8855552073013881403[55] = 0;
   out_8855552073013881403[56] = 1;
   out_8855552073013881403[57] = 0;
   out_8855552073013881403[58] = 0;
   out_8855552073013881403[59] = 0;
   out_8855552073013881403[60] = 0;
   out_8855552073013881403[61] = 0;
   out_8855552073013881403[62] = 0;
   out_8855552073013881403[63] = 0;
   out_8855552073013881403[64] = 0;
   out_8855552073013881403[65] = 0;
}
void h_10(double *state, double *unused, double *out_640959415076880377) {
   out_640959415076880377[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_640959415076880377[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_640959415076880377[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6298957188028998798) {
   out_6298957188028998798[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6298957188028998798[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6298957188028998798[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6298957188028998798[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6298957188028998798[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6298957188028998798[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6298957188028998798[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6298957188028998798[7] = 0;
   out_6298957188028998798[8] = 0;
   out_6298957188028998798[9] = 0;
   out_6298957188028998798[10] = 0;
   out_6298957188028998798[11] = 0;
   out_6298957188028998798[12] = 0;
   out_6298957188028998798[13] = 0;
   out_6298957188028998798[14] = 0;
   out_6298957188028998798[15] = 0;
   out_6298957188028998798[16] = 1;
   out_6298957188028998798[17] = 0;
   out_6298957188028998798[18] = 0;
   out_6298957188028998798[19] = 1;
   out_6298957188028998798[20] = 0;
   out_6298957188028998798[21] = 0;
   out_6298957188028998798[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6298957188028998798[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6298957188028998798[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6298957188028998798[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6298957188028998798[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6298957188028998798[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6298957188028998798[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6298957188028998798[29] = 0;
   out_6298957188028998798[30] = 0;
   out_6298957188028998798[31] = 0;
   out_6298957188028998798[32] = 0;
   out_6298957188028998798[33] = 0;
   out_6298957188028998798[34] = 0;
   out_6298957188028998798[35] = 0;
   out_6298957188028998798[36] = 0;
   out_6298957188028998798[37] = 0;
   out_6298957188028998798[38] = 0;
   out_6298957188028998798[39] = 1;
   out_6298957188028998798[40] = 0;
   out_6298957188028998798[41] = 0;
   out_6298957188028998798[42] = 1;
   out_6298957188028998798[43] = 0;
   out_6298957188028998798[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6298957188028998798[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6298957188028998798[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6298957188028998798[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6298957188028998798[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6298957188028998798[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6298957188028998798[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6298957188028998798[51] = 0;
   out_6298957188028998798[52] = 0;
   out_6298957188028998798[53] = 0;
   out_6298957188028998798[54] = 0;
   out_6298957188028998798[55] = 0;
   out_6298957188028998798[56] = 0;
   out_6298957188028998798[57] = 0;
   out_6298957188028998798[58] = 0;
   out_6298957188028998798[59] = 0;
   out_6298957188028998798[60] = 0;
   out_6298957188028998798[61] = 0;
   out_6298957188028998798[62] = 1;
   out_6298957188028998798[63] = 0;
   out_6298957188028998798[64] = 0;
   out_6298957188028998798[65] = 1;
}
void h_12(double *state, double *unused, double *out_4925027671785651199) {
   out_4925027671785651199[0] = state[0];
   out_4925027671785651199[1] = state[1];
   out_4925027671785651199[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9211282622277667191) {
   out_9211282622277667191[0] = 1;
   out_9211282622277667191[1] = 0;
   out_9211282622277667191[2] = 0;
   out_9211282622277667191[3] = 0;
   out_9211282622277667191[4] = 0;
   out_9211282622277667191[5] = 0;
   out_9211282622277667191[6] = 0;
   out_9211282622277667191[7] = 0;
   out_9211282622277667191[8] = 0;
   out_9211282622277667191[9] = 0;
   out_9211282622277667191[10] = 0;
   out_9211282622277667191[11] = 0;
   out_9211282622277667191[12] = 0;
   out_9211282622277667191[13] = 0;
   out_9211282622277667191[14] = 0;
   out_9211282622277667191[15] = 0;
   out_9211282622277667191[16] = 0;
   out_9211282622277667191[17] = 0;
   out_9211282622277667191[18] = 0;
   out_9211282622277667191[19] = 0;
   out_9211282622277667191[20] = 0;
   out_9211282622277667191[21] = 0;
   out_9211282622277667191[22] = 0;
   out_9211282622277667191[23] = 1;
   out_9211282622277667191[24] = 0;
   out_9211282622277667191[25] = 0;
   out_9211282622277667191[26] = 0;
   out_9211282622277667191[27] = 0;
   out_9211282622277667191[28] = 0;
   out_9211282622277667191[29] = 0;
   out_9211282622277667191[30] = 0;
   out_9211282622277667191[31] = 0;
   out_9211282622277667191[32] = 0;
   out_9211282622277667191[33] = 0;
   out_9211282622277667191[34] = 0;
   out_9211282622277667191[35] = 0;
   out_9211282622277667191[36] = 0;
   out_9211282622277667191[37] = 0;
   out_9211282622277667191[38] = 0;
   out_9211282622277667191[39] = 0;
   out_9211282622277667191[40] = 0;
   out_9211282622277667191[41] = 0;
   out_9211282622277667191[42] = 0;
   out_9211282622277667191[43] = 0;
   out_9211282622277667191[44] = 0;
   out_9211282622277667191[45] = 0;
   out_9211282622277667191[46] = 1;
   out_9211282622277667191[47] = 0;
   out_9211282622277667191[48] = 0;
   out_9211282622277667191[49] = 0;
   out_9211282622277667191[50] = 0;
   out_9211282622277667191[51] = 0;
   out_9211282622277667191[52] = 0;
   out_9211282622277667191[53] = 0;
   out_9211282622277667191[54] = 0;
   out_9211282622277667191[55] = 0;
   out_9211282622277667191[56] = 0;
   out_9211282622277667191[57] = 0;
   out_9211282622277667191[58] = 0;
   out_9211282622277667191[59] = 0;
   out_9211282622277667191[60] = 0;
   out_9211282622277667191[61] = 0;
   out_9211282622277667191[62] = 0;
   out_9211282622277667191[63] = 0;
   out_9211282622277667191[64] = 0;
   out_9211282622277667191[65] = 0;
}
void h_35(double *state, double *unused, double *out_1853877955385180261) {
   out_1853877955385180261[0] = state[7];
   out_1853877955385180261[1] = state[8];
   out_1853877955385180261[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6465719589952653482) {
   out_6465719589952653482[0] = 0;
   out_6465719589952653482[1] = 0;
   out_6465719589952653482[2] = 0;
   out_6465719589952653482[3] = 0;
   out_6465719589952653482[4] = 0;
   out_6465719589952653482[5] = 0;
   out_6465719589952653482[6] = 0;
   out_6465719589952653482[7] = 1;
   out_6465719589952653482[8] = 0;
   out_6465719589952653482[9] = 0;
   out_6465719589952653482[10] = 0;
   out_6465719589952653482[11] = 0;
   out_6465719589952653482[12] = 0;
   out_6465719589952653482[13] = 0;
   out_6465719589952653482[14] = 0;
   out_6465719589952653482[15] = 0;
   out_6465719589952653482[16] = 0;
   out_6465719589952653482[17] = 0;
   out_6465719589952653482[18] = 0;
   out_6465719589952653482[19] = 0;
   out_6465719589952653482[20] = 0;
   out_6465719589952653482[21] = 0;
   out_6465719589952653482[22] = 0;
   out_6465719589952653482[23] = 0;
   out_6465719589952653482[24] = 0;
   out_6465719589952653482[25] = 0;
   out_6465719589952653482[26] = 0;
   out_6465719589952653482[27] = 0;
   out_6465719589952653482[28] = 0;
   out_6465719589952653482[29] = 0;
   out_6465719589952653482[30] = 1;
   out_6465719589952653482[31] = 0;
   out_6465719589952653482[32] = 0;
   out_6465719589952653482[33] = 0;
   out_6465719589952653482[34] = 0;
   out_6465719589952653482[35] = 0;
   out_6465719589952653482[36] = 0;
   out_6465719589952653482[37] = 0;
   out_6465719589952653482[38] = 0;
   out_6465719589952653482[39] = 0;
   out_6465719589952653482[40] = 0;
   out_6465719589952653482[41] = 0;
   out_6465719589952653482[42] = 0;
   out_6465719589952653482[43] = 0;
   out_6465719589952653482[44] = 0;
   out_6465719589952653482[45] = 0;
   out_6465719589952653482[46] = 0;
   out_6465719589952653482[47] = 0;
   out_6465719589952653482[48] = 0;
   out_6465719589952653482[49] = 0;
   out_6465719589952653482[50] = 0;
   out_6465719589952653482[51] = 0;
   out_6465719589952653482[52] = 0;
   out_6465719589952653482[53] = 1;
   out_6465719589952653482[54] = 0;
   out_6465719589952653482[55] = 0;
   out_6465719589952653482[56] = 0;
   out_6465719589952653482[57] = 0;
   out_6465719589952653482[58] = 0;
   out_6465719589952653482[59] = 0;
   out_6465719589952653482[60] = 0;
   out_6465719589952653482[61] = 0;
   out_6465719589952653482[62] = 0;
   out_6465719589952653482[63] = 0;
   out_6465719589952653482[64] = 0;
   out_6465719589952653482[65] = 0;
}
void h_32(double *state, double *unused, double *out_8903766325307788735) {
   out_8903766325307788735[0] = state[3];
   out_8903766325307788735[1] = state[4];
   out_8903766325307788735[2] = state[5];
   out_8903766325307788735[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5066159980062781778) {
   out_5066159980062781778[0] = 0;
   out_5066159980062781778[1] = 0;
   out_5066159980062781778[2] = 0;
   out_5066159980062781778[3] = 1;
   out_5066159980062781778[4] = 0;
   out_5066159980062781778[5] = 0;
   out_5066159980062781778[6] = 0;
   out_5066159980062781778[7] = 0;
   out_5066159980062781778[8] = 0;
   out_5066159980062781778[9] = 0;
   out_5066159980062781778[10] = 0;
   out_5066159980062781778[11] = 0;
   out_5066159980062781778[12] = 0;
   out_5066159980062781778[13] = 0;
   out_5066159980062781778[14] = 0;
   out_5066159980062781778[15] = 0;
   out_5066159980062781778[16] = 0;
   out_5066159980062781778[17] = 0;
   out_5066159980062781778[18] = 0;
   out_5066159980062781778[19] = 0;
   out_5066159980062781778[20] = 0;
   out_5066159980062781778[21] = 0;
   out_5066159980062781778[22] = 0;
   out_5066159980062781778[23] = 0;
   out_5066159980062781778[24] = 0;
   out_5066159980062781778[25] = 0;
   out_5066159980062781778[26] = 1;
   out_5066159980062781778[27] = 0;
   out_5066159980062781778[28] = 0;
   out_5066159980062781778[29] = 0;
   out_5066159980062781778[30] = 0;
   out_5066159980062781778[31] = 0;
   out_5066159980062781778[32] = 0;
   out_5066159980062781778[33] = 0;
   out_5066159980062781778[34] = 0;
   out_5066159980062781778[35] = 0;
   out_5066159980062781778[36] = 0;
   out_5066159980062781778[37] = 0;
   out_5066159980062781778[38] = 0;
   out_5066159980062781778[39] = 0;
   out_5066159980062781778[40] = 0;
   out_5066159980062781778[41] = 0;
   out_5066159980062781778[42] = 0;
   out_5066159980062781778[43] = 0;
   out_5066159980062781778[44] = 0;
   out_5066159980062781778[45] = 0;
   out_5066159980062781778[46] = 0;
   out_5066159980062781778[47] = 0;
   out_5066159980062781778[48] = 0;
   out_5066159980062781778[49] = 1;
   out_5066159980062781778[50] = 0;
   out_5066159980062781778[51] = 0;
   out_5066159980062781778[52] = 0;
   out_5066159980062781778[53] = 0;
   out_5066159980062781778[54] = 0;
   out_5066159980062781778[55] = 0;
   out_5066159980062781778[56] = 0;
   out_5066159980062781778[57] = 0;
   out_5066159980062781778[58] = 0;
   out_5066159980062781778[59] = 0;
   out_5066159980062781778[60] = 0;
   out_5066159980062781778[61] = 0;
   out_5066159980062781778[62] = 0;
   out_5066159980062781778[63] = 0;
   out_5066159980062781778[64] = 0;
   out_5066159980062781778[65] = 0;
   out_5066159980062781778[66] = 0;
   out_5066159980062781778[67] = 0;
   out_5066159980062781778[68] = 0;
   out_5066159980062781778[69] = 0;
   out_5066159980062781778[70] = 0;
   out_5066159980062781778[71] = 0;
   out_5066159980062781778[72] = 1;
   out_5066159980062781778[73] = 0;
   out_5066159980062781778[74] = 0;
   out_5066159980062781778[75] = 0;
   out_5066159980062781778[76] = 0;
   out_5066159980062781778[77] = 0;
   out_5066159980062781778[78] = 0;
   out_5066159980062781778[79] = 0;
   out_5066159980062781778[80] = 0;
   out_5066159980062781778[81] = 0;
   out_5066159980062781778[82] = 0;
   out_5066159980062781778[83] = 0;
   out_5066159980062781778[84] = 0;
   out_5066159980062781778[85] = 0;
   out_5066159980062781778[86] = 0;
   out_5066159980062781778[87] = 0;
}
void h_13(double *state, double *unused, double *out_5672385168945637700) {
   out_5672385168945637700[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5672385168945637700[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5672385168945637700[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5540611197974743508) {
   out_5540611197974743508[0] = 0;
   out_5540611197974743508[1] = 0;
   out_5540611197974743508[2] = 0;
   out_5540611197974743508[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5540611197974743508[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5540611197974743508[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5540611197974743508[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5540611197974743508[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5540611197974743508[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5540611197974743508[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5540611197974743508[10] = 0;
   out_5540611197974743508[11] = 0;
   out_5540611197974743508[12] = 0;
   out_5540611197974743508[13] = 0;
   out_5540611197974743508[14] = 0;
   out_5540611197974743508[15] = 0;
   out_5540611197974743508[16] = 0;
   out_5540611197974743508[17] = 0;
   out_5540611197974743508[18] = 0;
   out_5540611197974743508[19] = 0;
   out_5540611197974743508[20] = 0;
   out_5540611197974743508[21] = 0;
   out_5540611197974743508[22] = 0;
   out_5540611197974743508[23] = 0;
   out_5540611197974743508[24] = 0;
   out_5540611197974743508[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5540611197974743508[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5540611197974743508[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5540611197974743508[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5540611197974743508[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5540611197974743508[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5540611197974743508[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5540611197974743508[32] = 0;
   out_5540611197974743508[33] = 0;
   out_5540611197974743508[34] = 0;
   out_5540611197974743508[35] = 0;
   out_5540611197974743508[36] = 0;
   out_5540611197974743508[37] = 0;
   out_5540611197974743508[38] = 0;
   out_5540611197974743508[39] = 0;
   out_5540611197974743508[40] = 0;
   out_5540611197974743508[41] = 0;
   out_5540611197974743508[42] = 0;
   out_5540611197974743508[43] = 0;
   out_5540611197974743508[44] = 0;
   out_5540611197974743508[45] = 0;
   out_5540611197974743508[46] = 0;
   out_5540611197974743508[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5540611197974743508[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5540611197974743508[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5540611197974743508[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5540611197974743508[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5540611197974743508[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5540611197974743508[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5540611197974743508[54] = 0;
   out_5540611197974743508[55] = 0;
   out_5540611197974743508[56] = 0;
   out_5540611197974743508[57] = 0;
   out_5540611197974743508[58] = 0;
   out_5540611197974743508[59] = 0;
   out_5540611197974743508[60] = 0;
   out_5540611197974743508[61] = 0;
   out_5540611197974743508[62] = 0;
   out_5540611197974743508[63] = 0;
   out_5540611197974743508[64] = 0;
   out_5540611197974743508[65] = 0;
}
void h_14(double *state, double *unused, double *out_558098318269232442) {
   out_558098318269232442[0] = state[10];
   out_558098318269232442[1] = state[11];
   out_558098318269232442[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8855552073013881403) {
   out_8855552073013881403[0] = 0;
   out_8855552073013881403[1] = 0;
   out_8855552073013881403[2] = 0;
   out_8855552073013881403[3] = 0;
   out_8855552073013881403[4] = 0;
   out_8855552073013881403[5] = 0;
   out_8855552073013881403[6] = 0;
   out_8855552073013881403[7] = 0;
   out_8855552073013881403[8] = 0;
   out_8855552073013881403[9] = 0;
   out_8855552073013881403[10] = 1;
   out_8855552073013881403[11] = 0;
   out_8855552073013881403[12] = 0;
   out_8855552073013881403[13] = 0;
   out_8855552073013881403[14] = 0;
   out_8855552073013881403[15] = 0;
   out_8855552073013881403[16] = 0;
   out_8855552073013881403[17] = 0;
   out_8855552073013881403[18] = 0;
   out_8855552073013881403[19] = 0;
   out_8855552073013881403[20] = 0;
   out_8855552073013881403[21] = 0;
   out_8855552073013881403[22] = 0;
   out_8855552073013881403[23] = 0;
   out_8855552073013881403[24] = 0;
   out_8855552073013881403[25] = 0;
   out_8855552073013881403[26] = 0;
   out_8855552073013881403[27] = 0;
   out_8855552073013881403[28] = 0;
   out_8855552073013881403[29] = 0;
   out_8855552073013881403[30] = 0;
   out_8855552073013881403[31] = 0;
   out_8855552073013881403[32] = 0;
   out_8855552073013881403[33] = 1;
   out_8855552073013881403[34] = 0;
   out_8855552073013881403[35] = 0;
   out_8855552073013881403[36] = 0;
   out_8855552073013881403[37] = 0;
   out_8855552073013881403[38] = 0;
   out_8855552073013881403[39] = 0;
   out_8855552073013881403[40] = 0;
   out_8855552073013881403[41] = 0;
   out_8855552073013881403[42] = 0;
   out_8855552073013881403[43] = 0;
   out_8855552073013881403[44] = 0;
   out_8855552073013881403[45] = 0;
   out_8855552073013881403[46] = 0;
   out_8855552073013881403[47] = 0;
   out_8855552073013881403[48] = 0;
   out_8855552073013881403[49] = 0;
   out_8855552073013881403[50] = 0;
   out_8855552073013881403[51] = 0;
   out_8855552073013881403[52] = 0;
   out_8855552073013881403[53] = 0;
   out_8855552073013881403[54] = 0;
   out_8855552073013881403[55] = 0;
   out_8855552073013881403[56] = 1;
   out_8855552073013881403[57] = 0;
   out_8855552073013881403[58] = 0;
   out_8855552073013881403[59] = 0;
   out_8855552073013881403[60] = 0;
   out_8855552073013881403[61] = 0;
   out_8855552073013881403[62] = 0;
   out_8855552073013881403[63] = 0;
   out_8855552073013881403[64] = 0;
   out_8855552073013881403[65] = 0;
}
void h_33(double *state, double *unused, double *out_3830038481069695916) {
   out_3830038481069695916[0] = state[16];
   out_3830038481069695916[1] = state[17];
   out_3830038481069695916[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3315162585313795878) {
   out_3315162585313795878[0] = 0;
   out_3315162585313795878[1] = 0;
   out_3315162585313795878[2] = 0;
   out_3315162585313795878[3] = 0;
   out_3315162585313795878[4] = 0;
   out_3315162585313795878[5] = 0;
   out_3315162585313795878[6] = 0;
   out_3315162585313795878[7] = 0;
   out_3315162585313795878[8] = 0;
   out_3315162585313795878[9] = 0;
   out_3315162585313795878[10] = 0;
   out_3315162585313795878[11] = 0;
   out_3315162585313795878[12] = 0;
   out_3315162585313795878[13] = 0;
   out_3315162585313795878[14] = 0;
   out_3315162585313795878[15] = 0;
   out_3315162585313795878[16] = 1;
   out_3315162585313795878[17] = 0;
   out_3315162585313795878[18] = 0;
   out_3315162585313795878[19] = 0;
   out_3315162585313795878[20] = 0;
   out_3315162585313795878[21] = 0;
   out_3315162585313795878[22] = 0;
   out_3315162585313795878[23] = 0;
   out_3315162585313795878[24] = 0;
   out_3315162585313795878[25] = 0;
   out_3315162585313795878[26] = 0;
   out_3315162585313795878[27] = 0;
   out_3315162585313795878[28] = 0;
   out_3315162585313795878[29] = 0;
   out_3315162585313795878[30] = 0;
   out_3315162585313795878[31] = 0;
   out_3315162585313795878[32] = 0;
   out_3315162585313795878[33] = 0;
   out_3315162585313795878[34] = 0;
   out_3315162585313795878[35] = 0;
   out_3315162585313795878[36] = 0;
   out_3315162585313795878[37] = 0;
   out_3315162585313795878[38] = 0;
   out_3315162585313795878[39] = 1;
   out_3315162585313795878[40] = 0;
   out_3315162585313795878[41] = 0;
   out_3315162585313795878[42] = 0;
   out_3315162585313795878[43] = 0;
   out_3315162585313795878[44] = 0;
   out_3315162585313795878[45] = 0;
   out_3315162585313795878[46] = 0;
   out_3315162585313795878[47] = 0;
   out_3315162585313795878[48] = 0;
   out_3315162585313795878[49] = 0;
   out_3315162585313795878[50] = 0;
   out_3315162585313795878[51] = 0;
   out_3315162585313795878[52] = 0;
   out_3315162585313795878[53] = 0;
   out_3315162585313795878[54] = 0;
   out_3315162585313795878[55] = 0;
   out_3315162585313795878[56] = 0;
   out_3315162585313795878[57] = 0;
   out_3315162585313795878[58] = 0;
   out_3315162585313795878[59] = 0;
   out_3315162585313795878[60] = 0;
   out_3315162585313795878[61] = 0;
   out_3315162585313795878[62] = 1;
   out_3315162585313795878[63] = 0;
   out_3315162585313795878[64] = 0;
   out_3315162585313795878[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5765856962138507314) {
  H(in_vec, out_5765856962138507314);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8128801794583824831) {
  err_fun(nom_x, delta_x, out_8128801794583824831);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8392023562780547307) {
  inv_err_fun(nom_x, true_x, out_8392023562780547307);
}
void live_H_mod_fun(double *state, double *out_5878743350081727116) {
  H_mod_fun(state, out_5878743350081727116);
}
void live_f_fun(double *state, double dt, double *out_4858778294711581647) {
  f_fun(state,  dt, out_4858778294711581647);
}
void live_F_fun(double *state, double dt, double *out_4437991197939110159) {
  F_fun(state,  dt, out_4437991197939110159);
}
void live_h_4(double *state, double *unused, double *out_1526533485984711682) {
  h_4(state, unused, out_1526533485984711682);
}
void live_H_4(double *state, double *unused, double *out_8614362426384290758) {
  H_4(state, unused, out_8614362426384290758);
}
void live_h_9(double *state, double *unused, double *out_558098318269232442) {
  h_9(state, unused, out_558098318269232442);
}
void live_H_9(double *state, double *unused, double *out_8855552073013881403) {
  H_9(state, unused, out_8855552073013881403);
}
void live_h_10(double *state, double *unused, double *out_640959415076880377) {
  h_10(state, unused, out_640959415076880377);
}
void live_H_10(double *state, double *unused, double *out_6298957188028998798) {
  H_10(state, unused, out_6298957188028998798);
}
void live_h_12(double *state, double *unused, double *out_4925027671785651199) {
  h_12(state, unused, out_4925027671785651199);
}
void live_H_12(double *state, double *unused, double *out_9211282622277667191) {
  H_12(state, unused, out_9211282622277667191);
}
void live_h_35(double *state, double *unused, double *out_1853877955385180261) {
  h_35(state, unused, out_1853877955385180261);
}
void live_H_35(double *state, double *unused, double *out_6465719589952653482) {
  H_35(state, unused, out_6465719589952653482);
}
void live_h_32(double *state, double *unused, double *out_8903766325307788735) {
  h_32(state, unused, out_8903766325307788735);
}
void live_H_32(double *state, double *unused, double *out_5066159980062781778) {
  H_32(state, unused, out_5066159980062781778);
}
void live_h_13(double *state, double *unused, double *out_5672385168945637700) {
  h_13(state, unused, out_5672385168945637700);
}
void live_H_13(double *state, double *unused, double *out_5540611197974743508) {
  H_13(state, unused, out_5540611197974743508);
}
void live_h_14(double *state, double *unused, double *out_558098318269232442) {
  h_14(state, unused, out_558098318269232442);
}
void live_H_14(double *state, double *unused, double *out_8855552073013881403) {
  H_14(state, unused, out_8855552073013881403);
}
void live_h_33(double *state, double *unused, double *out_3830038481069695916) {
  h_33(state, unused, out_3830038481069695916);
}
void live_H_33(double *state, double *unused, double *out_3315162585313795878) {
  H_33(state, unused, out_3315162585313795878);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
