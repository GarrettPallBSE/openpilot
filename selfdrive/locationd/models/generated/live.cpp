#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2881037365619628279) {
   out_2881037365619628279[0] = 0;
   out_2881037365619628279[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2881037365619628279[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2881037365619628279[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2881037365619628279[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2881037365619628279[5] = -sin(in_vec[1]);
   out_2881037365619628279[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2881037365619628279[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2881037365619628279[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2881037365619628279[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2881037365619628279[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2881037365619628279[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2881037365619628279[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2881037365619628279[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2881037365619628279[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2881037365619628279[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2881037365619628279[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2881037365619628279[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9185585876490325269) {
   out_9185585876490325269[0] = delta_x[0] + nom_x[0];
   out_9185585876490325269[1] = delta_x[1] + nom_x[1];
   out_9185585876490325269[2] = delta_x[2] + nom_x[2];
   out_9185585876490325269[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9185585876490325269[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9185585876490325269[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9185585876490325269[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9185585876490325269[7] = delta_x[6] + nom_x[7];
   out_9185585876490325269[8] = delta_x[7] + nom_x[8];
   out_9185585876490325269[9] = delta_x[8] + nom_x[9];
   out_9185585876490325269[10] = delta_x[9] + nom_x[10];
   out_9185585876490325269[11] = delta_x[10] + nom_x[11];
   out_9185585876490325269[12] = delta_x[11] + nom_x[12];
   out_9185585876490325269[13] = delta_x[12] + nom_x[13];
   out_9185585876490325269[14] = delta_x[13] + nom_x[14];
   out_9185585876490325269[15] = delta_x[14] + nom_x[15];
   out_9185585876490325269[16] = delta_x[15] + nom_x[16];
   out_9185585876490325269[17] = delta_x[16] + nom_x[17];
   out_9185585876490325269[18] = delta_x[17] + nom_x[18];
   out_9185585876490325269[19] = delta_x[18] + nom_x[19];
   out_9185585876490325269[20] = delta_x[19] + nom_x[20];
   out_9185585876490325269[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4515645717665193781) {
   out_4515645717665193781[0] = -nom_x[0] + true_x[0];
   out_4515645717665193781[1] = -nom_x[1] + true_x[1];
   out_4515645717665193781[2] = -nom_x[2] + true_x[2];
   out_4515645717665193781[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4515645717665193781[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4515645717665193781[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4515645717665193781[6] = -nom_x[7] + true_x[7];
   out_4515645717665193781[7] = -nom_x[8] + true_x[8];
   out_4515645717665193781[8] = -nom_x[9] + true_x[9];
   out_4515645717665193781[9] = -nom_x[10] + true_x[10];
   out_4515645717665193781[10] = -nom_x[11] + true_x[11];
   out_4515645717665193781[11] = -nom_x[12] + true_x[12];
   out_4515645717665193781[12] = -nom_x[13] + true_x[13];
   out_4515645717665193781[13] = -nom_x[14] + true_x[14];
   out_4515645717665193781[14] = -nom_x[15] + true_x[15];
   out_4515645717665193781[15] = -nom_x[16] + true_x[16];
   out_4515645717665193781[16] = -nom_x[17] + true_x[17];
   out_4515645717665193781[17] = -nom_x[18] + true_x[18];
   out_4515645717665193781[18] = -nom_x[19] + true_x[19];
   out_4515645717665193781[19] = -nom_x[20] + true_x[20];
   out_4515645717665193781[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7360777769815407851) {
   out_7360777769815407851[0] = 1.0;
   out_7360777769815407851[1] = 0;
   out_7360777769815407851[2] = 0;
   out_7360777769815407851[3] = 0;
   out_7360777769815407851[4] = 0;
   out_7360777769815407851[5] = 0;
   out_7360777769815407851[6] = 0;
   out_7360777769815407851[7] = 0;
   out_7360777769815407851[8] = 0;
   out_7360777769815407851[9] = 0;
   out_7360777769815407851[10] = 0;
   out_7360777769815407851[11] = 0;
   out_7360777769815407851[12] = 0;
   out_7360777769815407851[13] = 0;
   out_7360777769815407851[14] = 0;
   out_7360777769815407851[15] = 0;
   out_7360777769815407851[16] = 0;
   out_7360777769815407851[17] = 0;
   out_7360777769815407851[18] = 0;
   out_7360777769815407851[19] = 0;
   out_7360777769815407851[20] = 0;
   out_7360777769815407851[21] = 0;
   out_7360777769815407851[22] = 1.0;
   out_7360777769815407851[23] = 0;
   out_7360777769815407851[24] = 0;
   out_7360777769815407851[25] = 0;
   out_7360777769815407851[26] = 0;
   out_7360777769815407851[27] = 0;
   out_7360777769815407851[28] = 0;
   out_7360777769815407851[29] = 0;
   out_7360777769815407851[30] = 0;
   out_7360777769815407851[31] = 0;
   out_7360777769815407851[32] = 0;
   out_7360777769815407851[33] = 0;
   out_7360777769815407851[34] = 0;
   out_7360777769815407851[35] = 0;
   out_7360777769815407851[36] = 0;
   out_7360777769815407851[37] = 0;
   out_7360777769815407851[38] = 0;
   out_7360777769815407851[39] = 0;
   out_7360777769815407851[40] = 0;
   out_7360777769815407851[41] = 0;
   out_7360777769815407851[42] = 0;
   out_7360777769815407851[43] = 0;
   out_7360777769815407851[44] = 1.0;
   out_7360777769815407851[45] = 0;
   out_7360777769815407851[46] = 0;
   out_7360777769815407851[47] = 0;
   out_7360777769815407851[48] = 0;
   out_7360777769815407851[49] = 0;
   out_7360777769815407851[50] = 0;
   out_7360777769815407851[51] = 0;
   out_7360777769815407851[52] = 0;
   out_7360777769815407851[53] = 0;
   out_7360777769815407851[54] = 0;
   out_7360777769815407851[55] = 0;
   out_7360777769815407851[56] = 0;
   out_7360777769815407851[57] = 0;
   out_7360777769815407851[58] = 0;
   out_7360777769815407851[59] = 0;
   out_7360777769815407851[60] = 0;
   out_7360777769815407851[61] = 0;
   out_7360777769815407851[62] = 0;
   out_7360777769815407851[63] = 0;
   out_7360777769815407851[64] = 0;
   out_7360777769815407851[65] = 0;
   out_7360777769815407851[66] = -0.5*state[4];
   out_7360777769815407851[67] = -0.5*state[5];
   out_7360777769815407851[68] = -0.5*state[6];
   out_7360777769815407851[69] = 0;
   out_7360777769815407851[70] = 0;
   out_7360777769815407851[71] = 0;
   out_7360777769815407851[72] = 0;
   out_7360777769815407851[73] = 0;
   out_7360777769815407851[74] = 0;
   out_7360777769815407851[75] = 0;
   out_7360777769815407851[76] = 0;
   out_7360777769815407851[77] = 0;
   out_7360777769815407851[78] = 0;
   out_7360777769815407851[79] = 0;
   out_7360777769815407851[80] = 0;
   out_7360777769815407851[81] = 0;
   out_7360777769815407851[82] = 0;
   out_7360777769815407851[83] = 0;
   out_7360777769815407851[84] = 0;
   out_7360777769815407851[85] = 0;
   out_7360777769815407851[86] = 0;
   out_7360777769815407851[87] = 0.5*state[3];
   out_7360777769815407851[88] = 0.5*state[6];
   out_7360777769815407851[89] = -0.5*state[5];
   out_7360777769815407851[90] = 0;
   out_7360777769815407851[91] = 0;
   out_7360777769815407851[92] = 0;
   out_7360777769815407851[93] = 0;
   out_7360777769815407851[94] = 0;
   out_7360777769815407851[95] = 0;
   out_7360777769815407851[96] = 0;
   out_7360777769815407851[97] = 0;
   out_7360777769815407851[98] = 0;
   out_7360777769815407851[99] = 0;
   out_7360777769815407851[100] = 0;
   out_7360777769815407851[101] = 0;
   out_7360777769815407851[102] = 0;
   out_7360777769815407851[103] = 0;
   out_7360777769815407851[104] = 0;
   out_7360777769815407851[105] = 0;
   out_7360777769815407851[106] = 0;
   out_7360777769815407851[107] = 0;
   out_7360777769815407851[108] = -0.5*state[6];
   out_7360777769815407851[109] = 0.5*state[3];
   out_7360777769815407851[110] = 0.5*state[4];
   out_7360777769815407851[111] = 0;
   out_7360777769815407851[112] = 0;
   out_7360777769815407851[113] = 0;
   out_7360777769815407851[114] = 0;
   out_7360777769815407851[115] = 0;
   out_7360777769815407851[116] = 0;
   out_7360777769815407851[117] = 0;
   out_7360777769815407851[118] = 0;
   out_7360777769815407851[119] = 0;
   out_7360777769815407851[120] = 0;
   out_7360777769815407851[121] = 0;
   out_7360777769815407851[122] = 0;
   out_7360777769815407851[123] = 0;
   out_7360777769815407851[124] = 0;
   out_7360777769815407851[125] = 0;
   out_7360777769815407851[126] = 0;
   out_7360777769815407851[127] = 0;
   out_7360777769815407851[128] = 0;
   out_7360777769815407851[129] = 0.5*state[5];
   out_7360777769815407851[130] = -0.5*state[4];
   out_7360777769815407851[131] = 0.5*state[3];
   out_7360777769815407851[132] = 0;
   out_7360777769815407851[133] = 0;
   out_7360777769815407851[134] = 0;
   out_7360777769815407851[135] = 0;
   out_7360777769815407851[136] = 0;
   out_7360777769815407851[137] = 0;
   out_7360777769815407851[138] = 0;
   out_7360777769815407851[139] = 0;
   out_7360777769815407851[140] = 0;
   out_7360777769815407851[141] = 0;
   out_7360777769815407851[142] = 0;
   out_7360777769815407851[143] = 0;
   out_7360777769815407851[144] = 0;
   out_7360777769815407851[145] = 0;
   out_7360777769815407851[146] = 0;
   out_7360777769815407851[147] = 0;
   out_7360777769815407851[148] = 0;
   out_7360777769815407851[149] = 0;
   out_7360777769815407851[150] = 0;
   out_7360777769815407851[151] = 0;
   out_7360777769815407851[152] = 0;
   out_7360777769815407851[153] = 1.0;
   out_7360777769815407851[154] = 0;
   out_7360777769815407851[155] = 0;
   out_7360777769815407851[156] = 0;
   out_7360777769815407851[157] = 0;
   out_7360777769815407851[158] = 0;
   out_7360777769815407851[159] = 0;
   out_7360777769815407851[160] = 0;
   out_7360777769815407851[161] = 0;
   out_7360777769815407851[162] = 0;
   out_7360777769815407851[163] = 0;
   out_7360777769815407851[164] = 0;
   out_7360777769815407851[165] = 0;
   out_7360777769815407851[166] = 0;
   out_7360777769815407851[167] = 0;
   out_7360777769815407851[168] = 0;
   out_7360777769815407851[169] = 0;
   out_7360777769815407851[170] = 0;
   out_7360777769815407851[171] = 0;
   out_7360777769815407851[172] = 0;
   out_7360777769815407851[173] = 0;
   out_7360777769815407851[174] = 0;
   out_7360777769815407851[175] = 1.0;
   out_7360777769815407851[176] = 0;
   out_7360777769815407851[177] = 0;
   out_7360777769815407851[178] = 0;
   out_7360777769815407851[179] = 0;
   out_7360777769815407851[180] = 0;
   out_7360777769815407851[181] = 0;
   out_7360777769815407851[182] = 0;
   out_7360777769815407851[183] = 0;
   out_7360777769815407851[184] = 0;
   out_7360777769815407851[185] = 0;
   out_7360777769815407851[186] = 0;
   out_7360777769815407851[187] = 0;
   out_7360777769815407851[188] = 0;
   out_7360777769815407851[189] = 0;
   out_7360777769815407851[190] = 0;
   out_7360777769815407851[191] = 0;
   out_7360777769815407851[192] = 0;
   out_7360777769815407851[193] = 0;
   out_7360777769815407851[194] = 0;
   out_7360777769815407851[195] = 0;
   out_7360777769815407851[196] = 0;
   out_7360777769815407851[197] = 1.0;
   out_7360777769815407851[198] = 0;
   out_7360777769815407851[199] = 0;
   out_7360777769815407851[200] = 0;
   out_7360777769815407851[201] = 0;
   out_7360777769815407851[202] = 0;
   out_7360777769815407851[203] = 0;
   out_7360777769815407851[204] = 0;
   out_7360777769815407851[205] = 0;
   out_7360777769815407851[206] = 0;
   out_7360777769815407851[207] = 0;
   out_7360777769815407851[208] = 0;
   out_7360777769815407851[209] = 0;
   out_7360777769815407851[210] = 0;
   out_7360777769815407851[211] = 0;
   out_7360777769815407851[212] = 0;
   out_7360777769815407851[213] = 0;
   out_7360777769815407851[214] = 0;
   out_7360777769815407851[215] = 0;
   out_7360777769815407851[216] = 0;
   out_7360777769815407851[217] = 0;
   out_7360777769815407851[218] = 0;
   out_7360777769815407851[219] = 1.0;
   out_7360777769815407851[220] = 0;
   out_7360777769815407851[221] = 0;
   out_7360777769815407851[222] = 0;
   out_7360777769815407851[223] = 0;
   out_7360777769815407851[224] = 0;
   out_7360777769815407851[225] = 0;
   out_7360777769815407851[226] = 0;
   out_7360777769815407851[227] = 0;
   out_7360777769815407851[228] = 0;
   out_7360777769815407851[229] = 0;
   out_7360777769815407851[230] = 0;
   out_7360777769815407851[231] = 0;
   out_7360777769815407851[232] = 0;
   out_7360777769815407851[233] = 0;
   out_7360777769815407851[234] = 0;
   out_7360777769815407851[235] = 0;
   out_7360777769815407851[236] = 0;
   out_7360777769815407851[237] = 0;
   out_7360777769815407851[238] = 0;
   out_7360777769815407851[239] = 0;
   out_7360777769815407851[240] = 0;
   out_7360777769815407851[241] = 1.0;
   out_7360777769815407851[242] = 0;
   out_7360777769815407851[243] = 0;
   out_7360777769815407851[244] = 0;
   out_7360777769815407851[245] = 0;
   out_7360777769815407851[246] = 0;
   out_7360777769815407851[247] = 0;
   out_7360777769815407851[248] = 0;
   out_7360777769815407851[249] = 0;
   out_7360777769815407851[250] = 0;
   out_7360777769815407851[251] = 0;
   out_7360777769815407851[252] = 0;
   out_7360777769815407851[253] = 0;
   out_7360777769815407851[254] = 0;
   out_7360777769815407851[255] = 0;
   out_7360777769815407851[256] = 0;
   out_7360777769815407851[257] = 0;
   out_7360777769815407851[258] = 0;
   out_7360777769815407851[259] = 0;
   out_7360777769815407851[260] = 0;
   out_7360777769815407851[261] = 0;
   out_7360777769815407851[262] = 0;
   out_7360777769815407851[263] = 1.0;
   out_7360777769815407851[264] = 0;
   out_7360777769815407851[265] = 0;
   out_7360777769815407851[266] = 0;
   out_7360777769815407851[267] = 0;
   out_7360777769815407851[268] = 0;
   out_7360777769815407851[269] = 0;
   out_7360777769815407851[270] = 0;
   out_7360777769815407851[271] = 0;
   out_7360777769815407851[272] = 0;
   out_7360777769815407851[273] = 0;
   out_7360777769815407851[274] = 0;
   out_7360777769815407851[275] = 0;
   out_7360777769815407851[276] = 0;
   out_7360777769815407851[277] = 0;
   out_7360777769815407851[278] = 0;
   out_7360777769815407851[279] = 0;
   out_7360777769815407851[280] = 0;
   out_7360777769815407851[281] = 0;
   out_7360777769815407851[282] = 0;
   out_7360777769815407851[283] = 0;
   out_7360777769815407851[284] = 0;
   out_7360777769815407851[285] = 1.0;
   out_7360777769815407851[286] = 0;
   out_7360777769815407851[287] = 0;
   out_7360777769815407851[288] = 0;
   out_7360777769815407851[289] = 0;
   out_7360777769815407851[290] = 0;
   out_7360777769815407851[291] = 0;
   out_7360777769815407851[292] = 0;
   out_7360777769815407851[293] = 0;
   out_7360777769815407851[294] = 0;
   out_7360777769815407851[295] = 0;
   out_7360777769815407851[296] = 0;
   out_7360777769815407851[297] = 0;
   out_7360777769815407851[298] = 0;
   out_7360777769815407851[299] = 0;
   out_7360777769815407851[300] = 0;
   out_7360777769815407851[301] = 0;
   out_7360777769815407851[302] = 0;
   out_7360777769815407851[303] = 0;
   out_7360777769815407851[304] = 0;
   out_7360777769815407851[305] = 0;
   out_7360777769815407851[306] = 0;
   out_7360777769815407851[307] = 1.0;
   out_7360777769815407851[308] = 0;
   out_7360777769815407851[309] = 0;
   out_7360777769815407851[310] = 0;
   out_7360777769815407851[311] = 0;
   out_7360777769815407851[312] = 0;
   out_7360777769815407851[313] = 0;
   out_7360777769815407851[314] = 0;
   out_7360777769815407851[315] = 0;
   out_7360777769815407851[316] = 0;
   out_7360777769815407851[317] = 0;
   out_7360777769815407851[318] = 0;
   out_7360777769815407851[319] = 0;
   out_7360777769815407851[320] = 0;
   out_7360777769815407851[321] = 0;
   out_7360777769815407851[322] = 0;
   out_7360777769815407851[323] = 0;
   out_7360777769815407851[324] = 0;
   out_7360777769815407851[325] = 0;
   out_7360777769815407851[326] = 0;
   out_7360777769815407851[327] = 0;
   out_7360777769815407851[328] = 0;
   out_7360777769815407851[329] = 1.0;
   out_7360777769815407851[330] = 0;
   out_7360777769815407851[331] = 0;
   out_7360777769815407851[332] = 0;
   out_7360777769815407851[333] = 0;
   out_7360777769815407851[334] = 0;
   out_7360777769815407851[335] = 0;
   out_7360777769815407851[336] = 0;
   out_7360777769815407851[337] = 0;
   out_7360777769815407851[338] = 0;
   out_7360777769815407851[339] = 0;
   out_7360777769815407851[340] = 0;
   out_7360777769815407851[341] = 0;
   out_7360777769815407851[342] = 0;
   out_7360777769815407851[343] = 0;
   out_7360777769815407851[344] = 0;
   out_7360777769815407851[345] = 0;
   out_7360777769815407851[346] = 0;
   out_7360777769815407851[347] = 0;
   out_7360777769815407851[348] = 0;
   out_7360777769815407851[349] = 0;
   out_7360777769815407851[350] = 0;
   out_7360777769815407851[351] = 1.0;
   out_7360777769815407851[352] = 0;
   out_7360777769815407851[353] = 0;
   out_7360777769815407851[354] = 0;
   out_7360777769815407851[355] = 0;
   out_7360777769815407851[356] = 0;
   out_7360777769815407851[357] = 0;
   out_7360777769815407851[358] = 0;
   out_7360777769815407851[359] = 0;
   out_7360777769815407851[360] = 0;
   out_7360777769815407851[361] = 0;
   out_7360777769815407851[362] = 0;
   out_7360777769815407851[363] = 0;
   out_7360777769815407851[364] = 0;
   out_7360777769815407851[365] = 0;
   out_7360777769815407851[366] = 0;
   out_7360777769815407851[367] = 0;
   out_7360777769815407851[368] = 0;
   out_7360777769815407851[369] = 0;
   out_7360777769815407851[370] = 0;
   out_7360777769815407851[371] = 0;
   out_7360777769815407851[372] = 0;
   out_7360777769815407851[373] = 1.0;
   out_7360777769815407851[374] = 0;
   out_7360777769815407851[375] = 0;
   out_7360777769815407851[376] = 0;
   out_7360777769815407851[377] = 0;
   out_7360777769815407851[378] = 0;
   out_7360777769815407851[379] = 0;
   out_7360777769815407851[380] = 0;
   out_7360777769815407851[381] = 0;
   out_7360777769815407851[382] = 0;
   out_7360777769815407851[383] = 0;
   out_7360777769815407851[384] = 0;
   out_7360777769815407851[385] = 0;
   out_7360777769815407851[386] = 0;
   out_7360777769815407851[387] = 0;
   out_7360777769815407851[388] = 0;
   out_7360777769815407851[389] = 0;
   out_7360777769815407851[390] = 0;
   out_7360777769815407851[391] = 0;
   out_7360777769815407851[392] = 0;
   out_7360777769815407851[393] = 0;
   out_7360777769815407851[394] = 0;
   out_7360777769815407851[395] = 1.0;
   out_7360777769815407851[396] = 0;
   out_7360777769815407851[397] = 0;
   out_7360777769815407851[398] = 0;
   out_7360777769815407851[399] = 0;
   out_7360777769815407851[400] = 0;
   out_7360777769815407851[401] = 0;
   out_7360777769815407851[402] = 0;
   out_7360777769815407851[403] = 0;
   out_7360777769815407851[404] = 0;
   out_7360777769815407851[405] = 0;
   out_7360777769815407851[406] = 0;
   out_7360777769815407851[407] = 0;
   out_7360777769815407851[408] = 0;
   out_7360777769815407851[409] = 0;
   out_7360777769815407851[410] = 0;
   out_7360777769815407851[411] = 0;
   out_7360777769815407851[412] = 0;
   out_7360777769815407851[413] = 0;
   out_7360777769815407851[414] = 0;
   out_7360777769815407851[415] = 0;
   out_7360777769815407851[416] = 0;
   out_7360777769815407851[417] = 1.0;
   out_7360777769815407851[418] = 0;
   out_7360777769815407851[419] = 0;
   out_7360777769815407851[420] = 0;
   out_7360777769815407851[421] = 0;
   out_7360777769815407851[422] = 0;
   out_7360777769815407851[423] = 0;
   out_7360777769815407851[424] = 0;
   out_7360777769815407851[425] = 0;
   out_7360777769815407851[426] = 0;
   out_7360777769815407851[427] = 0;
   out_7360777769815407851[428] = 0;
   out_7360777769815407851[429] = 0;
   out_7360777769815407851[430] = 0;
   out_7360777769815407851[431] = 0;
   out_7360777769815407851[432] = 0;
   out_7360777769815407851[433] = 0;
   out_7360777769815407851[434] = 0;
   out_7360777769815407851[435] = 0;
   out_7360777769815407851[436] = 0;
   out_7360777769815407851[437] = 0;
   out_7360777769815407851[438] = 0;
   out_7360777769815407851[439] = 1.0;
   out_7360777769815407851[440] = 0;
   out_7360777769815407851[441] = 0;
   out_7360777769815407851[442] = 0;
   out_7360777769815407851[443] = 0;
   out_7360777769815407851[444] = 0;
   out_7360777769815407851[445] = 0;
   out_7360777769815407851[446] = 0;
   out_7360777769815407851[447] = 0;
   out_7360777769815407851[448] = 0;
   out_7360777769815407851[449] = 0;
   out_7360777769815407851[450] = 0;
   out_7360777769815407851[451] = 0;
   out_7360777769815407851[452] = 0;
   out_7360777769815407851[453] = 0;
   out_7360777769815407851[454] = 0;
   out_7360777769815407851[455] = 0;
   out_7360777769815407851[456] = 0;
   out_7360777769815407851[457] = 0;
   out_7360777769815407851[458] = 0;
   out_7360777769815407851[459] = 0;
   out_7360777769815407851[460] = 0;
   out_7360777769815407851[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_707519906875901283) {
   out_707519906875901283[0] = dt*state[7] + state[0];
   out_707519906875901283[1] = dt*state[8] + state[1];
   out_707519906875901283[2] = dt*state[9] + state[2];
   out_707519906875901283[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_707519906875901283[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_707519906875901283[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_707519906875901283[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_707519906875901283[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_707519906875901283[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_707519906875901283[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_707519906875901283[10] = state[10];
   out_707519906875901283[11] = state[11];
   out_707519906875901283[12] = state[12];
   out_707519906875901283[13] = state[13];
   out_707519906875901283[14] = state[14];
   out_707519906875901283[15] = state[15];
   out_707519906875901283[16] = state[16];
   out_707519906875901283[17] = state[17];
   out_707519906875901283[18] = state[18];
   out_707519906875901283[19] = state[19];
   out_707519906875901283[20] = state[20];
   out_707519906875901283[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7537946981436927173) {
   out_7537946981436927173[0] = 1;
   out_7537946981436927173[1] = 0;
   out_7537946981436927173[2] = 0;
   out_7537946981436927173[3] = 0;
   out_7537946981436927173[4] = 0;
   out_7537946981436927173[5] = 0;
   out_7537946981436927173[6] = dt;
   out_7537946981436927173[7] = 0;
   out_7537946981436927173[8] = 0;
   out_7537946981436927173[9] = 0;
   out_7537946981436927173[10] = 0;
   out_7537946981436927173[11] = 0;
   out_7537946981436927173[12] = 0;
   out_7537946981436927173[13] = 0;
   out_7537946981436927173[14] = 0;
   out_7537946981436927173[15] = 0;
   out_7537946981436927173[16] = 0;
   out_7537946981436927173[17] = 0;
   out_7537946981436927173[18] = 0;
   out_7537946981436927173[19] = 0;
   out_7537946981436927173[20] = 0;
   out_7537946981436927173[21] = 0;
   out_7537946981436927173[22] = 1;
   out_7537946981436927173[23] = 0;
   out_7537946981436927173[24] = 0;
   out_7537946981436927173[25] = 0;
   out_7537946981436927173[26] = 0;
   out_7537946981436927173[27] = 0;
   out_7537946981436927173[28] = dt;
   out_7537946981436927173[29] = 0;
   out_7537946981436927173[30] = 0;
   out_7537946981436927173[31] = 0;
   out_7537946981436927173[32] = 0;
   out_7537946981436927173[33] = 0;
   out_7537946981436927173[34] = 0;
   out_7537946981436927173[35] = 0;
   out_7537946981436927173[36] = 0;
   out_7537946981436927173[37] = 0;
   out_7537946981436927173[38] = 0;
   out_7537946981436927173[39] = 0;
   out_7537946981436927173[40] = 0;
   out_7537946981436927173[41] = 0;
   out_7537946981436927173[42] = 0;
   out_7537946981436927173[43] = 0;
   out_7537946981436927173[44] = 1;
   out_7537946981436927173[45] = 0;
   out_7537946981436927173[46] = 0;
   out_7537946981436927173[47] = 0;
   out_7537946981436927173[48] = 0;
   out_7537946981436927173[49] = 0;
   out_7537946981436927173[50] = dt;
   out_7537946981436927173[51] = 0;
   out_7537946981436927173[52] = 0;
   out_7537946981436927173[53] = 0;
   out_7537946981436927173[54] = 0;
   out_7537946981436927173[55] = 0;
   out_7537946981436927173[56] = 0;
   out_7537946981436927173[57] = 0;
   out_7537946981436927173[58] = 0;
   out_7537946981436927173[59] = 0;
   out_7537946981436927173[60] = 0;
   out_7537946981436927173[61] = 0;
   out_7537946981436927173[62] = 0;
   out_7537946981436927173[63] = 0;
   out_7537946981436927173[64] = 0;
   out_7537946981436927173[65] = 0;
   out_7537946981436927173[66] = 1;
   out_7537946981436927173[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7537946981436927173[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7537946981436927173[69] = 0;
   out_7537946981436927173[70] = 0;
   out_7537946981436927173[71] = 0;
   out_7537946981436927173[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7537946981436927173[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7537946981436927173[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7537946981436927173[75] = 0;
   out_7537946981436927173[76] = 0;
   out_7537946981436927173[77] = 0;
   out_7537946981436927173[78] = 0;
   out_7537946981436927173[79] = 0;
   out_7537946981436927173[80] = 0;
   out_7537946981436927173[81] = 0;
   out_7537946981436927173[82] = 0;
   out_7537946981436927173[83] = 0;
   out_7537946981436927173[84] = 0;
   out_7537946981436927173[85] = 0;
   out_7537946981436927173[86] = 0;
   out_7537946981436927173[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7537946981436927173[88] = 1;
   out_7537946981436927173[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7537946981436927173[90] = 0;
   out_7537946981436927173[91] = 0;
   out_7537946981436927173[92] = 0;
   out_7537946981436927173[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7537946981436927173[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7537946981436927173[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7537946981436927173[96] = 0;
   out_7537946981436927173[97] = 0;
   out_7537946981436927173[98] = 0;
   out_7537946981436927173[99] = 0;
   out_7537946981436927173[100] = 0;
   out_7537946981436927173[101] = 0;
   out_7537946981436927173[102] = 0;
   out_7537946981436927173[103] = 0;
   out_7537946981436927173[104] = 0;
   out_7537946981436927173[105] = 0;
   out_7537946981436927173[106] = 0;
   out_7537946981436927173[107] = 0;
   out_7537946981436927173[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7537946981436927173[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7537946981436927173[110] = 1;
   out_7537946981436927173[111] = 0;
   out_7537946981436927173[112] = 0;
   out_7537946981436927173[113] = 0;
   out_7537946981436927173[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7537946981436927173[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7537946981436927173[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7537946981436927173[117] = 0;
   out_7537946981436927173[118] = 0;
   out_7537946981436927173[119] = 0;
   out_7537946981436927173[120] = 0;
   out_7537946981436927173[121] = 0;
   out_7537946981436927173[122] = 0;
   out_7537946981436927173[123] = 0;
   out_7537946981436927173[124] = 0;
   out_7537946981436927173[125] = 0;
   out_7537946981436927173[126] = 0;
   out_7537946981436927173[127] = 0;
   out_7537946981436927173[128] = 0;
   out_7537946981436927173[129] = 0;
   out_7537946981436927173[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7537946981436927173[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7537946981436927173[132] = 1;
   out_7537946981436927173[133] = 0;
   out_7537946981436927173[134] = 0;
   out_7537946981436927173[135] = 0;
   out_7537946981436927173[136] = 0;
   out_7537946981436927173[137] = 0;
   out_7537946981436927173[138] = 0;
   out_7537946981436927173[139] = 0;
   out_7537946981436927173[140] = 0;
   out_7537946981436927173[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7537946981436927173[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7537946981436927173[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7537946981436927173[144] = 0;
   out_7537946981436927173[145] = 0;
   out_7537946981436927173[146] = 0;
   out_7537946981436927173[147] = 0;
   out_7537946981436927173[148] = 0;
   out_7537946981436927173[149] = 0;
   out_7537946981436927173[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7537946981436927173[151] = 0;
   out_7537946981436927173[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7537946981436927173[153] = 0;
   out_7537946981436927173[154] = 1;
   out_7537946981436927173[155] = 0;
   out_7537946981436927173[156] = 0;
   out_7537946981436927173[157] = 0;
   out_7537946981436927173[158] = 0;
   out_7537946981436927173[159] = 0;
   out_7537946981436927173[160] = 0;
   out_7537946981436927173[161] = 0;
   out_7537946981436927173[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7537946981436927173[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7537946981436927173[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7537946981436927173[165] = 0;
   out_7537946981436927173[166] = 0;
   out_7537946981436927173[167] = 0;
   out_7537946981436927173[168] = 0;
   out_7537946981436927173[169] = 0;
   out_7537946981436927173[170] = 0;
   out_7537946981436927173[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7537946981436927173[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7537946981436927173[173] = 0;
   out_7537946981436927173[174] = 0;
   out_7537946981436927173[175] = 0;
   out_7537946981436927173[176] = 1;
   out_7537946981436927173[177] = 0;
   out_7537946981436927173[178] = 0;
   out_7537946981436927173[179] = 0;
   out_7537946981436927173[180] = 0;
   out_7537946981436927173[181] = 0;
   out_7537946981436927173[182] = 0;
   out_7537946981436927173[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7537946981436927173[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7537946981436927173[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7537946981436927173[186] = 0;
   out_7537946981436927173[187] = 0;
   out_7537946981436927173[188] = 0;
   out_7537946981436927173[189] = 0;
   out_7537946981436927173[190] = 0;
   out_7537946981436927173[191] = 0;
   out_7537946981436927173[192] = 0;
   out_7537946981436927173[193] = 0;
   out_7537946981436927173[194] = 0;
   out_7537946981436927173[195] = 0;
   out_7537946981436927173[196] = 0;
   out_7537946981436927173[197] = 0;
   out_7537946981436927173[198] = 1;
   out_7537946981436927173[199] = 0;
   out_7537946981436927173[200] = 0;
   out_7537946981436927173[201] = 0;
   out_7537946981436927173[202] = 0;
   out_7537946981436927173[203] = 0;
   out_7537946981436927173[204] = 0;
   out_7537946981436927173[205] = 0;
   out_7537946981436927173[206] = 0;
   out_7537946981436927173[207] = 0;
   out_7537946981436927173[208] = 0;
   out_7537946981436927173[209] = 0;
   out_7537946981436927173[210] = 0;
   out_7537946981436927173[211] = 0;
   out_7537946981436927173[212] = 0;
   out_7537946981436927173[213] = 0;
   out_7537946981436927173[214] = 0;
   out_7537946981436927173[215] = 0;
   out_7537946981436927173[216] = 0;
   out_7537946981436927173[217] = 0;
   out_7537946981436927173[218] = 0;
   out_7537946981436927173[219] = 0;
   out_7537946981436927173[220] = 1;
   out_7537946981436927173[221] = 0;
   out_7537946981436927173[222] = 0;
   out_7537946981436927173[223] = 0;
   out_7537946981436927173[224] = 0;
   out_7537946981436927173[225] = 0;
   out_7537946981436927173[226] = 0;
   out_7537946981436927173[227] = 0;
   out_7537946981436927173[228] = 0;
   out_7537946981436927173[229] = 0;
   out_7537946981436927173[230] = 0;
   out_7537946981436927173[231] = 0;
   out_7537946981436927173[232] = 0;
   out_7537946981436927173[233] = 0;
   out_7537946981436927173[234] = 0;
   out_7537946981436927173[235] = 0;
   out_7537946981436927173[236] = 0;
   out_7537946981436927173[237] = 0;
   out_7537946981436927173[238] = 0;
   out_7537946981436927173[239] = 0;
   out_7537946981436927173[240] = 0;
   out_7537946981436927173[241] = 0;
   out_7537946981436927173[242] = 1;
   out_7537946981436927173[243] = 0;
   out_7537946981436927173[244] = 0;
   out_7537946981436927173[245] = 0;
   out_7537946981436927173[246] = 0;
   out_7537946981436927173[247] = 0;
   out_7537946981436927173[248] = 0;
   out_7537946981436927173[249] = 0;
   out_7537946981436927173[250] = 0;
   out_7537946981436927173[251] = 0;
   out_7537946981436927173[252] = 0;
   out_7537946981436927173[253] = 0;
   out_7537946981436927173[254] = 0;
   out_7537946981436927173[255] = 0;
   out_7537946981436927173[256] = 0;
   out_7537946981436927173[257] = 0;
   out_7537946981436927173[258] = 0;
   out_7537946981436927173[259] = 0;
   out_7537946981436927173[260] = 0;
   out_7537946981436927173[261] = 0;
   out_7537946981436927173[262] = 0;
   out_7537946981436927173[263] = 0;
   out_7537946981436927173[264] = 1;
   out_7537946981436927173[265] = 0;
   out_7537946981436927173[266] = 0;
   out_7537946981436927173[267] = 0;
   out_7537946981436927173[268] = 0;
   out_7537946981436927173[269] = 0;
   out_7537946981436927173[270] = 0;
   out_7537946981436927173[271] = 0;
   out_7537946981436927173[272] = 0;
   out_7537946981436927173[273] = 0;
   out_7537946981436927173[274] = 0;
   out_7537946981436927173[275] = 0;
   out_7537946981436927173[276] = 0;
   out_7537946981436927173[277] = 0;
   out_7537946981436927173[278] = 0;
   out_7537946981436927173[279] = 0;
   out_7537946981436927173[280] = 0;
   out_7537946981436927173[281] = 0;
   out_7537946981436927173[282] = 0;
   out_7537946981436927173[283] = 0;
   out_7537946981436927173[284] = 0;
   out_7537946981436927173[285] = 0;
   out_7537946981436927173[286] = 1;
   out_7537946981436927173[287] = 0;
   out_7537946981436927173[288] = 0;
   out_7537946981436927173[289] = 0;
   out_7537946981436927173[290] = 0;
   out_7537946981436927173[291] = 0;
   out_7537946981436927173[292] = 0;
   out_7537946981436927173[293] = 0;
   out_7537946981436927173[294] = 0;
   out_7537946981436927173[295] = 0;
   out_7537946981436927173[296] = 0;
   out_7537946981436927173[297] = 0;
   out_7537946981436927173[298] = 0;
   out_7537946981436927173[299] = 0;
   out_7537946981436927173[300] = 0;
   out_7537946981436927173[301] = 0;
   out_7537946981436927173[302] = 0;
   out_7537946981436927173[303] = 0;
   out_7537946981436927173[304] = 0;
   out_7537946981436927173[305] = 0;
   out_7537946981436927173[306] = 0;
   out_7537946981436927173[307] = 0;
   out_7537946981436927173[308] = 1;
   out_7537946981436927173[309] = 0;
   out_7537946981436927173[310] = 0;
   out_7537946981436927173[311] = 0;
   out_7537946981436927173[312] = 0;
   out_7537946981436927173[313] = 0;
   out_7537946981436927173[314] = 0;
   out_7537946981436927173[315] = 0;
   out_7537946981436927173[316] = 0;
   out_7537946981436927173[317] = 0;
   out_7537946981436927173[318] = 0;
   out_7537946981436927173[319] = 0;
   out_7537946981436927173[320] = 0;
   out_7537946981436927173[321] = 0;
   out_7537946981436927173[322] = 0;
   out_7537946981436927173[323] = 0;
   out_7537946981436927173[324] = 0;
   out_7537946981436927173[325] = 0;
   out_7537946981436927173[326] = 0;
   out_7537946981436927173[327] = 0;
   out_7537946981436927173[328] = 0;
   out_7537946981436927173[329] = 0;
   out_7537946981436927173[330] = 1;
   out_7537946981436927173[331] = 0;
   out_7537946981436927173[332] = 0;
   out_7537946981436927173[333] = 0;
   out_7537946981436927173[334] = 0;
   out_7537946981436927173[335] = 0;
   out_7537946981436927173[336] = 0;
   out_7537946981436927173[337] = 0;
   out_7537946981436927173[338] = 0;
   out_7537946981436927173[339] = 0;
   out_7537946981436927173[340] = 0;
   out_7537946981436927173[341] = 0;
   out_7537946981436927173[342] = 0;
   out_7537946981436927173[343] = 0;
   out_7537946981436927173[344] = 0;
   out_7537946981436927173[345] = 0;
   out_7537946981436927173[346] = 0;
   out_7537946981436927173[347] = 0;
   out_7537946981436927173[348] = 0;
   out_7537946981436927173[349] = 0;
   out_7537946981436927173[350] = 0;
   out_7537946981436927173[351] = 0;
   out_7537946981436927173[352] = 1;
   out_7537946981436927173[353] = 0;
   out_7537946981436927173[354] = 0;
   out_7537946981436927173[355] = 0;
   out_7537946981436927173[356] = 0;
   out_7537946981436927173[357] = 0;
   out_7537946981436927173[358] = 0;
   out_7537946981436927173[359] = 0;
   out_7537946981436927173[360] = 0;
   out_7537946981436927173[361] = 0;
   out_7537946981436927173[362] = 0;
   out_7537946981436927173[363] = 0;
   out_7537946981436927173[364] = 0;
   out_7537946981436927173[365] = 0;
   out_7537946981436927173[366] = 0;
   out_7537946981436927173[367] = 0;
   out_7537946981436927173[368] = 0;
   out_7537946981436927173[369] = 0;
   out_7537946981436927173[370] = 0;
   out_7537946981436927173[371] = 0;
   out_7537946981436927173[372] = 0;
   out_7537946981436927173[373] = 0;
   out_7537946981436927173[374] = 1;
   out_7537946981436927173[375] = 0;
   out_7537946981436927173[376] = 0;
   out_7537946981436927173[377] = 0;
   out_7537946981436927173[378] = 0;
   out_7537946981436927173[379] = 0;
   out_7537946981436927173[380] = 0;
   out_7537946981436927173[381] = 0;
   out_7537946981436927173[382] = 0;
   out_7537946981436927173[383] = 0;
   out_7537946981436927173[384] = 0;
   out_7537946981436927173[385] = 0;
   out_7537946981436927173[386] = 0;
   out_7537946981436927173[387] = 0;
   out_7537946981436927173[388] = 0;
   out_7537946981436927173[389] = 0;
   out_7537946981436927173[390] = 0;
   out_7537946981436927173[391] = 0;
   out_7537946981436927173[392] = 0;
   out_7537946981436927173[393] = 0;
   out_7537946981436927173[394] = 0;
   out_7537946981436927173[395] = 0;
   out_7537946981436927173[396] = 1;
   out_7537946981436927173[397] = 0;
   out_7537946981436927173[398] = 0;
   out_7537946981436927173[399] = 0;
   out_7537946981436927173[400] = 0;
   out_7537946981436927173[401] = 0;
   out_7537946981436927173[402] = 0;
   out_7537946981436927173[403] = 0;
   out_7537946981436927173[404] = 0;
   out_7537946981436927173[405] = 0;
   out_7537946981436927173[406] = 0;
   out_7537946981436927173[407] = 0;
   out_7537946981436927173[408] = 0;
   out_7537946981436927173[409] = 0;
   out_7537946981436927173[410] = 0;
   out_7537946981436927173[411] = 0;
   out_7537946981436927173[412] = 0;
   out_7537946981436927173[413] = 0;
   out_7537946981436927173[414] = 0;
   out_7537946981436927173[415] = 0;
   out_7537946981436927173[416] = 0;
   out_7537946981436927173[417] = 0;
   out_7537946981436927173[418] = 1;
   out_7537946981436927173[419] = 0;
   out_7537946981436927173[420] = 0;
   out_7537946981436927173[421] = 0;
   out_7537946981436927173[422] = 0;
   out_7537946981436927173[423] = 0;
   out_7537946981436927173[424] = 0;
   out_7537946981436927173[425] = 0;
   out_7537946981436927173[426] = 0;
   out_7537946981436927173[427] = 0;
   out_7537946981436927173[428] = 0;
   out_7537946981436927173[429] = 0;
   out_7537946981436927173[430] = 0;
   out_7537946981436927173[431] = 0;
   out_7537946981436927173[432] = 0;
   out_7537946981436927173[433] = 0;
   out_7537946981436927173[434] = 0;
   out_7537946981436927173[435] = 0;
   out_7537946981436927173[436] = 0;
   out_7537946981436927173[437] = 0;
   out_7537946981436927173[438] = 0;
   out_7537946981436927173[439] = 0;
   out_7537946981436927173[440] = 1;
}
void h_4(double *state, double *unused, double *out_7985008971958282204) {
   out_7985008971958282204[0] = state[10] + state[13];
   out_7985008971958282204[1] = state[11] + state[14];
   out_7985008971958282204[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6639602133857460936) {
   out_6639602133857460936[0] = 0;
   out_6639602133857460936[1] = 0;
   out_6639602133857460936[2] = 0;
   out_6639602133857460936[3] = 0;
   out_6639602133857460936[4] = 0;
   out_6639602133857460936[5] = 0;
   out_6639602133857460936[6] = 0;
   out_6639602133857460936[7] = 0;
   out_6639602133857460936[8] = 0;
   out_6639602133857460936[9] = 0;
   out_6639602133857460936[10] = 1;
   out_6639602133857460936[11] = 0;
   out_6639602133857460936[12] = 0;
   out_6639602133857460936[13] = 1;
   out_6639602133857460936[14] = 0;
   out_6639602133857460936[15] = 0;
   out_6639602133857460936[16] = 0;
   out_6639602133857460936[17] = 0;
   out_6639602133857460936[18] = 0;
   out_6639602133857460936[19] = 0;
   out_6639602133857460936[20] = 0;
   out_6639602133857460936[21] = 0;
   out_6639602133857460936[22] = 0;
   out_6639602133857460936[23] = 0;
   out_6639602133857460936[24] = 0;
   out_6639602133857460936[25] = 0;
   out_6639602133857460936[26] = 0;
   out_6639602133857460936[27] = 0;
   out_6639602133857460936[28] = 0;
   out_6639602133857460936[29] = 0;
   out_6639602133857460936[30] = 0;
   out_6639602133857460936[31] = 0;
   out_6639602133857460936[32] = 0;
   out_6639602133857460936[33] = 1;
   out_6639602133857460936[34] = 0;
   out_6639602133857460936[35] = 0;
   out_6639602133857460936[36] = 1;
   out_6639602133857460936[37] = 0;
   out_6639602133857460936[38] = 0;
   out_6639602133857460936[39] = 0;
   out_6639602133857460936[40] = 0;
   out_6639602133857460936[41] = 0;
   out_6639602133857460936[42] = 0;
   out_6639602133857460936[43] = 0;
   out_6639602133857460936[44] = 0;
   out_6639602133857460936[45] = 0;
   out_6639602133857460936[46] = 0;
   out_6639602133857460936[47] = 0;
   out_6639602133857460936[48] = 0;
   out_6639602133857460936[49] = 0;
   out_6639602133857460936[50] = 0;
   out_6639602133857460936[51] = 0;
   out_6639602133857460936[52] = 0;
   out_6639602133857460936[53] = 0;
   out_6639602133857460936[54] = 0;
   out_6639602133857460936[55] = 0;
   out_6639602133857460936[56] = 1;
   out_6639602133857460936[57] = 0;
   out_6639602133857460936[58] = 0;
   out_6639602133857460936[59] = 1;
   out_6639602133857460936[60] = 0;
   out_6639602133857460936[61] = 0;
   out_6639602133857460936[62] = 0;
   out_6639602133857460936[63] = 0;
   out_6639602133857460936[64] = 0;
   out_6639602133857460936[65] = 0;
}
void h_9(double *state, double *unused, double *out_7416348393553739455) {
   out_7416348393553739455[0] = state[10];
   out_7416348393553739455[1] = state[11];
   out_7416348393553739455[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6880791780487051581) {
   out_6880791780487051581[0] = 0;
   out_6880791780487051581[1] = 0;
   out_6880791780487051581[2] = 0;
   out_6880791780487051581[3] = 0;
   out_6880791780487051581[4] = 0;
   out_6880791780487051581[5] = 0;
   out_6880791780487051581[6] = 0;
   out_6880791780487051581[7] = 0;
   out_6880791780487051581[8] = 0;
   out_6880791780487051581[9] = 0;
   out_6880791780487051581[10] = 1;
   out_6880791780487051581[11] = 0;
   out_6880791780487051581[12] = 0;
   out_6880791780487051581[13] = 0;
   out_6880791780487051581[14] = 0;
   out_6880791780487051581[15] = 0;
   out_6880791780487051581[16] = 0;
   out_6880791780487051581[17] = 0;
   out_6880791780487051581[18] = 0;
   out_6880791780487051581[19] = 0;
   out_6880791780487051581[20] = 0;
   out_6880791780487051581[21] = 0;
   out_6880791780487051581[22] = 0;
   out_6880791780487051581[23] = 0;
   out_6880791780487051581[24] = 0;
   out_6880791780487051581[25] = 0;
   out_6880791780487051581[26] = 0;
   out_6880791780487051581[27] = 0;
   out_6880791780487051581[28] = 0;
   out_6880791780487051581[29] = 0;
   out_6880791780487051581[30] = 0;
   out_6880791780487051581[31] = 0;
   out_6880791780487051581[32] = 0;
   out_6880791780487051581[33] = 1;
   out_6880791780487051581[34] = 0;
   out_6880791780487051581[35] = 0;
   out_6880791780487051581[36] = 0;
   out_6880791780487051581[37] = 0;
   out_6880791780487051581[38] = 0;
   out_6880791780487051581[39] = 0;
   out_6880791780487051581[40] = 0;
   out_6880791780487051581[41] = 0;
   out_6880791780487051581[42] = 0;
   out_6880791780487051581[43] = 0;
   out_6880791780487051581[44] = 0;
   out_6880791780487051581[45] = 0;
   out_6880791780487051581[46] = 0;
   out_6880791780487051581[47] = 0;
   out_6880791780487051581[48] = 0;
   out_6880791780487051581[49] = 0;
   out_6880791780487051581[50] = 0;
   out_6880791780487051581[51] = 0;
   out_6880791780487051581[52] = 0;
   out_6880791780487051581[53] = 0;
   out_6880791780487051581[54] = 0;
   out_6880791780487051581[55] = 0;
   out_6880791780487051581[56] = 1;
   out_6880791780487051581[57] = 0;
   out_6880791780487051581[58] = 0;
   out_6880791780487051581[59] = 0;
   out_6880791780487051581[60] = 0;
   out_6880791780487051581[61] = 0;
   out_6880791780487051581[62] = 0;
   out_6880791780487051581[63] = 0;
   out_6880791780487051581[64] = 0;
   out_6880791780487051581[65] = 0;
}
void h_10(double *state, double *unused, double *out_8336492447638165131) {
   out_8336492447638165131[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8336492447638165131[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8336492447638165131[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4399766487559122564) {
   out_4399766487559122564[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4399766487559122564[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4399766487559122564[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4399766487559122564[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4399766487559122564[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4399766487559122564[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4399766487559122564[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4399766487559122564[7] = 0;
   out_4399766487559122564[8] = 0;
   out_4399766487559122564[9] = 0;
   out_4399766487559122564[10] = 0;
   out_4399766487559122564[11] = 0;
   out_4399766487559122564[12] = 0;
   out_4399766487559122564[13] = 0;
   out_4399766487559122564[14] = 0;
   out_4399766487559122564[15] = 0;
   out_4399766487559122564[16] = 1;
   out_4399766487559122564[17] = 0;
   out_4399766487559122564[18] = 0;
   out_4399766487559122564[19] = 1;
   out_4399766487559122564[20] = 0;
   out_4399766487559122564[21] = 0;
   out_4399766487559122564[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4399766487559122564[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4399766487559122564[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4399766487559122564[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4399766487559122564[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4399766487559122564[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4399766487559122564[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4399766487559122564[29] = 0;
   out_4399766487559122564[30] = 0;
   out_4399766487559122564[31] = 0;
   out_4399766487559122564[32] = 0;
   out_4399766487559122564[33] = 0;
   out_4399766487559122564[34] = 0;
   out_4399766487559122564[35] = 0;
   out_4399766487559122564[36] = 0;
   out_4399766487559122564[37] = 0;
   out_4399766487559122564[38] = 0;
   out_4399766487559122564[39] = 1;
   out_4399766487559122564[40] = 0;
   out_4399766487559122564[41] = 0;
   out_4399766487559122564[42] = 1;
   out_4399766487559122564[43] = 0;
   out_4399766487559122564[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4399766487559122564[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4399766487559122564[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4399766487559122564[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4399766487559122564[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4399766487559122564[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4399766487559122564[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4399766487559122564[51] = 0;
   out_4399766487559122564[52] = 0;
   out_4399766487559122564[53] = 0;
   out_4399766487559122564[54] = 0;
   out_4399766487559122564[55] = 0;
   out_4399766487559122564[56] = 0;
   out_4399766487559122564[57] = 0;
   out_4399766487559122564[58] = 0;
   out_4399766487559122564[59] = 0;
   out_4399766487559122564[60] = 0;
   out_4399766487559122564[61] = 0;
   out_4399766487559122564[62] = 1;
   out_4399766487559122564[63] = 0;
   out_4399766487559122564[64] = 0;
   out_4399766487559122564[65] = 1;
}
void h_12(double *state, double *unused, double *out_748897964763280025) {
   out_748897964763280025[0] = state[0];
   out_748897964763280025[1] = state[1];
   out_748897964763280025[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6787685531820128885) {
   out_6787685531820128885[0] = 1;
   out_6787685531820128885[1] = 0;
   out_6787685531820128885[2] = 0;
   out_6787685531820128885[3] = 0;
   out_6787685531820128885[4] = 0;
   out_6787685531820128885[5] = 0;
   out_6787685531820128885[6] = 0;
   out_6787685531820128885[7] = 0;
   out_6787685531820128885[8] = 0;
   out_6787685531820128885[9] = 0;
   out_6787685531820128885[10] = 0;
   out_6787685531820128885[11] = 0;
   out_6787685531820128885[12] = 0;
   out_6787685531820128885[13] = 0;
   out_6787685531820128885[14] = 0;
   out_6787685531820128885[15] = 0;
   out_6787685531820128885[16] = 0;
   out_6787685531820128885[17] = 0;
   out_6787685531820128885[18] = 0;
   out_6787685531820128885[19] = 0;
   out_6787685531820128885[20] = 0;
   out_6787685531820128885[21] = 0;
   out_6787685531820128885[22] = 0;
   out_6787685531820128885[23] = 1;
   out_6787685531820128885[24] = 0;
   out_6787685531820128885[25] = 0;
   out_6787685531820128885[26] = 0;
   out_6787685531820128885[27] = 0;
   out_6787685531820128885[28] = 0;
   out_6787685531820128885[29] = 0;
   out_6787685531820128885[30] = 0;
   out_6787685531820128885[31] = 0;
   out_6787685531820128885[32] = 0;
   out_6787685531820128885[33] = 0;
   out_6787685531820128885[34] = 0;
   out_6787685531820128885[35] = 0;
   out_6787685531820128885[36] = 0;
   out_6787685531820128885[37] = 0;
   out_6787685531820128885[38] = 0;
   out_6787685531820128885[39] = 0;
   out_6787685531820128885[40] = 0;
   out_6787685531820128885[41] = 0;
   out_6787685531820128885[42] = 0;
   out_6787685531820128885[43] = 0;
   out_6787685531820128885[44] = 0;
   out_6787685531820128885[45] = 0;
   out_6787685531820128885[46] = 1;
   out_6787685531820128885[47] = 0;
   out_6787685531820128885[48] = 0;
   out_6787685531820128885[49] = 0;
   out_6787685531820128885[50] = 0;
   out_6787685531820128885[51] = 0;
   out_6787685531820128885[52] = 0;
   out_6787685531820128885[53] = 0;
   out_6787685531820128885[54] = 0;
   out_6787685531820128885[55] = 0;
   out_6787685531820128885[56] = 0;
   out_6787685531820128885[57] = 0;
   out_6787685531820128885[58] = 0;
   out_6787685531820128885[59] = 0;
   out_6787685531820128885[60] = 0;
   out_6787685531820128885[61] = 0;
   out_6787685531820128885[62] = 0;
   out_6787685531820128885[63] = 0;
   out_6787685531820128885[64] = 0;
   out_6787685531820128885[65] = 0;
}
void h_35(double *state, double *unused, double *out_3350233371873118465) {
   out_3350233371873118465[0] = state[7];
   out_3350233371873118465[1] = state[8];
   out_3350233371873118465[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8440479882479483304) {
   out_8440479882479483304[0] = 0;
   out_8440479882479483304[1] = 0;
   out_8440479882479483304[2] = 0;
   out_8440479882479483304[3] = 0;
   out_8440479882479483304[4] = 0;
   out_8440479882479483304[5] = 0;
   out_8440479882479483304[6] = 0;
   out_8440479882479483304[7] = 1;
   out_8440479882479483304[8] = 0;
   out_8440479882479483304[9] = 0;
   out_8440479882479483304[10] = 0;
   out_8440479882479483304[11] = 0;
   out_8440479882479483304[12] = 0;
   out_8440479882479483304[13] = 0;
   out_8440479882479483304[14] = 0;
   out_8440479882479483304[15] = 0;
   out_8440479882479483304[16] = 0;
   out_8440479882479483304[17] = 0;
   out_8440479882479483304[18] = 0;
   out_8440479882479483304[19] = 0;
   out_8440479882479483304[20] = 0;
   out_8440479882479483304[21] = 0;
   out_8440479882479483304[22] = 0;
   out_8440479882479483304[23] = 0;
   out_8440479882479483304[24] = 0;
   out_8440479882479483304[25] = 0;
   out_8440479882479483304[26] = 0;
   out_8440479882479483304[27] = 0;
   out_8440479882479483304[28] = 0;
   out_8440479882479483304[29] = 0;
   out_8440479882479483304[30] = 1;
   out_8440479882479483304[31] = 0;
   out_8440479882479483304[32] = 0;
   out_8440479882479483304[33] = 0;
   out_8440479882479483304[34] = 0;
   out_8440479882479483304[35] = 0;
   out_8440479882479483304[36] = 0;
   out_8440479882479483304[37] = 0;
   out_8440479882479483304[38] = 0;
   out_8440479882479483304[39] = 0;
   out_8440479882479483304[40] = 0;
   out_8440479882479483304[41] = 0;
   out_8440479882479483304[42] = 0;
   out_8440479882479483304[43] = 0;
   out_8440479882479483304[44] = 0;
   out_8440479882479483304[45] = 0;
   out_8440479882479483304[46] = 0;
   out_8440479882479483304[47] = 0;
   out_8440479882479483304[48] = 0;
   out_8440479882479483304[49] = 0;
   out_8440479882479483304[50] = 0;
   out_8440479882479483304[51] = 0;
   out_8440479882479483304[52] = 0;
   out_8440479882479483304[53] = 1;
   out_8440479882479483304[54] = 0;
   out_8440479882479483304[55] = 0;
   out_8440479882479483304[56] = 0;
   out_8440479882479483304[57] = 0;
   out_8440479882479483304[58] = 0;
   out_8440479882479483304[59] = 0;
   out_8440479882479483304[60] = 0;
   out_8440479882479483304[61] = 0;
   out_8440479882479483304[62] = 0;
   out_8440479882479483304[63] = 0;
   out_8440479882479483304[64] = 0;
   out_8440479882479483304[65] = 0;
}
void h_32(double *state, double *unused, double *out_1211367634796053892) {
   out_1211367634796053892[0] = state[3];
   out_1211367634796053892[1] = state[4];
   out_1211367634796053892[2] = state[5];
   out_1211367634796053892[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1315395392884311885) {
   out_1315395392884311885[0] = 0;
   out_1315395392884311885[1] = 0;
   out_1315395392884311885[2] = 0;
   out_1315395392884311885[3] = 1;
   out_1315395392884311885[4] = 0;
   out_1315395392884311885[5] = 0;
   out_1315395392884311885[6] = 0;
   out_1315395392884311885[7] = 0;
   out_1315395392884311885[8] = 0;
   out_1315395392884311885[9] = 0;
   out_1315395392884311885[10] = 0;
   out_1315395392884311885[11] = 0;
   out_1315395392884311885[12] = 0;
   out_1315395392884311885[13] = 0;
   out_1315395392884311885[14] = 0;
   out_1315395392884311885[15] = 0;
   out_1315395392884311885[16] = 0;
   out_1315395392884311885[17] = 0;
   out_1315395392884311885[18] = 0;
   out_1315395392884311885[19] = 0;
   out_1315395392884311885[20] = 0;
   out_1315395392884311885[21] = 0;
   out_1315395392884311885[22] = 0;
   out_1315395392884311885[23] = 0;
   out_1315395392884311885[24] = 0;
   out_1315395392884311885[25] = 0;
   out_1315395392884311885[26] = 1;
   out_1315395392884311885[27] = 0;
   out_1315395392884311885[28] = 0;
   out_1315395392884311885[29] = 0;
   out_1315395392884311885[30] = 0;
   out_1315395392884311885[31] = 0;
   out_1315395392884311885[32] = 0;
   out_1315395392884311885[33] = 0;
   out_1315395392884311885[34] = 0;
   out_1315395392884311885[35] = 0;
   out_1315395392884311885[36] = 0;
   out_1315395392884311885[37] = 0;
   out_1315395392884311885[38] = 0;
   out_1315395392884311885[39] = 0;
   out_1315395392884311885[40] = 0;
   out_1315395392884311885[41] = 0;
   out_1315395392884311885[42] = 0;
   out_1315395392884311885[43] = 0;
   out_1315395392884311885[44] = 0;
   out_1315395392884311885[45] = 0;
   out_1315395392884311885[46] = 0;
   out_1315395392884311885[47] = 0;
   out_1315395392884311885[48] = 0;
   out_1315395392884311885[49] = 1;
   out_1315395392884311885[50] = 0;
   out_1315395392884311885[51] = 0;
   out_1315395392884311885[52] = 0;
   out_1315395392884311885[53] = 0;
   out_1315395392884311885[54] = 0;
   out_1315395392884311885[55] = 0;
   out_1315395392884311885[56] = 0;
   out_1315395392884311885[57] = 0;
   out_1315395392884311885[58] = 0;
   out_1315395392884311885[59] = 0;
   out_1315395392884311885[60] = 0;
   out_1315395392884311885[61] = 0;
   out_1315395392884311885[62] = 0;
   out_1315395392884311885[63] = 0;
   out_1315395392884311885[64] = 0;
   out_1315395392884311885[65] = 0;
   out_1315395392884311885[66] = 0;
   out_1315395392884311885[67] = 0;
   out_1315395392884311885[68] = 0;
   out_1315395392884311885[69] = 0;
   out_1315395392884311885[70] = 0;
   out_1315395392884311885[71] = 0;
   out_1315395392884311885[72] = 1;
   out_1315395392884311885[73] = 0;
   out_1315395392884311885[74] = 0;
   out_1315395392884311885[75] = 0;
   out_1315395392884311885[76] = 0;
   out_1315395392884311885[77] = 0;
   out_1315395392884311885[78] = 0;
   out_1315395392884311885[79] = 0;
   out_1315395392884311885[80] = 0;
   out_1315395392884311885[81] = 0;
   out_1315395392884311885[82] = 0;
   out_1315395392884311885[83] = 0;
   out_1315395392884311885[84] = 0;
   out_1315395392884311885[85] = 0;
   out_1315395392884311885[86] = 0;
   out_1315395392884311885[87] = 0;
}
void h_13(double *state, double *unused, double *out_2955681637201582983) {
   out_2955681637201582983[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2955681637201582983[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2955681637201582983[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4537722988519974402) {
   out_4537722988519974402[0] = 0;
   out_4537722988519974402[1] = 0;
   out_4537722988519974402[2] = 0;
   out_4537722988519974402[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4537722988519974402[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4537722988519974402[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4537722988519974402[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4537722988519974402[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4537722988519974402[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4537722988519974402[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4537722988519974402[10] = 0;
   out_4537722988519974402[11] = 0;
   out_4537722988519974402[12] = 0;
   out_4537722988519974402[13] = 0;
   out_4537722988519974402[14] = 0;
   out_4537722988519974402[15] = 0;
   out_4537722988519974402[16] = 0;
   out_4537722988519974402[17] = 0;
   out_4537722988519974402[18] = 0;
   out_4537722988519974402[19] = 0;
   out_4537722988519974402[20] = 0;
   out_4537722988519974402[21] = 0;
   out_4537722988519974402[22] = 0;
   out_4537722988519974402[23] = 0;
   out_4537722988519974402[24] = 0;
   out_4537722988519974402[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4537722988519974402[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4537722988519974402[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4537722988519974402[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4537722988519974402[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4537722988519974402[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4537722988519974402[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4537722988519974402[32] = 0;
   out_4537722988519974402[33] = 0;
   out_4537722988519974402[34] = 0;
   out_4537722988519974402[35] = 0;
   out_4537722988519974402[36] = 0;
   out_4537722988519974402[37] = 0;
   out_4537722988519974402[38] = 0;
   out_4537722988519974402[39] = 0;
   out_4537722988519974402[40] = 0;
   out_4537722988519974402[41] = 0;
   out_4537722988519974402[42] = 0;
   out_4537722988519974402[43] = 0;
   out_4537722988519974402[44] = 0;
   out_4537722988519974402[45] = 0;
   out_4537722988519974402[46] = 0;
   out_4537722988519974402[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4537722988519974402[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4537722988519974402[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4537722988519974402[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4537722988519974402[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4537722988519974402[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4537722988519974402[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4537722988519974402[54] = 0;
   out_4537722988519974402[55] = 0;
   out_4537722988519974402[56] = 0;
   out_4537722988519974402[57] = 0;
   out_4537722988519974402[58] = 0;
   out_4537722988519974402[59] = 0;
   out_4537722988519974402[60] = 0;
   out_4537722988519974402[61] = 0;
   out_4537722988519974402[62] = 0;
   out_4537722988519974402[63] = 0;
   out_4537722988519974402[64] = 0;
   out_4537722988519974402[65] = 0;
}
void h_14(double *state, double *unused, double *out_7416348393553739455) {
   out_7416348393553739455[0] = state[10];
   out_7416348393553739455[1] = state[11];
   out_7416348393553739455[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6880791780487051581) {
   out_6880791780487051581[0] = 0;
   out_6880791780487051581[1] = 0;
   out_6880791780487051581[2] = 0;
   out_6880791780487051581[3] = 0;
   out_6880791780487051581[4] = 0;
   out_6880791780487051581[5] = 0;
   out_6880791780487051581[6] = 0;
   out_6880791780487051581[7] = 0;
   out_6880791780487051581[8] = 0;
   out_6880791780487051581[9] = 0;
   out_6880791780487051581[10] = 1;
   out_6880791780487051581[11] = 0;
   out_6880791780487051581[12] = 0;
   out_6880791780487051581[13] = 0;
   out_6880791780487051581[14] = 0;
   out_6880791780487051581[15] = 0;
   out_6880791780487051581[16] = 0;
   out_6880791780487051581[17] = 0;
   out_6880791780487051581[18] = 0;
   out_6880791780487051581[19] = 0;
   out_6880791780487051581[20] = 0;
   out_6880791780487051581[21] = 0;
   out_6880791780487051581[22] = 0;
   out_6880791780487051581[23] = 0;
   out_6880791780487051581[24] = 0;
   out_6880791780487051581[25] = 0;
   out_6880791780487051581[26] = 0;
   out_6880791780487051581[27] = 0;
   out_6880791780487051581[28] = 0;
   out_6880791780487051581[29] = 0;
   out_6880791780487051581[30] = 0;
   out_6880791780487051581[31] = 0;
   out_6880791780487051581[32] = 0;
   out_6880791780487051581[33] = 1;
   out_6880791780487051581[34] = 0;
   out_6880791780487051581[35] = 0;
   out_6880791780487051581[36] = 0;
   out_6880791780487051581[37] = 0;
   out_6880791780487051581[38] = 0;
   out_6880791780487051581[39] = 0;
   out_6880791780487051581[40] = 0;
   out_6880791780487051581[41] = 0;
   out_6880791780487051581[42] = 0;
   out_6880791780487051581[43] = 0;
   out_6880791780487051581[44] = 0;
   out_6880791780487051581[45] = 0;
   out_6880791780487051581[46] = 0;
   out_6880791780487051581[47] = 0;
   out_6880791780487051581[48] = 0;
   out_6880791780487051581[49] = 0;
   out_6880791780487051581[50] = 0;
   out_6880791780487051581[51] = 0;
   out_6880791780487051581[52] = 0;
   out_6880791780487051581[53] = 0;
   out_6880791780487051581[54] = 0;
   out_6880791780487051581[55] = 0;
   out_6880791780487051581[56] = 1;
   out_6880791780487051581[57] = 0;
   out_6880791780487051581[58] = 0;
   out_6880791780487051581[59] = 0;
   out_6880791780487051581[60] = 0;
   out_6880791780487051581[61] = 0;
   out_6880791780487051581[62] = 0;
   out_6880791780487051581[63] = 0;
   out_6880791780487051581[64] = 0;
   out_6880791780487051581[65] = 0;
}
void h_33(double *state, double *unused, double *out_3008793661358065678) {
   out_3008793661358065678[0] = state[16];
   out_3008793661358065678[1] = state[17];
   out_3008793661358065678[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5289922877840625700) {
   out_5289922877840625700[0] = 0;
   out_5289922877840625700[1] = 0;
   out_5289922877840625700[2] = 0;
   out_5289922877840625700[3] = 0;
   out_5289922877840625700[4] = 0;
   out_5289922877840625700[5] = 0;
   out_5289922877840625700[6] = 0;
   out_5289922877840625700[7] = 0;
   out_5289922877840625700[8] = 0;
   out_5289922877840625700[9] = 0;
   out_5289922877840625700[10] = 0;
   out_5289922877840625700[11] = 0;
   out_5289922877840625700[12] = 0;
   out_5289922877840625700[13] = 0;
   out_5289922877840625700[14] = 0;
   out_5289922877840625700[15] = 0;
   out_5289922877840625700[16] = 1;
   out_5289922877840625700[17] = 0;
   out_5289922877840625700[18] = 0;
   out_5289922877840625700[19] = 0;
   out_5289922877840625700[20] = 0;
   out_5289922877840625700[21] = 0;
   out_5289922877840625700[22] = 0;
   out_5289922877840625700[23] = 0;
   out_5289922877840625700[24] = 0;
   out_5289922877840625700[25] = 0;
   out_5289922877840625700[26] = 0;
   out_5289922877840625700[27] = 0;
   out_5289922877840625700[28] = 0;
   out_5289922877840625700[29] = 0;
   out_5289922877840625700[30] = 0;
   out_5289922877840625700[31] = 0;
   out_5289922877840625700[32] = 0;
   out_5289922877840625700[33] = 0;
   out_5289922877840625700[34] = 0;
   out_5289922877840625700[35] = 0;
   out_5289922877840625700[36] = 0;
   out_5289922877840625700[37] = 0;
   out_5289922877840625700[38] = 0;
   out_5289922877840625700[39] = 1;
   out_5289922877840625700[40] = 0;
   out_5289922877840625700[41] = 0;
   out_5289922877840625700[42] = 0;
   out_5289922877840625700[43] = 0;
   out_5289922877840625700[44] = 0;
   out_5289922877840625700[45] = 0;
   out_5289922877840625700[46] = 0;
   out_5289922877840625700[47] = 0;
   out_5289922877840625700[48] = 0;
   out_5289922877840625700[49] = 0;
   out_5289922877840625700[50] = 0;
   out_5289922877840625700[51] = 0;
   out_5289922877840625700[52] = 0;
   out_5289922877840625700[53] = 0;
   out_5289922877840625700[54] = 0;
   out_5289922877840625700[55] = 0;
   out_5289922877840625700[56] = 0;
   out_5289922877840625700[57] = 0;
   out_5289922877840625700[58] = 0;
   out_5289922877840625700[59] = 0;
   out_5289922877840625700[60] = 0;
   out_5289922877840625700[61] = 0;
   out_5289922877840625700[62] = 1;
   out_5289922877840625700[63] = 0;
   out_5289922877840625700[64] = 0;
   out_5289922877840625700[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2881037365619628279) {
  H(in_vec, out_2881037365619628279);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9185585876490325269) {
  err_fun(nom_x, delta_x, out_9185585876490325269);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4515645717665193781) {
  inv_err_fun(nom_x, true_x, out_4515645717665193781);
}
void live_H_mod_fun(double *state, double *out_7360777769815407851) {
  H_mod_fun(state, out_7360777769815407851);
}
void live_f_fun(double *state, double dt, double *out_707519906875901283) {
  f_fun(state,  dt, out_707519906875901283);
}
void live_F_fun(double *state, double dt, double *out_7537946981436927173) {
  F_fun(state,  dt, out_7537946981436927173);
}
void live_h_4(double *state, double *unused, double *out_7985008971958282204) {
  h_4(state, unused, out_7985008971958282204);
}
void live_H_4(double *state, double *unused, double *out_6639602133857460936) {
  H_4(state, unused, out_6639602133857460936);
}
void live_h_9(double *state, double *unused, double *out_7416348393553739455) {
  h_9(state, unused, out_7416348393553739455);
}
void live_H_9(double *state, double *unused, double *out_6880791780487051581) {
  H_9(state, unused, out_6880791780487051581);
}
void live_h_10(double *state, double *unused, double *out_8336492447638165131) {
  h_10(state, unused, out_8336492447638165131);
}
void live_H_10(double *state, double *unused, double *out_4399766487559122564) {
  H_10(state, unused, out_4399766487559122564);
}
void live_h_12(double *state, double *unused, double *out_748897964763280025) {
  h_12(state, unused, out_748897964763280025);
}
void live_H_12(double *state, double *unused, double *out_6787685531820128885) {
  H_12(state, unused, out_6787685531820128885);
}
void live_h_35(double *state, double *unused, double *out_3350233371873118465) {
  h_35(state, unused, out_3350233371873118465);
}
void live_H_35(double *state, double *unused, double *out_8440479882479483304) {
  H_35(state, unused, out_8440479882479483304);
}
void live_h_32(double *state, double *unused, double *out_1211367634796053892) {
  h_32(state, unused, out_1211367634796053892);
}
void live_H_32(double *state, double *unused, double *out_1315395392884311885) {
  H_32(state, unused, out_1315395392884311885);
}
void live_h_13(double *state, double *unused, double *out_2955681637201582983) {
  h_13(state, unused, out_2955681637201582983);
}
void live_H_13(double *state, double *unused, double *out_4537722988519974402) {
  H_13(state, unused, out_4537722988519974402);
}
void live_h_14(double *state, double *unused, double *out_7416348393553739455) {
  h_14(state, unused, out_7416348393553739455);
}
void live_H_14(double *state, double *unused, double *out_6880791780487051581) {
  H_14(state, unused, out_6880791780487051581);
}
void live_h_33(double *state, double *unused, double *out_3008793661358065678) {
  h_33(state, unused, out_3008793661358065678);
}
void live_H_33(double *state, double *unused, double *out_5289922877840625700) {
  H_33(state, unused, out_5289922877840625700);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
