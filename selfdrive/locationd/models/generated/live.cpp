#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6232700668869886557) {
   out_6232700668869886557[0] = 0;
   out_6232700668869886557[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6232700668869886557[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6232700668869886557[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6232700668869886557[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6232700668869886557[5] = -sin(in_vec[1]);
   out_6232700668869886557[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6232700668869886557[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6232700668869886557[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6232700668869886557[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6232700668869886557[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6232700668869886557[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6232700668869886557[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6232700668869886557[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6232700668869886557[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6232700668869886557[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6232700668869886557[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6232700668869886557[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1478261554725453242) {
   out_1478261554725453242[0] = delta_x[0] + nom_x[0];
   out_1478261554725453242[1] = delta_x[1] + nom_x[1];
   out_1478261554725453242[2] = delta_x[2] + nom_x[2];
   out_1478261554725453242[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1478261554725453242[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1478261554725453242[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1478261554725453242[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1478261554725453242[7] = delta_x[6] + nom_x[7];
   out_1478261554725453242[8] = delta_x[7] + nom_x[8];
   out_1478261554725453242[9] = delta_x[8] + nom_x[9];
   out_1478261554725453242[10] = delta_x[9] + nom_x[10];
   out_1478261554725453242[11] = delta_x[10] + nom_x[11];
   out_1478261554725453242[12] = delta_x[11] + nom_x[12];
   out_1478261554725453242[13] = delta_x[12] + nom_x[13];
   out_1478261554725453242[14] = delta_x[13] + nom_x[14];
   out_1478261554725453242[15] = delta_x[14] + nom_x[15];
   out_1478261554725453242[16] = delta_x[15] + nom_x[16];
   out_1478261554725453242[17] = delta_x[16] + nom_x[17];
   out_1478261554725453242[18] = delta_x[17] + nom_x[18];
   out_1478261554725453242[19] = delta_x[18] + nom_x[19];
   out_1478261554725453242[20] = delta_x[19] + nom_x[20];
   out_1478261554725453242[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7358232558062317751) {
   out_7358232558062317751[0] = -nom_x[0] + true_x[0];
   out_7358232558062317751[1] = -nom_x[1] + true_x[1];
   out_7358232558062317751[2] = -nom_x[2] + true_x[2];
   out_7358232558062317751[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7358232558062317751[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7358232558062317751[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7358232558062317751[6] = -nom_x[7] + true_x[7];
   out_7358232558062317751[7] = -nom_x[8] + true_x[8];
   out_7358232558062317751[8] = -nom_x[9] + true_x[9];
   out_7358232558062317751[9] = -nom_x[10] + true_x[10];
   out_7358232558062317751[10] = -nom_x[11] + true_x[11];
   out_7358232558062317751[11] = -nom_x[12] + true_x[12];
   out_7358232558062317751[12] = -nom_x[13] + true_x[13];
   out_7358232558062317751[13] = -nom_x[14] + true_x[14];
   out_7358232558062317751[14] = -nom_x[15] + true_x[15];
   out_7358232558062317751[15] = -nom_x[16] + true_x[16];
   out_7358232558062317751[16] = -nom_x[17] + true_x[17];
   out_7358232558062317751[17] = -nom_x[18] + true_x[18];
   out_7358232558062317751[18] = -nom_x[19] + true_x[19];
   out_7358232558062317751[19] = -nom_x[20] + true_x[20];
   out_7358232558062317751[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4935659974528521667) {
   out_4935659974528521667[0] = 1.0;
   out_4935659974528521667[1] = 0;
   out_4935659974528521667[2] = 0;
   out_4935659974528521667[3] = 0;
   out_4935659974528521667[4] = 0;
   out_4935659974528521667[5] = 0;
   out_4935659974528521667[6] = 0;
   out_4935659974528521667[7] = 0;
   out_4935659974528521667[8] = 0;
   out_4935659974528521667[9] = 0;
   out_4935659974528521667[10] = 0;
   out_4935659974528521667[11] = 0;
   out_4935659974528521667[12] = 0;
   out_4935659974528521667[13] = 0;
   out_4935659974528521667[14] = 0;
   out_4935659974528521667[15] = 0;
   out_4935659974528521667[16] = 0;
   out_4935659974528521667[17] = 0;
   out_4935659974528521667[18] = 0;
   out_4935659974528521667[19] = 0;
   out_4935659974528521667[20] = 0;
   out_4935659974528521667[21] = 0;
   out_4935659974528521667[22] = 1.0;
   out_4935659974528521667[23] = 0;
   out_4935659974528521667[24] = 0;
   out_4935659974528521667[25] = 0;
   out_4935659974528521667[26] = 0;
   out_4935659974528521667[27] = 0;
   out_4935659974528521667[28] = 0;
   out_4935659974528521667[29] = 0;
   out_4935659974528521667[30] = 0;
   out_4935659974528521667[31] = 0;
   out_4935659974528521667[32] = 0;
   out_4935659974528521667[33] = 0;
   out_4935659974528521667[34] = 0;
   out_4935659974528521667[35] = 0;
   out_4935659974528521667[36] = 0;
   out_4935659974528521667[37] = 0;
   out_4935659974528521667[38] = 0;
   out_4935659974528521667[39] = 0;
   out_4935659974528521667[40] = 0;
   out_4935659974528521667[41] = 0;
   out_4935659974528521667[42] = 0;
   out_4935659974528521667[43] = 0;
   out_4935659974528521667[44] = 1.0;
   out_4935659974528521667[45] = 0;
   out_4935659974528521667[46] = 0;
   out_4935659974528521667[47] = 0;
   out_4935659974528521667[48] = 0;
   out_4935659974528521667[49] = 0;
   out_4935659974528521667[50] = 0;
   out_4935659974528521667[51] = 0;
   out_4935659974528521667[52] = 0;
   out_4935659974528521667[53] = 0;
   out_4935659974528521667[54] = 0;
   out_4935659974528521667[55] = 0;
   out_4935659974528521667[56] = 0;
   out_4935659974528521667[57] = 0;
   out_4935659974528521667[58] = 0;
   out_4935659974528521667[59] = 0;
   out_4935659974528521667[60] = 0;
   out_4935659974528521667[61] = 0;
   out_4935659974528521667[62] = 0;
   out_4935659974528521667[63] = 0;
   out_4935659974528521667[64] = 0;
   out_4935659974528521667[65] = 0;
   out_4935659974528521667[66] = -0.5*state[4];
   out_4935659974528521667[67] = -0.5*state[5];
   out_4935659974528521667[68] = -0.5*state[6];
   out_4935659974528521667[69] = 0;
   out_4935659974528521667[70] = 0;
   out_4935659974528521667[71] = 0;
   out_4935659974528521667[72] = 0;
   out_4935659974528521667[73] = 0;
   out_4935659974528521667[74] = 0;
   out_4935659974528521667[75] = 0;
   out_4935659974528521667[76] = 0;
   out_4935659974528521667[77] = 0;
   out_4935659974528521667[78] = 0;
   out_4935659974528521667[79] = 0;
   out_4935659974528521667[80] = 0;
   out_4935659974528521667[81] = 0;
   out_4935659974528521667[82] = 0;
   out_4935659974528521667[83] = 0;
   out_4935659974528521667[84] = 0;
   out_4935659974528521667[85] = 0;
   out_4935659974528521667[86] = 0;
   out_4935659974528521667[87] = 0.5*state[3];
   out_4935659974528521667[88] = 0.5*state[6];
   out_4935659974528521667[89] = -0.5*state[5];
   out_4935659974528521667[90] = 0;
   out_4935659974528521667[91] = 0;
   out_4935659974528521667[92] = 0;
   out_4935659974528521667[93] = 0;
   out_4935659974528521667[94] = 0;
   out_4935659974528521667[95] = 0;
   out_4935659974528521667[96] = 0;
   out_4935659974528521667[97] = 0;
   out_4935659974528521667[98] = 0;
   out_4935659974528521667[99] = 0;
   out_4935659974528521667[100] = 0;
   out_4935659974528521667[101] = 0;
   out_4935659974528521667[102] = 0;
   out_4935659974528521667[103] = 0;
   out_4935659974528521667[104] = 0;
   out_4935659974528521667[105] = 0;
   out_4935659974528521667[106] = 0;
   out_4935659974528521667[107] = 0;
   out_4935659974528521667[108] = -0.5*state[6];
   out_4935659974528521667[109] = 0.5*state[3];
   out_4935659974528521667[110] = 0.5*state[4];
   out_4935659974528521667[111] = 0;
   out_4935659974528521667[112] = 0;
   out_4935659974528521667[113] = 0;
   out_4935659974528521667[114] = 0;
   out_4935659974528521667[115] = 0;
   out_4935659974528521667[116] = 0;
   out_4935659974528521667[117] = 0;
   out_4935659974528521667[118] = 0;
   out_4935659974528521667[119] = 0;
   out_4935659974528521667[120] = 0;
   out_4935659974528521667[121] = 0;
   out_4935659974528521667[122] = 0;
   out_4935659974528521667[123] = 0;
   out_4935659974528521667[124] = 0;
   out_4935659974528521667[125] = 0;
   out_4935659974528521667[126] = 0;
   out_4935659974528521667[127] = 0;
   out_4935659974528521667[128] = 0;
   out_4935659974528521667[129] = 0.5*state[5];
   out_4935659974528521667[130] = -0.5*state[4];
   out_4935659974528521667[131] = 0.5*state[3];
   out_4935659974528521667[132] = 0;
   out_4935659974528521667[133] = 0;
   out_4935659974528521667[134] = 0;
   out_4935659974528521667[135] = 0;
   out_4935659974528521667[136] = 0;
   out_4935659974528521667[137] = 0;
   out_4935659974528521667[138] = 0;
   out_4935659974528521667[139] = 0;
   out_4935659974528521667[140] = 0;
   out_4935659974528521667[141] = 0;
   out_4935659974528521667[142] = 0;
   out_4935659974528521667[143] = 0;
   out_4935659974528521667[144] = 0;
   out_4935659974528521667[145] = 0;
   out_4935659974528521667[146] = 0;
   out_4935659974528521667[147] = 0;
   out_4935659974528521667[148] = 0;
   out_4935659974528521667[149] = 0;
   out_4935659974528521667[150] = 0;
   out_4935659974528521667[151] = 0;
   out_4935659974528521667[152] = 0;
   out_4935659974528521667[153] = 1.0;
   out_4935659974528521667[154] = 0;
   out_4935659974528521667[155] = 0;
   out_4935659974528521667[156] = 0;
   out_4935659974528521667[157] = 0;
   out_4935659974528521667[158] = 0;
   out_4935659974528521667[159] = 0;
   out_4935659974528521667[160] = 0;
   out_4935659974528521667[161] = 0;
   out_4935659974528521667[162] = 0;
   out_4935659974528521667[163] = 0;
   out_4935659974528521667[164] = 0;
   out_4935659974528521667[165] = 0;
   out_4935659974528521667[166] = 0;
   out_4935659974528521667[167] = 0;
   out_4935659974528521667[168] = 0;
   out_4935659974528521667[169] = 0;
   out_4935659974528521667[170] = 0;
   out_4935659974528521667[171] = 0;
   out_4935659974528521667[172] = 0;
   out_4935659974528521667[173] = 0;
   out_4935659974528521667[174] = 0;
   out_4935659974528521667[175] = 1.0;
   out_4935659974528521667[176] = 0;
   out_4935659974528521667[177] = 0;
   out_4935659974528521667[178] = 0;
   out_4935659974528521667[179] = 0;
   out_4935659974528521667[180] = 0;
   out_4935659974528521667[181] = 0;
   out_4935659974528521667[182] = 0;
   out_4935659974528521667[183] = 0;
   out_4935659974528521667[184] = 0;
   out_4935659974528521667[185] = 0;
   out_4935659974528521667[186] = 0;
   out_4935659974528521667[187] = 0;
   out_4935659974528521667[188] = 0;
   out_4935659974528521667[189] = 0;
   out_4935659974528521667[190] = 0;
   out_4935659974528521667[191] = 0;
   out_4935659974528521667[192] = 0;
   out_4935659974528521667[193] = 0;
   out_4935659974528521667[194] = 0;
   out_4935659974528521667[195] = 0;
   out_4935659974528521667[196] = 0;
   out_4935659974528521667[197] = 1.0;
   out_4935659974528521667[198] = 0;
   out_4935659974528521667[199] = 0;
   out_4935659974528521667[200] = 0;
   out_4935659974528521667[201] = 0;
   out_4935659974528521667[202] = 0;
   out_4935659974528521667[203] = 0;
   out_4935659974528521667[204] = 0;
   out_4935659974528521667[205] = 0;
   out_4935659974528521667[206] = 0;
   out_4935659974528521667[207] = 0;
   out_4935659974528521667[208] = 0;
   out_4935659974528521667[209] = 0;
   out_4935659974528521667[210] = 0;
   out_4935659974528521667[211] = 0;
   out_4935659974528521667[212] = 0;
   out_4935659974528521667[213] = 0;
   out_4935659974528521667[214] = 0;
   out_4935659974528521667[215] = 0;
   out_4935659974528521667[216] = 0;
   out_4935659974528521667[217] = 0;
   out_4935659974528521667[218] = 0;
   out_4935659974528521667[219] = 1.0;
   out_4935659974528521667[220] = 0;
   out_4935659974528521667[221] = 0;
   out_4935659974528521667[222] = 0;
   out_4935659974528521667[223] = 0;
   out_4935659974528521667[224] = 0;
   out_4935659974528521667[225] = 0;
   out_4935659974528521667[226] = 0;
   out_4935659974528521667[227] = 0;
   out_4935659974528521667[228] = 0;
   out_4935659974528521667[229] = 0;
   out_4935659974528521667[230] = 0;
   out_4935659974528521667[231] = 0;
   out_4935659974528521667[232] = 0;
   out_4935659974528521667[233] = 0;
   out_4935659974528521667[234] = 0;
   out_4935659974528521667[235] = 0;
   out_4935659974528521667[236] = 0;
   out_4935659974528521667[237] = 0;
   out_4935659974528521667[238] = 0;
   out_4935659974528521667[239] = 0;
   out_4935659974528521667[240] = 0;
   out_4935659974528521667[241] = 1.0;
   out_4935659974528521667[242] = 0;
   out_4935659974528521667[243] = 0;
   out_4935659974528521667[244] = 0;
   out_4935659974528521667[245] = 0;
   out_4935659974528521667[246] = 0;
   out_4935659974528521667[247] = 0;
   out_4935659974528521667[248] = 0;
   out_4935659974528521667[249] = 0;
   out_4935659974528521667[250] = 0;
   out_4935659974528521667[251] = 0;
   out_4935659974528521667[252] = 0;
   out_4935659974528521667[253] = 0;
   out_4935659974528521667[254] = 0;
   out_4935659974528521667[255] = 0;
   out_4935659974528521667[256] = 0;
   out_4935659974528521667[257] = 0;
   out_4935659974528521667[258] = 0;
   out_4935659974528521667[259] = 0;
   out_4935659974528521667[260] = 0;
   out_4935659974528521667[261] = 0;
   out_4935659974528521667[262] = 0;
   out_4935659974528521667[263] = 1.0;
   out_4935659974528521667[264] = 0;
   out_4935659974528521667[265] = 0;
   out_4935659974528521667[266] = 0;
   out_4935659974528521667[267] = 0;
   out_4935659974528521667[268] = 0;
   out_4935659974528521667[269] = 0;
   out_4935659974528521667[270] = 0;
   out_4935659974528521667[271] = 0;
   out_4935659974528521667[272] = 0;
   out_4935659974528521667[273] = 0;
   out_4935659974528521667[274] = 0;
   out_4935659974528521667[275] = 0;
   out_4935659974528521667[276] = 0;
   out_4935659974528521667[277] = 0;
   out_4935659974528521667[278] = 0;
   out_4935659974528521667[279] = 0;
   out_4935659974528521667[280] = 0;
   out_4935659974528521667[281] = 0;
   out_4935659974528521667[282] = 0;
   out_4935659974528521667[283] = 0;
   out_4935659974528521667[284] = 0;
   out_4935659974528521667[285] = 1.0;
   out_4935659974528521667[286] = 0;
   out_4935659974528521667[287] = 0;
   out_4935659974528521667[288] = 0;
   out_4935659974528521667[289] = 0;
   out_4935659974528521667[290] = 0;
   out_4935659974528521667[291] = 0;
   out_4935659974528521667[292] = 0;
   out_4935659974528521667[293] = 0;
   out_4935659974528521667[294] = 0;
   out_4935659974528521667[295] = 0;
   out_4935659974528521667[296] = 0;
   out_4935659974528521667[297] = 0;
   out_4935659974528521667[298] = 0;
   out_4935659974528521667[299] = 0;
   out_4935659974528521667[300] = 0;
   out_4935659974528521667[301] = 0;
   out_4935659974528521667[302] = 0;
   out_4935659974528521667[303] = 0;
   out_4935659974528521667[304] = 0;
   out_4935659974528521667[305] = 0;
   out_4935659974528521667[306] = 0;
   out_4935659974528521667[307] = 1.0;
   out_4935659974528521667[308] = 0;
   out_4935659974528521667[309] = 0;
   out_4935659974528521667[310] = 0;
   out_4935659974528521667[311] = 0;
   out_4935659974528521667[312] = 0;
   out_4935659974528521667[313] = 0;
   out_4935659974528521667[314] = 0;
   out_4935659974528521667[315] = 0;
   out_4935659974528521667[316] = 0;
   out_4935659974528521667[317] = 0;
   out_4935659974528521667[318] = 0;
   out_4935659974528521667[319] = 0;
   out_4935659974528521667[320] = 0;
   out_4935659974528521667[321] = 0;
   out_4935659974528521667[322] = 0;
   out_4935659974528521667[323] = 0;
   out_4935659974528521667[324] = 0;
   out_4935659974528521667[325] = 0;
   out_4935659974528521667[326] = 0;
   out_4935659974528521667[327] = 0;
   out_4935659974528521667[328] = 0;
   out_4935659974528521667[329] = 1.0;
   out_4935659974528521667[330] = 0;
   out_4935659974528521667[331] = 0;
   out_4935659974528521667[332] = 0;
   out_4935659974528521667[333] = 0;
   out_4935659974528521667[334] = 0;
   out_4935659974528521667[335] = 0;
   out_4935659974528521667[336] = 0;
   out_4935659974528521667[337] = 0;
   out_4935659974528521667[338] = 0;
   out_4935659974528521667[339] = 0;
   out_4935659974528521667[340] = 0;
   out_4935659974528521667[341] = 0;
   out_4935659974528521667[342] = 0;
   out_4935659974528521667[343] = 0;
   out_4935659974528521667[344] = 0;
   out_4935659974528521667[345] = 0;
   out_4935659974528521667[346] = 0;
   out_4935659974528521667[347] = 0;
   out_4935659974528521667[348] = 0;
   out_4935659974528521667[349] = 0;
   out_4935659974528521667[350] = 0;
   out_4935659974528521667[351] = 1.0;
   out_4935659974528521667[352] = 0;
   out_4935659974528521667[353] = 0;
   out_4935659974528521667[354] = 0;
   out_4935659974528521667[355] = 0;
   out_4935659974528521667[356] = 0;
   out_4935659974528521667[357] = 0;
   out_4935659974528521667[358] = 0;
   out_4935659974528521667[359] = 0;
   out_4935659974528521667[360] = 0;
   out_4935659974528521667[361] = 0;
   out_4935659974528521667[362] = 0;
   out_4935659974528521667[363] = 0;
   out_4935659974528521667[364] = 0;
   out_4935659974528521667[365] = 0;
   out_4935659974528521667[366] = 0;
   out_4935659974528521667[367] = 0;
   out_4935659974528521667[368] = 0;
   out_4935659974528521667[369] = 0;
   out_4935659974528521667[370] = 0;
   out_4935659974528521667[371] = 0;
   out_4935659974528521667[372] = 0;
   out_4935659974528521667[373] = 1.0;
   out_4935659974528521667[374] = 0;
   out_4935659974528521667[375] = 0;
   out_4935659974528521667[376] = 0;
   out_4935659974528521667[377] = 0;
   out_4935659974528521667[378] = 0;
   out_4935659974528521667[379] = 0;
   out_4935659974528521667[380] = 0;
   out_4935659974528521667[381] = 0;
   out_4935659974528521667[382] = 0;
   out_4935659974528521667[383] = 0;
   out_4935659974528521667[384] = 0;
   out_4935659974528521667[385] = 0;
   out_4935659974528521667[386] = 0;
   out_4935659974528521667[387] = 0;
   out_4935659974528521667[388] = 0;
   out_4935659974528521667[389] = 0;
   out_4935659974528521667[390] = 0;
   out_4935659974528521667[391] = 0;
   out_4935659974528521667[392] = 0;
   out_4935659974528521667[393] = 0;
   out_4935659974528521667[394] = 0;
   out_4935659974528521667[395] = 1.0;
   out_4935659974528521667[396] = 0;
   out_4935659974528521667[397] = 0;
   out_4935659974528521667[398] = 0;
   out_4935659974528521667[399] = 0;
   out_4935659974528521667[400] = 0;
   out_4935659974528521667[401] = 0;
   out_4935659974528521667[402] = 0;
   out_4935659974528521667[403] = 0;
   out_4935659974528521667[404] = 0;
   out_4935659974528521667[405] = 0;
   out_4935659974528521667[406] = 0;
   out_4935659974528521667[407] = 0;
   out_4935659974528521667[408] = 0;
   out_4935659974528521667[409] = 0;
   out_4935659974528521667[410] = 0;
   out_4935659974528521667[411] = 0;
   out_4935659974528521667[412] = 0;
   out_4935659974528521667[413] = 0;
   out_4935659974528521667[414] = 0;
   out_4935659974528521667[415] = 0;
   out_4935659974528521667[416] = 0;
   out_4935659974528521667[417] = 1.0;
   out_4935659974528521667[418] = 0;
   out_4935659974528521667[419] = 0;
   out_4935659974528521667[420] = 0;
   out_4935659974528521667[421] = 0;
   out_4935659974528521667[422] = 0;
   out_4935659974528521667[423] = 0;
   out_4935659974528521667[424] = 0;
   out_4935659974528521667[425] = 0;
   out_4935659974528521667[426] = 0;
   out_4935659974528521667[427] = 0;
   out_4935659974528521667[428] = 0;
   out_4935659974528521667[429] = 0;
   out_4935659974528521667[430] = 0;
   out_4935659974528521667[431] = 0;
   out_4935659974528521667[432] = 0;
   out_4935659974528521667[433] = 0;
   out_4935659974528521667[434] = 0;
   out_4935659974528521667[435] = 0;
   out_4935659974528521667[436] = 0;
   out_4935659974528521667[437] = 0;
   out_4935659974528521667[438] = 0;
   out_4935659974528521667[439] = 1.0;
   out_4935659974528521667[440] = 0;
   out_4935659974528521667[441] = 0;
   out_4935659974528521667[442] = 0;
   out_4935659974528521667[443] = 0;
   out_4935659974528521667[444] = 0;
   out_4935659974528521667[445] = 0;
   out_4935659974528521667[446] = 0;
   out_4935659974528521667[447] = 0;
   out_4935659974528521667[448] = 0;
   out_4935659974528521667[449] = 0;
   out_4935659974528521667[450] = 0;
   out_4935659974528521667[451] = 0;
   out_4935659974528521667[452] = 0;
   out_4935659974528521667[453] = 0;
   out_4935659974528521667[454] = 0;
   out_4935659974528521667[455] = 0;
   out_4935659974528521667[456] = 0;
   out_4935659974528521667[457] = 0;
   out_4935659974528521667[458] = 0;
   out_4935659974528521667[459] = 0;
   out_4935659974528521667[460] = 0;
   out_4935659974528521667[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1491263050808390229) {
   out_1491263050808390229[0] = dt*state[7] + state[0];
   out_1491263050808390229[1] = dt*state[8] + state[1];
   out_1491263050808390229[2] = dt*state[9] + state[2];
   out_1491263050808390229[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1491263050808390229[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1491263050808390229[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1491263050808390229[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1491263050808390229[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1491263050808390229[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1491263050808390229[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1491263050808390229[10] = state[10];
   out_1491263050808390229[11] = state[11];
   out_1491263050808390229[12] = state[12];
   out_1491263050808390229[13] = state[13];
   out_1491263050808390229[14] = state[14];
   out_1491263050808390229[15] = state[15];
   out_1491263050808390229[16] = state[16];
   out_1491263050808390229[17] = state[17];
   out_1491263050808390229[18] = state[18];
   out_1491263050808390229[19] = state[19];
   out_1491263050808390229[20] = state[20];
   out_1491263050808390229[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8117133176680196658) {
   out_8117133176680196658[0] = 1;
   out_8117133176680196658[1] = 0;
   out_8117133176680196658[2] = 0;
   out_8117133176680196658[3] = 0;
   out_8117133176680196658[4] = 0;
   out_8117133176680196658[5] = 0;
   out_8117133176680196658[6] = dt;
   out_8117133176680196658[7] = 0;
   out_8117133176680196658[8] = 0;
   out_8117133176680196658[9] = 0;
   out_8117133176680196658[10] = 0;
   out_8117133176680196658[11] = 0;
   out_8117133176680196658[12] = 0;
   out_8117133176680196658[13] = 0;
   out_8117133176680196658[14] = 0;
   out_8117133176680196658[15] = 0;
   out_8117133176680196658[16] = 0;
   out_8117133176680196658[17] = 0;
   out_8117133176680196658[18] = 0;
   out_8117133176680196658[19] = 0;
   out_8117133176680196658[20] = 0;
   out_8117133176680196658[21] = 0;
   out_8117133176680196658[22] = 1;
   out_8117133176680196658[23] = 0;
   out_8117133176680196658[24] = 0;
   out_8117133176680196658[25] = 0;
   out_8117133176680196658[26] = 0;
   out_8117133176680196658[27] = 0;
   out_8117133176680196658[28] = dt;
   out_8117133176680196658[29] = 0;
   out_8117133176680196658[30] = 0;
   out_8117133176680196658[31] = 0;
   out_8117133176680196658[32] = 0;
   out_8117133176680196658[33] = 0;
   out_8117133176680196658[34] = 0;
   out_8117133176680196658[35] = 0;
   out_8117133176680196658[36] = 0;
   out_8117133176680196658[37] = 0;
   out_8117133176680196658[38] = 0;
   out_8117133176680196658[39] = 0;
   out_8117133176680196658[40] = 0;
   out_8117133176680196658[41] = 0;
   out_8117133176680196658[42] = 0;
   out_8117133176680196658[43] = 0;
   out_8117133176680196658[44] = 1;
   out_8117133176680196658[45] = 0;
   out_8117133176680196658[46] = 0;
   out_8117133176680196658[47] = 0;
   out_8117133176680196658[48] = 0;
   out_8117133176680196658[49] = 0;
   out_8117133176680196658[50] = dt;
   out_8117133176680196658[51] = 0;
   out_8117133176680196658[52] = 0;
   out_8117133176680196658[53] = 0;
   out_8117133176680196658[54] = 0;
   out_8117133176680196658[55] = 0;
   out_8117133176680196658[56] = 0;
   out_8117133176680196658[57] = 0;
   out_8117133176680196658[58] = 0;
   out_8117133176680196658[59] = 0;
   out_8117133176680196658[60] = 0;
   out_8117133176680196658[61] = 0;
   out_8117133176680196658[62] = 0;
   out_8117133176680196658[63] = 0;
   out_8117133176680196658[64] = 0;
   out_8117133176680196658[65] = 0;
   out_8117133176680196658[66] = 1;
   out_8117133176680196658[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8117133176680196658[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8117133176680196658[69] = 0;
   out_8117133176680196658[70] = 0;
   out_8117133176680196658[71] = 0;
   out_8117133176680196658[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8117133176680196658[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8117133176680196658[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8117133176680196658[75] = 0;
   out_8117133176680196658[76] = 0;
   out_8117133176680196658[77] = 0;
   out_8117133176680196658[78] = 0;
   out_8117133176680196658[79] = 0;
   out_8117133176680196658[80] = 0;
   out_8117133176680196658[81] = 0;
   out_8117133176680196658[82] = 0;
   out_8117133176680196658[83] = 0;
   out_8117133176680196658[84] = 0;
   out_8117133176680196658[85] = 0;
   out_8117133176680196658[86] = 0;
   out_8117133176680196658[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8117133176680196658[88] = 1;
   out_8117133176680196658[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8117133176680196658[90] = 0;
   out_8117133176680196658[91] = 0;
   out_8117133176680196658[92] = 0;
   out_8117133176680196658[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8117133176680196658[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8117133176680196658[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8117133176680196658[96] = 0;
   out_8117133176680196658[97] = 0;
   out_8117133176680196658[98] = 0;
   out_8117133176680196658[99] = 0;
   out_8117133176680196658[100] = 0;
   out_8117133176680196658[101] = 0;
   out_8117133176680196658[102] = 0;
   out_8117133176680196658[103] = 0;
   out_8117133176680196658[104] = 0;
   out_8117133176680196658[105] = 0;
   out_8117133176680196658[106] = 0;
   out_8117133176680196658[107] = 0;
   out_8117133176680196658[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8117133176680196658[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8117133176680196658[110] = 1;
   out_8117133176680196658[111] = 0;
   out_8117133176680196658[112] = 0;
   out_8117133176680196658[113] = 0;
   out_8117133176680196658[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8117133176680196658[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8117133176680196658[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8117133176680196658[117] = 0;
   out_8117133176680196658[118] = 0;
   out_8117133176680196658[119] = 0;
   out_8117133176680196658[120] = 0;
   out_8117133176680196658[121] = 0;
   out_8117133176680196658[122] = 0;
   out_8117133176680196658[123] = 0;
   out_8117133176680196658[124] = 0;
   out_8117133176680196658[125] = 0;
   out_8117133176680196658[126] = 0;
   out_8117133176680196658[127] = 0;
   out_8117133176680196658[128] = 0;
   out_8117133176680196658[129] = 0;
   out_8117133176680196658[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8117133176680196658[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8117133176680196658[132] = 1;
   out_8117133176680196658[133] = 0;
   out_8117133176680196658[134] = 0;
   out_8117133176680196658[135] = 0;
   out_8117133176680196658[136] = 0;
   out_8117133176680196658[137] = 0;
   out_8117133176680196658[138] = 0;
   out_8117133176680196658[139] = 0;
   out_8117133176680196658[140] = 0;
   out_8117133176680196658[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8117133176680196658[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8117133176680196658[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8117133176680196658[144] = 0;
   out_8117133176680196658[145] = 0;
   out_8117133176680196658[146] = 0;
   out_8117133176680196658[147] = 0;
   out_8117133176680196658[148] = 0;
   out_8117133176680196658[149] = 0;
   out_8117133176680196658[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8117133176680196658[151] = 0;
   out_8117133176680196658[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8117133176680196658[153] = 0;
   out_8117133176680196658[154] = 1;
   out_8117133176680196658[155] = 0;
   out_8117133176680196658[156] = 0;
   out_8117133176680196658[157] = 0;
   out_8117133176680196658[158] = 0;
   out_8117133176680196658[159] = 0;
   out_8117133176680196658[160] = 0;
   out_8117133176680196658[161] = 0;
   out_8117133176680196658[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8117133176680196658[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8117133176680196658[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8117133176680196658[165] = 0;
   out_8117133176680196658[166] = 0;
   out_8117133176680196658[167] = 0;
   out_8117133176680196658[168] = 0;
   out_8117133176680196658[169] = 0;
   out_8117133176680196658[170] = 0;
   out_8117133176680196658[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8117133176680196658[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8117133176680196658[173] = 0;
   out_8117133176680196658[174] = 0;
   out_8117133176680196658[175] = 0;
   out_8117133176680196658[176] = 1;
   out_8117133176680196658[177] = 0;
   out_8117133176680196658[178] = 0;
   out_8117133176680196658[179] = 0;
   out_8117133176680196658[180] = 0;
   out_8117133176680196658[181] = 0;
   out_8117133176680196658[182] = 0;
   out_8117133176680196658[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8117133176680196658[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8117133176680196658[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8117133176680196658[186] = 0;
   out_8117133176680196658[187] = 0;
   out_8117133176680196658[188] = 0;
   out_8117133176680196658[189] = 0;
   out_8117133176680196658[190] = 0;
   out_8117133176680196658[191] = 0;
   out_8117133176680196658[192] = 0;
   out_8117133176680196658[193] = 0;
   out_8117133176680196658[194] = 0;
   out_8117133176680196658[195] = 0;
   out_8117133176680196658[196] = 0;
   out_8117133176680196658[197] = 0;
   out_8117133176680196658[198] = 1;
   out_8117133176680196658[199] = 0;
   out_8117133176680196658[200] = 0;
   out_8117133176680196658[201] = 0;
   out_8117133176680196658[202] = 0;
   out_8117133176680196658[203] = 0;
   out_8117133176680196658[204] = 0;
   out_8117133176680196658[205] = 0;
   out_8117133176680196658[206] = 0;
   out_8117133176680196658[207] = 0;
   out_8117133176680196658[208] = 0;
   out_8117133176680196658[209] = 0;
   out_8117133176680196658[210] = 0;
   out_8117133176680196658[211] = 0;
   out_8117133176680196658[212] = 0;
   out_8117133176680196658[213] = 0;
   out_8117133176680196658[214] = 0;
   out_8117133176680196658[215] = 0;
   out_8117133176680196658[216] = 0;
   out_8117133176680196658[217] = 0;
   out_8117133176680196658[218] = 0;
   out_8117133176680196658[219] = 0;
   out_8117133176680196658[220] = 1;
   out_8117133176680196658[221] = 0;
   out_8117133176680196658[222] = 0;
   out_8117133176680196658[223] = 0;
   out_8117133176680196658[224] = 0;
   out_8117133176680196658[225] = 0;
   out_8117133176680196658[226] = 0;
   out_8117133176680196658[227] = 0;
   out_8117133176680196658[228] = 0;
   out_8117133176680196658[229] = 0;
   out_8117133176680196658[230] = 0;
   out_8117133176680196658[231] = 0;
   out_8117133176680196658[232] = 0;
   out_8117133176680196658[233] = 0;
   out_8117133176680196658[234] = 0;
   out_8117133176680196658[235] = 0;
   out_8117133176680196658[236] = 0;
   out_8117133176680196658[237] = 0;
   out_8117133176680196658[238] = 0;
   out_8117133176680196658[239] = 0;
   out_8117133176680196658[240] = 0;
   out_8117133176680196658[241] = 0;
   out_8117133176680196658[242] = 1;
   out_8117133176680196658[243] = 0;
   out_8117133176680196658[244] = 0;
   out_8117133176680196658[245] = 0;
   out_8117133176680196658[246] = 0;
   out_8117133176680196658[247] = 0;
   out_8117133176680196658[248] = 0;
   out_8117133176680196658[249] = 0;
   out_8117133176680196658[250] = 0;
   out_8117133176680196658[251] = 0;
   out_8117133176680196658[252] = 0;
   out_8117133176680196658[253] = 0;
   out_8117133176680196658[254] = 0;
   out_8117133176680196658[255] = 0;
   out_8117133176680196658[256] = 0;
   out_8117133176680196658[257] = 0;
   out_8117133176680196658[258] = 0;
   out_8117133176680196658[259] = 0;
   out_8117133176680196658[260] = 0;
   out_8117133176680196658[261] = 0;
   out_8117133176680196658[262] = 0;
   out_8117133176680196658[263] = 0;
   out_8117133176680196658[264] = 1;
   out_8117133176680196658[265] = 0;
   out_8117133176680196658[266] = 0;
   out_8117133176680196658[267] = 0;
   out_8117133176680196658[268] = 0;
   out_8117133176680196658[269] = 0;
   out_8117133176680196658[270] = 0;
   out_8117133176680196658[271] = 0;
   out_8117133176680196658[272] = 0;
   out_8117133176680196658[273] = 0;
   out_8117133176680196658[274] = 0;
   out_8117133176680196658[275] = 0;
   out_8117133176680196658[276] = 0;
   out_8117133176680196658[277] = 0;
   out_8117133176680196658[278] = 0;
   out_8117133176680196658[279] = 0;
   out_8117133176680196658[280] = 0;
   out_8117133176680196658[281] = 0;
   out_8117133176680196658[282] = 0;
   out_8117133176680196658[283] = 0;
   out_8117133176680196658[284] = 0;
   out_8117133176680196658[285] = 0;
   out_8117133176680196658[286] = 1;
   out_8117133176680196658[287] = 0;
   out_8117133176680196658[288] = 0;
   out_8117133176680196658[289] = 0;
   out_8117133176680196658[290] = 0;
   out_8117133176680196658[291] = 0;
   out_8117133176680196658[292] = 0;
   out_8117133176680196658[293] = 0;
   out_8117133176680196658[294] = 0;
   out_8117133176680196658[295] = 0;
   out_8117133176680196658[296] = 0;
   out_8117133176680196658[297] = 0;
   out_8117133176680196658[298] = 0;
   out_8117133176680196658[299] = 0;
   out_8117133176680196658[300] = 0;
   out_8117133176680196658[301] = 0;
   out_8117133176680196658[302] = 0;
   out_8117133176680196658[303] = 0;
   out_8117133176680196658[304] = 0;
   out_8117133176680196658[305] = 0;
   out_8117133176680196658[306] = 0;
   out_8117133176680196658[307] = 0;
   out_8117133176680196658[308] = 1;
   out_8117133176680196658[309] = 0;
   out_8117133176680196658[310] = 0;
   out_8117133176680196658[311] = 0;
   out_8117133176680196658[312] = 0;
   out_8117133176680196658[313] = 0;
   out_8117133176680196658[314] = 0;
   out_8117133176680196658[315] = 0;
   out_8117133176680196658[316] = 0;
   out_8117133176680196658[317] = 0;
   out_8117133176680196658[318] = 0;
   out_8117133176680196658[319] = 0;
   out_8117133176680196658[320] = 0;
   out_8117133176680196658[321] = 0;
   out_8117133176680196658[322] = 0;
   out_8117133176680196658[323] = 0;
   out_8117133176680196658[324] = 0;
   out_8117133176680196658[325] = 0;
   out_8117133176680196658[326] = 0;
   out_8117133176680196658[327] = 0;
   out_8117133176680196658[328] = 0;
   out_8117133176680196658[329] = 0;
   out_8117133176680196658[330] = 1;
   out_8117133176680196658[331] = 0;
   out_8117133176680196658[332] = 0;
   out_8117133176680196658[333] = 0;
   out_8117133176680196658[334] = 0;
   out_8117133176680196658[335] = 0;
   out_8117133176680196658[336] = 0;
   out_8117133176680196658[337] = 0;
   out_8117133176680196658[338] = 0;
   out_8117133176680196658[339] = 0;
   out_8117133176680196658[340] = 0;
   out_8117133176680196658[341] = 0;
   out_8117133176680196658[342] = 0;
   out_8117133176680196658[343] = 0;
   out_8117133176680196658[344] = 0;
   out_8117133176680196658[345] = 0;
   out_8117133176680196658[346] = 0;
   out_8117133176680196658[347] = 0;
   out_8117133176680196658[348] = 0;
   out_8117133176680196658[349] = 0;
   out_8117133176680196658[350] = 0;
   out_8117133176680196658[351] = 0;
   out_8117133176680196658[352] = 1;
   out_8117133176680196658[353] = 0;
   out_8117133176680196658[354] = 0;
   out_8117133176680196658[355] = 0;
   out_8117133176680196658[356] = 0;
   out_8117133176680196658[357] = 0;
   out_8117133176680196658[358] = 0;
   out_8117133176680196658[359] = 0;
   out_8117133176680196658[360] = 0;
   out_8117133176680196658[361] = 0;
   out_8117133176680196658[362] = 0;
   out_8117133176680196658[363] = 0;
   out_8117133176680196658[364] = 0;
   out_8117133176680196658[365] = 0;
   out_8117133176680196658[366] = 0;
   out_8117133176680196658[367] = 0;
   out_8117133176680196658[368] = 0;
   out_8117133176680196658[369] = 0;
   out_8117133176680196658[370] = 0;
   out_8117133176680196658[371] = 0;
   out_8117133176680196658[372] = 0;
   out_8117133176680196658[373] = 0;
   out_8117133176680196658[374] = 1;
   out_8117133176680196658[375] = 0;
   out_8117133176680196658[376] = 0;
   out_8117133176680196658[377] = 0;
   out_8117133176680196658[378] = 0;
   out_8117133176680196658[379] = 0;
   out_8117133176680196658[380] = 0;
   out_8117133176680196658[381] = 0;
   out_8117133176680196658[382] = 0;
   out_8117133176680196658[383] = 0;
   out_8117133176680196658[384] = 0;
   out_8117133176680196658[385] = 0;
   out_8117133176680196658[386] = 0;
   out_8117133176680196658[387] = 0;
   out_8117133176680196658[388] = 0;
   out_8117133176680196658[389] = 0;
   out_8117133176680196658[390] = 0;
   out_8117133176680196658[391] = 0;
   out_8117133176680196658[392] = 0;
   out_8117133176680196658[393] = 0;
   out_8117133176680196658[394] = 0;
   out_8117133176680196658[395] = 0;
   out_8117133176680196658[396] = 1;
   out_8117133176680196658[397] = 0;
   out_8117133176680196658[398] = 0;
   out_8117133176680196658[399] = 0;
   out_8117133176680196658[400] = 0;
   out_8117133176680196658[401] = 0;
   out_8117133176680196658[402] = 0;
   out_8117133176680196658[403] = 0;
   out_8117133176680196658[404] = 0;
   out_8117133176680196658[405] = 0;
   out_8117133176680196658[406] = 0;
   out_8117133176680196658[407] = 0;
   out_8117133176680196658[408] = 0;
   out_8117133176680196658[409] = 0;
   out_8117133176680196658[410] = 0;
   out_8117133176680196658[411] = 0;
   out_8117133176680196658[412] = 0;
   out_8117133176680196658[413] = 0;
   out_8117133176680196658[414] = 0;
   out_8117133176680196658[415] = 0;
   out_8117133176680196658[416] = 0;
   out_8117133176680196658[417] = 0;
   out_8117133176680196658[418] = 1;
   out_8117133176680196658[419] = 0;
   out_8117133176680196658[420] = 0;
   out_8117133176680196658[421] = 0;
   out_8117133176680196658[422] = 0;
   out_8117133176680196658[423] = 0;
   out_8117133176680196658[424] = 0;
   out_8117133176680196658[425] = 0;
   out_8117133176680196658[426] = 0;
   out_8117133176680196658[427] = 0;
   out_8117133176680196658[428] = 0;
   out_8117133176680196658[429] = 0;
   out_8117133176680196658[430] = 0;
   out_8117133176680196658[431] = 0;
   out_8117133176680196658[432] = 0;
   out_8117133176680196658[433] = 0;
   out_8117133176680196658[434] = 0;
   out_8117133176680196658[435] = 0;
   out_8117133176680196658[436] = 0;
   out_8117133176680196658[437] = 0;
   out_8117133176680196658[438] = 0;
   out_8117133176680196658[439] = 0;
   out_8117133176680196658[440] = 1;
}
void h_4(double *state, double *unused, double *out_405206402584394540) {
   out_405206402584394540[0] = state[10] + state[13];
   out_405206402584394540[1] = state[11] + state[14];
   out_405206402584394540[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4994686547697486725) {
   out_4994686547697486725[0] = 0;
   out_4994686547697486725[1] = 0;
   out_4994686547697486725[2] = 0;
   out_4994686547697486725[3] = 0;
   out_4994686547697486725[4] = 0;
   out_4994686547697486725[5] = 0;
   out_4994686547697486725[6] = 0;
   out_4994686547697486725[7] = 0;
   out_4994686547697486725[8] = 0;
   out_4994686547697486725[9] = 0;
   out_4994686547697486725[10] = 1;
   out_4994686547697486725[11] = 0;
   out_4994686547697486725[12] = 0;
   out_4994686547697486725[13] = 1;
   out_4994686547697486725[14] = 0;
   out_4994686547697486725[15] = 0;
   out_4994686547697486725[16] = 0;
   out_4994686547697486725[17] = 0;
   out_4994686547697486725[18] = 0;
   out_4994686547697486725[19] = 0;
   out_4994686547697486725[20] = 0;
   out_4994686547697486725[21] = 0;
   out_4994686547697486725[22] = 0;
   out_4994686547697486725[23] = 0;
   out_4994686547697486725[24] = 0;
   out_4994686547697486725[25] = 0;
   out_4994686547697486725[26] = 0;
   out_4994686547697486725[27] = 0;
   out_4994686547697486725[28] = 0;
   out_4994686547697486725[29] = 0;
   out_4994686547697486725[30] = 0;
   out_4994686547697486725[31] = 0;
   out_4994686547697486725[32] = 0;
   out_4994686547697486725[33] = 1;
   out_4994686547697486725[34] = 0;
   out_4994686547697486725[35] = 0;
   out_4994686547697486725[36] = 1;
   out_4994686547697486725[37] = 0;
   out_4994686547697486725[38] = 0;
   out_4994686547697486725[39] = 0;
   out_4994686547697486725[40] = 0;
   out_4994686547697486725[41] = 0;
   out_4994686547697486725[42] = 0;
   out_4994686547697486725[43] = 0;
   out_4994686547697486725[44] = 0;
   out_4994686547697486725[45] = 0;
   out_4994686547697486725[46] = 0;
   out_4994686547697486725[47] = 0;
   out_4994686547697486725[48] = 0;
   out_4994686547697486725[49] = 0;
   out_4994686547697486725[50] = 0;
   out_4994686547697486725[51] = 0;
   out_4994686547697486725[52] = 0;
   out_4994686547697486725[53] = 0;
   out_4994686547697486725[54] = 0;
   out_4994686547697486725[55] = 0;
   out_4994686547697486725[56] = 1;
   out_4994686547697486725[57] = 0;
   out_4994686547697486725[58] = 0;
   out_4994686547697486725[59] = 1;
   out_4994686547697486725[60] = 0;
   out_4994686547697486725[61] = 0;
   out_4994686547697486725[62] = 0;
   out_4994686547697486725[63] = 0;
   out_4994686547697486725[64] = 0;
   out_4994686547697486725[65] = 0;
}
void h_9(double *state, double *unused, double *out_2151508975143286110) {
   out_2151508975143286110[0] = state[10];
   out_2151508975143286110[1] = state[11];
   out_2151508975143286110[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6164838590747617421) {
   out_6164838590747617421[0] = 0;
   out_6164838590747617421[1] = 0;
   out_6164838590747617421[2] = 0;
   out_6164838590747617421[3] = 0;
   out_6164838590747617421[4] = 0;
   out_6164838590747617421[5] = 0;
   out_6164838590747617421[6] = 0;
   out_6164838590747617421[7] = 0;
   out_6164838590747617421[8] = 0;
   out_6164838590747617421[9] = 0;
   out_6164838590747617421[10] = 1;
   out_6164838590747617421[11] = 0;
   out_6164838590747617421[12] = 0;
   out_6164838590747617421[13] = 0;
   out_6164838590747617421[14] = 0;
   out_6164838590747617421[15] = 0;
   out_6164838590747617421[16] = 0;
   out_6164838590747617421[17] = 0;
   out_6164838590747617421[18] = 0;
   out_6164838590747617421[19] = 0;
   out_6164838590747617421[20] = 0;
   out_6164838590747617421[21] = 0;
   out_6164838590747617421[22] = 0;
   out_6164838590747617421[23] = 0;
   out_6164838590747617421[24] = 0;
   out_6164838590747617421[25] = 0;
   out_6164838590747617421[26] = 0;
   out_6164838590747617421[27] = 0;
   out_6164838590747617421[28] = 0;
   out_6164838590747617421[29] = 0;
   out_6164838590747617421[30] = 0;
   out_6164838590747617421[31] = 0;
   out_6164838590747617421[32] = 0;
   out_6164838590747617421[33] = 1;
   out_6164838590747617421[34] = 0;
   out_6164838590747617421[35] = 0;
   out_6164838590747617421[36] = 0;
   out_6164838590747617421[37] = 0;
   out_6164838590747617421[38] = 0;
   out_6164838590747617421[39] = 0;
   out_6164838590747617421[40] = 0;
   out_6164838590747617421[41] = 0;
   out_6164838590747617421[42] = 0;
   out_6164838590747617421[43] = 0;
   out_6164838590747617421[44] = 0;
   out_6164838590747617421[45] = 0;
   out_6164838590747617421[46] = 0;
   out_6164838590747617421[47] = 0;
   out_6164838590747617421[48] = 0;
   out_6164838590747617421[49] = 0;
   out_6164838590747617421[50] = 0;
   out_6164838590747617421[51] = 0;
   out_6164838590747617421[52] = 0;
   out_6164838590747617421[53] = 0;
   out_6164838590747617421[54] = 0;
   out_6164838590747617421[55] = 0;
   out_6164838590747617421[56] = 1;
   out_6164838590747617421[57] = 0;
   out_6164838590747617421[58] = 0;
   out_6164838590747617421[59] = 0;
   out_6164838590747617421[60] = 0;
   out_6164838590747617421[61] = 0;
   out_6164838590747617421[62] = 0;
   out_6164838590747617421[63] = 0;
   out_6164838590747617421[64] = 0;
   out_6164838590747617421[65] = 0;
}
void h_10(double *state, double *unused, double *out_9176198998440989683) {
   out_9176198998440989683[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9176198998440989683[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9176198998440989683[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_244147991604393521) {
   out_244147991604393521[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_244147991604393521[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_244147991604393521[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_244147991604393521[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244147991604393521[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244147991604393521[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244147991604393521[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244147991604393521[7] = 0;
   out_244147991604393521[8] = 0;
   out_244147991604393521[9] = 0;
   out_244147991604393521[10] = 0;
   out_244147991604393521[11] = 0;
   out_244147991604393521[12] = 0;
   out_244147991604393521[13] = 0;
   out_244147991604393521[14] = 0;
   out_244147991604393521[15] = 0;
   out_244147991604393521[16] = 1;
   out_244147991604393521[17] = 0;
   out_244147991604393521[18] = 0;
   out_244147991604393521[19] = 1;
   out_244147991604393521[20] = 0;
   out_244147991604393521[21] = 0;
   out_244147991604393521[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_244147991604393521[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_244147991604393521[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_244147991604393521[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244147991604393521[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244147991604393521[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244147991604393521[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244147991604393521[29] = 0;
   out_244147991604393521[30] = 0;
   out_244147991604393521[31] = 0;
   out_244147991604393521[32] = 0;
   out_244147991604393521[33] = 0;
   out_244147991604393521[34] = 0;
   out_244147991604393521[35] = 0;
   out_244147991604393521[36] = 0;
   out_244147991604393521[37] = 0;
   out_244147991604393521[38] = 0;
   out_244147991604393521[39] = 1;
   out_244147991604393521[40] = 0;
   out_244147991604393521[41] = 0;
   out_244147991604393521[42] = 1;
   out_244147991604393521[43] = 0;
   out_244147991604393521[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_244147991604393521[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_244147991604393521[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_244147991604393521[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244147991604393521[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244147991604393521[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244147991604393521[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244147991604393521[51] = 0;
   out_244147991604393521[52] = 0;
   out_244147991604393521[53] = 0;
   out_244147991604393521[54] = 0;
   out_244147991604393521[55] = 0;
   out_244147991604393521[56] = 0;
   out_244147991604393521[57] = 0;
   out_244147991604393521[58] = 0;
   out_244147991604393521[59] = 0;
   out_244147991604393521[60] = 0;
   out_244147991604393521[61] = 0;
   out_244147991604393521[62] = 1;
   out_244147991604393521[63] = 0;
   out_244147991604393521[64] = 0;
   out_244147991604393521[65] = 1;
}
void h_12(double *state, double *unused, double *out_1284073685258936711) {
   out_1284073685258936711[0] = state[0];
   out_1284073685258936711[1] = state[1];
   out_1284073685258936711[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8432601117980103096) {
   out_8432601117980103096[0] = 1;
   out_8432601117980103096[1] = 0;
   out_8432601117980103096[2] = 0;
   out_8432601117980103096[3] = 0;
   out_8432601117980103096[4] = 0;
   out_8432601117980103096[5] = 0;
   out_8432601117980103096[6] = 0;
   out_8432601117980103096[7] = 0;
   out_8432601117980103096[8] = 0;
   out_8432601117980103096[9] = 0;
   out_8432601117980103096[10] = 0;
   out_8432601117980103096[11] = 0;
   out_8432601117980103096[12] = 0;
   out_8432601117980103096[13] = 0;
   out_8432601117980103096[14] = 0;
   out_8432601117980103096[15] = 0;
   out_8432601117980103096[16] = 0;
   out_8432601117980103096[17] = 0;
   out_8432601117980103096[18] = 0;
   out_8432601117980103096[19] = 0;
   out_8432601117980103096[20] = 0;
   out_8432601117980103096[21] = 0;
   out_8432601117980103096[22] = 0;
   out_8432601117980103096[23] = 1;
   out_8432601117980103096[24] = 0;
   out_8432601117980103096[25] = 0;
   out_8432601117980103096[26] = 0;
   out_8432601117980103096[27] = 0;
   out_8432601117980103096[28] = 0;
   out_8432601117980103096[29] = 0;
   out_8432601117980103096[30] = 0;
   out_8432601117980103096[31] = 0;
   out_8432601117980103096[32] = 0;
   out_8432601117980103096[33] = 0;
   out_8432601117980103096[34] = 0;
   out_8432601117980103096[35] = 0;
   out_8432601117980103096[36] = 0;
   out_8432601117980103096[37] = 0;
   out_8432601117980103096[38] = 0;
   out_8432601117980103096[39] = 0;
   out_8432601117980103096[40] = 0;
   out_8432601117980103096[41] = 0;
   out_8432601117980103096[42] = 0;
   out_8432601117980103096[43] = 0;
   out_8432601117980103096[44] = 0;
   out_8432601117980103096[45] = 0;
   out_8432601117980103096[46] = 1;
   out_8432601117980103096[47] = 0;
   out_8432601117980103096[48] = 0;
   out_8432601117980103096[49] = 0;
   out_8432601117980103096[50] = 0;
   out_8432601117980103096[51] = 0;
   out_8432601117980103096[52] = 0;
   out_8432601117980103096[53] = 0;
   out_8432601117980103096[54] = 0;
   out_8432601117980103096[55] = 0;
   out_8432601117980103096[56] = 0;
   out_8432601117980103096[57] = 0;
   out_8432601117980103096[58] = 0;
   out_8432601117980103096[59] = 0;
   out_8432601117980103096[60] = 0;
   out_8432601117980103096[61] = 0;
   out_8432601117980103096[62] = 0;
   out_8432601117980103096[63] = 0;
   out_8432601117980103096[64] = 0;
   out_8432601117980103096[65] = 0;
}
void h_35(double *state, double *unused, double *out_3644461868441878761) {
   out_3644461868441878761[0] = state[7];
   out_3644461868441878761[1] = state[8];
   out_3644461868441878761[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8361348605070094101) {
   out_8361348605070094101[0] = 0;
   out_8361348605070094101[1] = 0;
   out_8361348605070094101[2] = 0;
   out_8361348605070094101[3] = 0;
   out_8361348605070094101[4] = 0;
   out_8361348605070094101[5] = 0;
   out_8361348605070094101[6] = 0;
   out_8361348605070094101[7] = 1;
   out_8361348605070094101[8] = 0;
   out_8361348605070094101[9] = 0;
   out_8361348605070094101[10] = 0;
   out_8361348605070094101[11] = 0;
   out_8361348605070094101[12] = 0;
   out_8361348605070094101[13] = 0;
   out_8361348605070094101[14] = 0;
   out_8361348605070094101[15] = 0;
   out_8361348605070094101[16] = 0;
   out_8361348605070094101[17] = 0;
   out_8361348605070094101[18] = 0;
   out_8361348605070094101[19] = 0;
   out_8361348605070094101[20] = 0;
   out_8361348605070094101[21] = 0;
   out_8361348605070094101[22] = 0;
   out_8361348605070094101[23] = 0;
   out_8361348605070094101[24] = 0;
   out_8361348605070094101[25] = 0;
   out_8361348605070094101[26] = 0;
   out_8361348605070094101[27] = 0;
   out_8361348605070094101[28] = 0;
   out_8361348605070094101[29] = 0;
   out_8361348605070094101[30] = 1;
   out_8361348605070094101[31] = 0;
   out_8361348605070094101[32] = 0;
   out_8361348605070094101[33] = 0;
   out_8361348605070094101[34] = 0;
   out_8361348605070094101[35] = 0;
   out_8361348605070094101[36] = 0;
   out_8361348605070094101[37] = 0;
   out_8361348605070094101[38] = 0;
   out_8361348605070094101[39] = 0;
   out_8361348605070094101[40] = 0;
   out_8361348605070094101[41] = 0;
   out_8361348605070094101[42] = 0;
   out_8361348605070094101[43] = 0;
   out_8361348605070094101[44] = 0;
   out_8361348605070094101[45] = 0;
   out_8361348605070094101[46] = 0;
   out_8361348605070094101[47] = 0;
   out_8361348605070094101[48] = 0;
   out_8361348605070094101[49] = 0;
   out_8361348605070094101[50] = 0;
   out_8361348605070094101[51] = 0;
   out_8361348605070094101[52] = 0;
   out_8361348605070094101[53] = 1;
   out_8361348605070094101[54] = 0;
   out_8361348605070094101[55] = 0;
   out_8361348605070094101[56] = 0;
   out_8361348605070094101[57] = 0;
   out_8361348605070094101[58] = 0;
   out_8361348605070094101[59] = 0;
   out_8361348605070094101[60] = 0;
   out_8361348605070094101[61] = 0;
   out_8361348605070094101[62] = 0;
   out_8361348605070094101[63] = 0;
   out_8361348605070094101[64] = 0;
   out_8361348605070094101[65] = 0;
}
void h_32(double *state, double *unused, double *out_7564506732801241555) {
   out_7564506732801241555[0] = state[3];
   out_7564506732801241555[1] = state[4];
   out_7564506732801241555[2] = state[5];
   out_7564506732801241555[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8492513390010834570) {
   out_8492513390010834570[0] = 0;
   out_8492513390010834570[1] = 0;
   out_8492513390010834570[2] = 0;
   out_8492513390010834570[3] = 1;
   out_8492513390010834570[4] = 0;
   out_8492513390010834570[5] = 0;
   out_8492513390010834570[6] = 0;
   out_8492513390010834570[7] = 0;
   out_8492513390010834570[8] = 0;
   out_8492513390010834570[9] = 0;
   out_8492513390010834570[10] = 0;
   out_8492513390010834570[11] = 0;
   out_8492513390010834570[12] = 0;
   out_8492513390010834570[13] = 0;
   out_8492513390010834570[14] = 0;
   out_8492513390010834570[15] = 0;
   out_8492513390010834570[16] = 0;
   out_8492513390010834570[17] = 0;
   out_8492513390010834570[18] = 0;
   out_8492513390010834570[19] = 0;
   out_8492513390010834570[20] = 0;
   out_8492513390010834570[21] = 0;
   out_8492513390010834570[22] = 0;
   out_8492513390010834570[23] = 0;
   out_8492513390010834570[24] = 0;
   out_8492513390010834570[25] = 0;
   out_8492513390010834570[26] = 1;
   out_8492513390010834570[27] = 0;
   out_8492513390010834570[28] = 0;
   out_8492513390010834570[29] = 0;
   out_8492513390010834570[30] = 0;
   out_8492513390010834570[31] = 0;
   out_8492513390010834570[32] = 0;
   out_8492513390010834570[33] = 0;
   out_8492513390010834570[34] = 0;
   out_8492513390010834570[35] = 0;
   out_8492513390010834570[36] = 0;
   out_8492513390010834570[37] = 0;
   out_8492513390010834570[38] = 0;
   out_8492513390010834570[39] = 0;
   out_8492513390010834570[40] = 0;
   out_8492513390010834570[41] = 0;
   out_8492513390010834570[42] = 0;
   out_8492513390010834570[43] = 0;
   out_8492513390010834570[44] = 0;
   out_8492513390010834570[45] = 0;
   out_8492513390010834570[46] = 0;
   out_8492513390010834570[47] = 0;
   out_8492513390010834570[48] = 0;
   out_8492513390010834570[49] = 1;
   out_8492513390010834570[50] = 0;
   out_8492513390010834570[51] = 0;
   out_8492513390010834570[52] = 0;
   out_8492513390010834570[53] = 0;
   out_8492513390010834570[54] = 0;
   out_8492513390010834570[55] = 0;
   out_8492513390010834570[56] = 0;
   out_8492513390010834570[57] = 0;
   out_8492513390010834570[58] = 0;
   out_8492513390010834570[59] = 0;
   out_8492513390010834570[60] = 0;
   out_8492513390010834570[61] = 0;
   out_8492513390010834570[62] = 0;
   out_8492513390010834570[63] = 0;
   out_8492513390010834570[64] = 0;
   out_8492513390010834570[65] = 0;
   out_8492513390010834570[66] = 0;
   out_8492513390010834570[67] = 0;
   out_8492513390010834570[68] = 0;
   out_8492513390010834570[69] = 0;
   out_8492513390010834570[70] = 0;
   out_8492513390010834570[71] = 0;
   out_8492513390010834570[72] = 1;
   out_8492513390010834570[73] = 0;
   out_8492513390010834570[74] = 0;
   out_8492513390010834570[75] = 0;
   out_8492513390010834570[76] = 0;
   out_8492513390010834570[77] = 0;
   out_8492513390010834570[78] = 0;
   out_8492513390010834570[79] = 0;
   out_8492513390010834570[80] = 0;
   out_8492513390010834570[81] = 0;
   out_8492513390010834570[82] = 0;
   out_8492513390010834570[83] = 0;
   out_8492513390010834570[84] = 0;
   out_8492513390010834570[85] = 0;
   out_8492513390010834570[86] = 0;
   out_8492513390010834570[87] = 0;
}
void h_13(double *state, double *unused, double *out_7899918884651125118) {
   out_7899918884651125118[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7899918884651125118[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7899918884651125118[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5068259913659727943) {
   out_5068259913659727943[0] = 0;
   out_5068259913659727943[1] = 0;
   out_5068259913659727943[2] = 0;
   out_5068259913659727943[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5068259913659727943[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5068259913659727943[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5068259913659727943[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5068259913659727943[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5068259913659727943[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5068259913659727943[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5068259913659727943[10] = 0;
   out_5068259913659727943[11] = 0;
   out_5068259913659727943[12] = 0;
   out_5068259913659727943[13] = 0;
   out_5068259913659727943[14] = 0;
   out_5068259913659727943[15] = 0;
   out_5068259913659727943[16] = 0;
   out_5068259913659727943[17] = 0;
   out_5068259913659727943[18] = 0;
   out_5068259913659727943[19] = 0;
   out_5068259913659727943[20] = 0;
   out_5068259913659727943[21] = 0;
   out_5068259913659727943[22] = 0;
   out_5068259913659727943[23] = 0;
   out_5068259913659727943[24] = 0;
   out_5068259913659727943[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5068259913659727943[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5068259913659727943[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5068259913659727943[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5068259913659727943[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5068259913659727943[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5068259913659727943[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5068259913659727943[32] = 0;
   out_5068259913659727943[33] = 0;
   out_5068259913659727943[34] = 0;
   out_5068259913659727943[35] = 0;
   out_5068259913659727943[36] = 0;
   out_5068259913659727943[37] = 0;
   out_5068259913659727943[38] = 0;
   out_5068259913659727943[39] = 0;
   out_5068259913659727943[40] = 0;
   out_5068259913659727943[41] = 0;
   out_5068259913659727943[42] = 0;
   out_5068259913659727943[43] = 0;
   out_5068259913659727943[44] = 0;
   out_5068259913659727943[45] = 0;
   out_5068259913659727943[46] = 0;
   out_5068259913659727943[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5068259913659727943[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5068259913659727943[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5068259913659727943[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5068259913659727943[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5068259913659727943[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5068259913659727943[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5068259913659727943[54] = 0;
   out_5068259913659727943[55] = 0;
   out_5068259913659727943[56] = 0;
   out_5068259913659727943[57] = 0;
   out_5068259913659727943[58] = 0;
   out_5068259913659727943[59] = 0;
   out_5068259913659727943[60] = 0;
   out_5068259913659727943[61] = 0;
   out_5068259913659727943[62] = 0;
   out_5068259913659727943[63] = 0;
   out_5068259913659727943[64] = 0;
   out_5068259913659727943[65] = 0;
}
void h_14(double *state, double *unused, double *out_2151508975143286110) {
   out_2151508975143286110[0] = state[10];
   out_2151508975143286110[1] = state[11];
   out_2151508975143286110[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6164838590747617421) {
   out_6164838590747617421[0] = 0;
   out_6164838590747617421[1] = 0;
   out_6164838590747617421[2] = 0;
   out_6164838590747617421[3] = 0;
   out_6164838590747617421[4] = 0;
   out_6164838590747617421[5] = 0;
   out_6164838590747617421[6] = 0;
   out_6164838590747617421[7] = 0;
   out_6164838590747617421[8] = 0;
   out_6164838590747617421[9] = 0;
   out_6164838590747617421[10] = 1;
   out_6164838590747617421[11] = 0;
   out_6164838590747617421[12] = 0;
   out_6164838590747617421[13] = 0;
   out_6164838590747617421[14] = 0;
   out_6164838590747617421[15] = 0;
   out_6164838590747617421[16] = 0;
   out_6164838590747617421[17] = 0;
   out_6164838590747617421[18] = 0;
   out_6164838590747617421[19] = 0;
   out_6164838590747617421[20] = 0;
   out_6164838590747617421[21] = 0;
   out_6164838590747617421[22] = 0;
   out_6164838590747617421[23] = 0;
   out_6164838590747617421[24] = 0;
   out_6164838590747617421[25] = 0;
   out_6164838590747617421[26] = 0;
   out_6164838590747617421[27] = 0;
   out_6164838590747617421[28] = 0;
   out_6164838590747617421[29] = 0;
   out_6164838590747617421[30] = 0;
   out_6164838590747617421[31] = 0;
   out_6164838590747617421[32] = 0;
   out_6164838590747617421[33] = 1;
   out_6164838590747617421[34] = 0;
   out_6164838590747617421[35] = 0;
   out_6164838590747617421[36] = 0;
   out_6164838590747617421[37] = 0;
   out_6164838590747617421[38] = 0;
   out_6164838590747617421[39] = 0;
   out_6164838590747617421[40] = 0;
   out_6164838590747617421[41] = 0;
   out_6164838590747617421[42] = 0;
   out_6164838590747617421[43] = 0;
   out_6164838590747617421[44] = 0;
   out_6164838590747617421[45] = 0;
   out_6164838590747617421[46] = 0;
   out_6164838590747617421[47] = 0;
   out_6164838590747617421[48] = 0;
   out_6164838590747617421[49] = 0;
   out_6164838590747617421[50] = 0;
   out_6164838590747617421[51] = 0;
   out_6164838590747617421[52] = 0;
   out_6164838590747617421[53] = 0;
   out_6164838590747617421[54] = 0;
   out_6164838590747617421[55] = 0;
   out_6164838590747617421[56] = 1;
   out_6164838590747617421[57] = 0;
   out_6164838590747617421[58] = 0;
   out_6164838590747617421[59] = 0;
   out_6164838590747617421[60] = 0;
   out_6164838590747617421[61] = 0;
   out_6164838590747617421[62] = 0;
   out_6164838590747617421[63] = 0;
   out_6164838590747617421[64] = 0;
   out_6164838590747617421[65] = 0;
}
void h_33(double *state, double *unused, double *out_4405361491101812079) {
   out_4405361491101812079[0] = state[16];
   out_4405361491101812079[1] = state[17];
   out_4405361491101812079[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6934838464000599911) {
   out_6934838464000599911[0] = 0;
   out_6934838464000599911[1] = 0;
   out_6934838464000599911[2] = 0;
   out_6934838464000599911[3] = 0;
   out_6934838464000599911[4] = 0;
   out_6934838464000599911[5] = 0;
   out_6934838464000599911[6] = 0;
   out_6934838464000599911[7] = 0;
   out_6934838464000599911[8] = 0;
   out_6934838464000599911[9] = 0;
   out_6934838464000599911[10] = 0;
   out_6934838464000599911[11] = 0;
   out_6934838464000599911[12] = 0;
   out_6934838464000599911[13] = 0;
   out_6934838464000599911[14] = 0;
   out_6934838464000599911[15] = 0;
   out_6934838464000599911[16] = 1;
   out_6934838464000599911[17] = 0;
   out_6934838464000599911[18] = 0;
   out_6934838464000599911[19] = 0;
   out_6934838464000599911[20] = 0;
   out_6934838464000599911[21] = 0;
   out_6934838464000599911[22] = 0;
   out_6934838464000599911[23] = 0;
   out_6934838464000599911[24] = 0;
   out_6934838464000599911[25] = 0;
   out_6934838464000599911[26] = 0;
   out_6934838464000599911[27] = 0;
   out_6934838464000599911[28] = 0;
   out_6934838464000599911[29] = 0;
   out_6934838464000599911[30] = 0;
   out_6934838464000599911[31] = 0;
   out_6934838464000599911[32] = 0;
   out_6934838464000599911[33] = 0;
   out_6934838464000599911[34] = 0;
   out_6934838464000599911[35] = 0;
   out_6934838464000599911[36] = 0;
   out_6934838464000599911[37] = 0;
   out_6934838464000599911[38] = 0;
   out_6934838464000599911[39] = 1;
   out_6934838464000599911[40] = 0;
   out_6934838464000599911[41] = 0;
   out_6934838464000599911[42] = 0;
   out_6934838464000599911[43] = 0;
   out_6934838464000599911[44] = 0;
   out_6934838464000599911[45] = 0;
   out_6934838464000599911[46] = 0;
   out_6934838464000599911[47] = 0;
   out_6934838464000599911[48] = 0;
   out_6934838464000599911[49] = 0;
   out_6934838464000599911[50] = 0;
   out_6934838464000599911[51] = 0;
   out_6934838464000599911[52] = 0;
   out_6934838464000599911[53] = 0;
   out_6934838464000599911[54] = 0;
   out_6934838464000599911[55] = 0;
   out_6934838464000599911[56] = 0;
   out_6934838464000599911[57] = 0;
   out_6934838464000599911[58] = 0;
   out_6934838464000599911[59] = 0;
   out_6934838464000599911[60] = 0;
   out_6934838464000599911[61] = 0;
   out_6934838464000599911[62] = 1;
   out_6934838464000599911[63] = 0;
   out_6934838464000599911[64] = 0;
   out_6934838464000599911[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6232700668869886557) {
  H(in_vec, out_6232700668869886557);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1478261554725453242) {
  err_fun(nom_x, delta_x, out_1478261554725453242);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7358232558062317751) {
  inv_err_fun(nom_x, true_x, out_7358232558062317751);
}
void live_H_mod_fun(double *state, double *out_4935659974528521667) {
  H_mod_fun(state, out_4935659974528521667);
}
void live_f_fun(double *state, double dt, double *out_1491263050808390229) {
  f_fun(state,  dt, out_1491263050808390229);
}
void live_F_fun(double *state, double dt, double *out_8117133176680196658) {
  F_fun(state,  dt, out_8117133176680196658);
}
void live_h_4(double *state, double *unused, double *out_405206402584394540) {
  h_4(state, unused, out_405206402584394540);
}
void live_H_4(double *state, double *unused, double *out_4994686547697486725) {
  H_4(state, unused, out_4994686547697486725);
}
void live_h_9(double *state, double *unused, double *out_2151508975143286110) {
  h_9(state, unused, out_2151508975143286110);
}
void live_H_9(double *state, double *unused, double *out_6164838590747617421) {
  H_9(state, unused, out_6164838590747617421);
}
void live_h_10(double *state, double *unused, double *out_9176198998440989683) {
  h_10(state, unused, out_9176198998440989683);
}
void live_H_10(double *state, double *unused, double *out_244147991604393521) {
  H_10(state, unused, out_244147991604393521);
}
void live_h_12(double *state, double *unused, double *out_1284073685258936711) {
  h_12(state, unused, out_1284073685258936711);
}
void live_H_12(double *state, double *unused, double *out_8432601117980103096) {
  H_12(state, unused, out_8432601117980103096);
}
void live_h_35(double *state, double *unused, double *out_3644461868441878761) {
  h_35(state, unused, out_3644461868441878761);
}
void live_H_35(double *state, double *unused, double *out_8361348605070094101) {
  H_35(state, unused, out_8361348605070094101);
}
void live_h_32(double *state, double *unused, double *out_7564506732801241555) {
  h_32(state, unused, out_7564506732801241555);
}
void live_H_32(double *state, double *unused, double *out_8492513390010834570) {
  H_32(state, unused, out_8492513390010834570);
}
void live_h_13(double *state, double *unused, double *out_7899918884651125118) {
  h_13(state, unused, out_7899918884651125118);
}
void live_H_13(double *state, double *unused, double *out_5068259913659727943) {
  H_13(state, unused, out_5068259913659727943);
}
void live_h_14(double *state, double *unused, double *out_2151508975143286110) {
  h_14(state, unused, out_2151508975143286110);
}
void live_H_14(double *state, double *unused, double *out_6164838590747617421) {
  H_14(state, unused, out_6164838590747617421);
}
void live_h_33(double *state, double *unused, double *out_4405361491101812079) {
  h_33(state, unused, out_4405361491101812079);
}
void live_H_33(double *state, double *unused, double *out_6934838464000599911) {
  H_33(state, unused, out_6934838464000599911);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
