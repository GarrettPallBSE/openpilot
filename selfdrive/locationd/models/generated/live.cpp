#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6264240166570111056) {
   out_6264240166570111056[0] = 0;
   out_6264240166570111056[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6264240166570111056[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6264240166570111056[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6264240166570111056[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6264240166570111056[5] = -sin(in_vec[1]);
   out_6264240166570111056[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6264240166570111056[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6264240166570111056[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6264240166570111056[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6264240166570111056[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6264240166570111056[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6264240166570111056[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6264240166570111056[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6264240166570111056[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6264240166570111056[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6264240166570111056[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6264240166570111056[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_929829361008702232) {
   out_929829361008702232[0] = delta_x[0] + nom_x[0];
   out_929829361008702232[1] = delta_x[1] + nom_x[1];
   out_929829361008702232[2] = delta_x[2] + nom_x[2];
   out_929829361008702232[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_929829361008702232[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_929829361008702232[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_929829361008702232[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_929829361008702232[7] = delta_x[6] + nom_x[7];
   out_929829361008702232[8] = delta_x[7] + nom_x[8];
   out_929829361008702232[9] = delta_x[8] + nom_x[9];
   out_929829361008702232[10] = delta_x[9] + nom_x[10];
   out_929829361008702232[11] = delta_x[10] + nom_x[11];
   out_929829361008702232[12] = delta_x[11] + nom_x[12];
   out_929829361008702232[13] = delta_x[12] + nom_x[13];
   out_929829361008702232[14] = delta_x[13] + nom_x[14];
   out_929829361008702232[15] = delta_x[14] + nom_x[15];
   out_929829361008702232[16] = delta_x[15] + nom_x[16];
   out_929829361008702232[17] = delta_x[16] + nom_x[17];
   out_929829361008702232[18] = delta_x[17] + nom_x[18];
   out_929829361008702232[19] = delta_x[18] + nom_x[19];
   out_929829361008702232[20] = delta_x[19] + nom_x[20];
   out_929829361008702232[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8810076277123414669) {
   out_8810076277123414669[0] = -nom_x[0] + true_x[0];
   out_8810076277123414669[1] = -nom_x[1] + true_x[1];
   out_8810076277123414669[2] = -nom_x[2] + true_x[2];
   out_8810076277123414669[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8810076277123414669[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8810076277123414669[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8810076277123414669[6] = -nom_x[7] + true_x[7];
   out_8810076277123414669[7] = -nom_x[8] + true_x[8];
   out_8810076277123414669[8] = -nom_x[9] + true_x[9];
   out_8810076277123414669[9] = -nom_x[10] + true_x[10];
   out_8810076277123414669[10] = -nom_x[11] + true_x[11];
   out_8810076277123414669[11] = -nom_x[12] + true_x[12];
   out_8810076277123414669[12] = -nom_x[13] + true_x[13];
   out_8810076277123414669[13] = -nom_x[14] + true_x[14];
   out_8810076277123414669[14] = -nom_x[15] + true_x[15];
   out_8810076277123414669[15] = -nom_x[16] + true_x[16];
   out_8810076277123414669[16] = -nom_x[17] + true_x[17];
   out_8810076277123414669[17] = -nom_x[18] + true_x[18];
   out_8810076277123414669[18] = -nom_x[19] + true_x[19];
   out_8810076277123414669[19] = -nom_x[20] + true_x[20];
   out_8810076277123414669[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5102563603905716445) {
   out_5102563603905716445[0] = 1.0;
   out_5102563603905716445[1] = 0;
   out_5102563603905716445[2] = 0;
   out_5102563603905716445[3] = 0;
   out_5102563603905716445[4] = 0;
   out_5102563603905716445[5] = 0;
   out_5102563603905716445[6] = 0;
   out_5102563603905716445[7] = 0;
   out_5102563603905716445[8] = 0;
   out_5102563603905716445[9] = 0;
   out_5102563603905716445[10] = 0;
   out_5102563603905716445[11] = 0;
   out_5102563603905716445[12] = 0;
   out_5102563603905716445[13] = 0;
   out_5102563603905716445[14] = 0;
   out_5102563603905716445[15] = 0;
   out_5102563603905716445[16] = 0;
   out_5102563603905716445[17] = 0;
   out_5102563603905716445[18] = 0;
   out_5102563603905716445[19] = 0;
   out_5102563603905716445[20] = 0;
   out_5102563603905716445[21] = 0;
   out_5102563603905716445[22] = 1.0;
   out_5102563603905716445[23] = 0;
   out_5102563603905716445[24] = 0;
   out_5102563603905716445[25] = 0;
   out_5102563603905716445[26] = 0;
   out_5102563603905716445[27] = 0;
   out_5102563603905716445[28] = 0;
   out_5102563603905716445[29] = 0;
   out_5102563603905716445[30] = 0;
   out_5102563603905716445[31] = 0;
   out_5102563603905716445[32] = 0;
   out_5102563603905716445[33] = 0;
   out_5102563603905716445[34] = 0;
   out_5102563603905716445[35] = 0;
   out_5102563603905716445[36] = 0;
   out_5102563603905716445[37] = 0;
   out_5102563603905716445[38] = 0;
   out_5102563603905716445[39] = 0;
   out_5102563603905716445[40] = 0;
   out_5102563603905716445[41] = 0;
   out_5102563603905716445[42] = 0;
   out_5102563603905716445[43] = 0;
   out_5102563603905716445[44] = 1.0;
   out_5102563603905716445[45] = 0;
   out_5102563603905716445[46] = 0;
   out_5102563603905716445[47] = 0;
   out_5102563603905716445[48] = 0;
   out_5102563603905716445[49] = 0;
   out_5102563603905716445[50] = 0;
   out_5102563603905716445[51] = 0;
   out_5102563603905716445[52] = 0;
   out_5102563603905716445[53] = 0;
   out_5102563603905716445[54] = 0;
   out_5102563603905716445[55] = 0;
   out_5102563603905716445[56] = 0;
   out_5102563603905716445[57] = 0;
   out_5102563603905716445[58] = 0;
   out_5102563603905716445[59] = 0;
   out_5102563603905716445[60] = 0;
   out_5102563603905716445[61] = 0;
   out_5102563603905716445[62] = 0;
   out_5102563603905716445[63] = 0;
   out_5102563603905716445[64] = 0;
   out_5102563603905716445[65] = 0;
   out_5102563603905716445[66] = -0.5*state[4];
   out_5102563603905716445[67] = -0.5*state[5];
   out_5102563603905716445[68] = -0.5*state[6];
   out_5102563603905716445[69] = 0;
   out_5102563603905716445[70] = 0;
   out_5102563603905716445[71] = 0;
   out_5102563603905716445[72] = 0;
   out_5102563603905716445[73] = 0;
   out_5102563603905716445[74] = 0;
   out_5102563603905716445[75] = 0;
   out_5102563603905716445[76] = 0;
   out_5102563603905716445[77] = 0;
   out_5102563603905716445[78] = 0;
   out_5102563603905716445[79] = 0;
   out_5102563603905716445[80] = 0;
   out_5102563603905716445[81] = 0;
   out_5102563603905716445[82] = 0;
   out_5102563603905716445[83] = 0;
   out_5102563603905716445[84] = 0;
   out_5102563603905716445[85] = 0;
   out_5102563603905716445[86] = 0;
   out_5102563603905716445[87] = 0.5*state[3];
   out_5102563603905716445[88] = 0.5*state[6];
   out_5102563603905716445[89] = -0.5*state[5];
   out_5102563603905716445[90] = 0;
   out_5102563603905716445[91] = 0;
   out_5102563603905716445[92] = 0;
   out_5102563603905716445[93] = 0;
   out_5102563603905716445[94] = 0;
   out_5102563603905716445[95] = 0;
   out_5102563603905716445[96] = 0;
   out_5102563603905716445[97] = 0;
   out_5102563603905716445[98] = 0;
   out_5102563603905716445[99] = 0;
   out_5102563603905716445[100] = 0;
   out_5102563603905716445[101] = 0;
   out_5102563603905716445[102] = 0;
   out_5102563603905716445[103] = 0;
   out_5102563603905716445[104] = 0;
   out_5102563603905716445[105] = 0;
   out_5102563603905716445[106] = 0;
   out_5102563603905716445[107] = 0;
   out_5102563603905716445[108] = -0.5*state[6];
   out_5102563603905716445[109] = 0.5*state[3];
   out_5102563603905716445[110] = 0.5*state[4];
   out_5102563603905716445[111] = 0;
   out_5102563603905716445[112] = 0;
   out_5102563603905716445[113] = 0;
   out_5102563603905716445[114] = 0;
   out_5102563603905716445[115] = 0;
   out_5102563603905716445[116] = 0;
   out_5102563603905716445[117] = 0;
   out_5102563603905716445[118] = 0;
   out_5102563603905716445[119] = 0;
   out_5102563603905716445[120] = 0;
   out_5102563603905716445[121] = 0;
   out_5102563603905716445[122] = 0;
   out_5102563603905716445[123] = 0;
   out_5102563603905716445[124] = 0;
   out_5102563603905716445[125] = 0;
   out_5102563603905716445[126] = 0;
   out_5102563603905716445[127] = 0;
   out_5102563603905716445[128] = 0;
   out_5102563603905716445[129] = 0.5*state[5];
   out_5102563603905716445[130] = -0.5*state[4];
   out_5102563603905716445[131] = 0.5*state[3];
   out_5102563603905716445[132] = 0;
   out_5102563603905716445[133] = 0;
   out_5102563603905716445[134] = 0;
   out_5102563603905716445[135] = 0;
   out_5102563603905716445[136] = 0;
   out_5102563603905716445[137] = 0;
   out_5102563603905716445[138] = 0;
   out_5102563603905716445[139] = 0;
   out_5102563603905716445[140] = 0;
   out_5102563603905716445[141] = 0;
   out_5102563603905716445[142] = 0;
   out_5102563603905716445[143] = 0;
   out_5102563603905716445[144] = 0;
   out_5102563603905716445[145] = 0;
   out_5102563603905716445[146] = 0;
   out_5102563603905716445[147] = 0;
   out_5102563603905716445[148] = 0;
   out_5102563603905716445[149] = 0;
   out_5102563603905716445[150] = 0;
   out_5102563603905716445[151] = 0;
   out_5102563603905716445[152] = 0;
   out_5102563603905716445[153] = 1.0;
   out_5102563603905716445[154] = 0;
   out_5102563603905716445[155] = 0;
   out_5102563603905716445[156] = 0;
   out_5102563603905716445[157] = 0;
   out_5102563603905716445[158] = 0;
   out_5102563603905716445[159] = 0;
   out_5102563603905716445[160] = 0;
   out_5102563603905716445[161] = 0;
   out_5102563603905716445[162] = 0;
   out_5102563603905716445[163] = 0;
   out_5102563603905716445[164] = 0;
   out_5102563603905716445[165] = 0;
   out_5102563603905716445[166] = 0;
   out_5102563603905716445[167] = 0;
   out_5102563603905716445[168] = 0;
   out_5102563603905716445[169] = 0;
   out_5102563603905716445[170] = 0;
   out_5102563603905716445[171] = 0;
   out_5102563603905716445[172] = 0;
   out_5102563603905716445[173] = 0;
   out_5102563603905716445[174] = 0;
   out_5102563603905716445[175] = 1.0;
   out_5102563603905716445[176] = 0;
   out_5102563603905716445[177] = 0;
   out_5102563603905716445[178] = 0;
   out_5102563603905716445[179] = 0;
   out_5102563603905716445[180] = 0;
   out_5102563603905716445[181] = 0;
   out_5102563603905716445[182] = 0;
   out_5102563603905716445[183] = 0;
   out_5102563603905716445[184] = 0;
   out_5102563603905716445[185] = 0;
   out_5102563603905716445[186] = 0;
   out_5102563603905716445[187] = 0;
   out_5102563603905716445[188] = 0;
   out_5102563603905716445[189] = 0;
   out_5102563603905716445[190] = 0;
   out_5102563603905716445[191] = 0;
   out_5102563603905716445[192] = 0;
   out_5102563603905716445[193] = 0;
   out_5102563603905716445[194] = 0;
   out_5102563603905716445[195] = 0;
   out_5102563603905716445[196] = 0;
   out_5102563603905716445[197] = 1.0;
   out_5102563603905716445[198] = 0;
   out_5102563603905716445[199] = 0;
   out_5102563603905716445[200] = 0;
   out_5102563603905716445[201] = 0;
   out_5102563603905716445[202] = 0;
   out_5102563603905716445[203] = 0;
   out_5102563603905716445[204] = 0;
   out_5102563603905716445[205] = 0;
   out_5102563603905716445[206] = 0;
   out_5102563603905716445[207] = 0;
   out_5102563603905716445[208] = 0;
   out_5102563603905716445[209] = 0;
   out_5102563603905716445[210] = 0;
   out_5102563603905716445[211] = 0;
   out_5102563603905716445[212] = 0;
   out_5102563603905716445[213] = 0;
   out_5102563603905716445[214] = 0;
   out_5102563603905716445[215] = 0;
   out_5102563603905716445[216] = 0;
   out_5102563603905716445[217] = 0;
   out_5102563603905716445[218] = 0;
   out_5102563603905716445[219] = 1.0;
   out_5102563603905716445[220] = 0;
   out_5102563603905716445[221] = 0;
   out_5102563603905716445[222] = 0;
   out_5102563603905716445[223] = 0;
   out_5102563603905716445[224] = 0;
   out_5102563603905716445[225] = 0;
   out_5102563603905716445[226] = 0;
   out_5102563603905716445[227] = 0;
   out_5102563603905716445[228] = 0;
   out_5102563603905716445[229] = 0;
   out_5102563603905716445[230] = 0;
   out_5102563603905716445[231] = 0;
   out_5102563603905716445[232] = 0;
   out_5102563603905716445[233] = 0;
   out_5102563603905716445[234] = 0;
   out_5102563603905716445[235] = 0;
   out_5102563603905716445[236] = 0;
   out_5102563603905716445[237] = 0;
   out_5102563603905716445[238] = 0;
   out_5102563603905716445[239] = 0;
   out_5102563603905716445[240] = 0;
   out_5102563603905716445[241] = 1.0;
   out_5102563603905716445[242] = 0;
   out_5102563603905716445[243] = 0;
   out_5102563603905716445[244] = 0;
   out_5102563603905716445[245] = 0;
   out_5102563603905716445[246] = 0;
   out_5102563603905716445[247] = 0;
   out_5102563603905716445[248] = 0;
   out_5102563603905716445[249] = 0;
   out_5102563603905716445[250] = 0;
   out_5102563603905716445[251] = 0;
   out_5102563603905716445[252] = 0;
   out_5102563603905716445[253] = 0;
   out_5102563603905716445[254] = 0;
   out_5102563603905716445[255] = 0;
   out_5102563603905716445[256] = 0;
   out_5102563603905716445[257] = 0;
   out_5102563603905716445[258] = 0;
   out_5102563603905716445[259] = 0;
   out_5102563603905716445[260] = 0;
   out_5102563603905716445[261] = 0;
   out_5102563603905716445[262] = 0;
   out_5102563603905716445[263] = 1.0;
   out_5102563603905716445[264] = 0;
   out_5102563603905716445[265] = 0;
   out_5102563603905716445[266] = 0;
   out_5102563603905716445[267] = 0;
   out_5102563603905716445[268] = 0;
   out_5102563603905716445[269] = 0;
   out_5102563603905716445[270] = 0;
   out_5102563603905716445[271] = 0;
   out_5102563603905716445[272] = 0;
   out_5102563603905716445[273] = 0;
   out_5102563603905716445[274] = 0;
   out_5102563603905716445[275] = 0;
   out_5102563603905716445[276] = 0;
   out_5102563603905716445[277] = 0;
   out_5102563603905716445[278] = 0;
   out_5102563603905716445[279] = 0;
   out_5102563603905716445[280] = 0;
   out_5102563603905716445[281] = 0;
   out_5102563603905716445[282] = 0;
   out_5102563603905716445[283] = 0;
   out_5102563603905716445[284] = 0;
   out_5102563603905716445[285] = 1.0;
   out_5102563603905716445[286] = 0;
   out_5102563603905716445[287] = 0;
   out_5102563603905716445[288] = 0;
   out_5102563603905716445[289] = 0;
   out_5102563603905716445[290] = 0;
   out_5102563603905716445[291] = 0;
   out_5102563603905716445[292] = 0;
   out_5102563603905716445[293] = 0;
   out_5102563603905716445[294] = 0;
   out_5102563603905716445[295] = 0;
   out_5102563603905716445[296] = 0;
   out_5102563603905716445[297] = 0;
   out_5102563603905716445[298] = 0;
   out_5102563603905716445[299] = 0;
   out_5102563603905716445[300] = 0;
   out_5102563603905716445[301] = 0;
   out_5102563603905716445[302] = 0;
   out_5102563603905716445[303] = 0;
   out_5102563603905716445[304] = 0;
   out_5102563603905716445[305] = 0;
   out_5102563603905716445[306] = 0;
   out_5102563603905716445[307] = 1.0;
   out_5102563603905716445[308] = 0;
   out_5102563603905716445[309] = 0;
   out_5102563603905716445[310] = 0;
   out_5102563603905716445[311] = 0;
   out_5102563603905716445[312] = 0;
   out_5102563603905716445[313] = 0;
   out_5102563603905716445[314] = 0;
   out_5102563603905716445[315] = 0;
   out_5102563603905716445[316] = 0;
   out_5102563603905716445[317] = 0;
   out_5102563603905716445[318] = 0;
   out_5102563603905716445[319] = 0;
   out_5102563603905716445[320] = 0;
   out_5102563603905716445[321] = 0;
   out_5102563603905716445[322] = 0;
   out_5102563603905716445[323] = 0;
   out_5102563603905716445[324] = 0;
   out_5102563603905716445[325] = 0;
   out_5102563603905716445[326] = 0;
   out_5102563603905716445[327] = 0;
   out_5102563603905716445[328] = 0;
   out_5102563603905716445[329] = 1.0;
   out_5102563603905716445[330] = 0;
   out_5102563603905716445[331] = 0;
   out_5102563603905716445[332] = 0;
   out_5102563603905716445[333] = 0;
   out_5102563603905716445[334] = 0;
   out_5102563603905716445[335] = 0;
   out_5102563603905716445[336] = 0;
   out_5102563603905716445[337] = 0;
   out_5102563603905716445[338] = 0;
   out_5102563603905716445[339] = 0;
   out_5102563603905716445[340] = 0;
   out_5102563603905716445[341] = 0;
   out_5102563603905716445[342] = 0;
   out_5102563603905716445[343] = 0;
   out_5102563603905716445[344] = 0;
   out_5102563603905716445[345] = 0;
   out_5102563603905716445[346] = 0;
   out_5102563603905716445[347] = 0;
   out_5102563603905716445[348] = 0;
   out_5102563603905716445[349] = 0;
   out_5102563603905716445[350] = 0;
   out_5102563603905716445[351] = 1.0;
   out_5102563603905716445[352] = 0;
   out_5102563603905716445[353] = 0;
   out_5102563603905716445[354] = 0;
   out_5102563603905716445[355] = 0;
   out_5102563603905716445[356] = 0;
   out_5102563603905716445[357] = 0;
   out_5102563603905716445[358] = 0;
   out_5102563603905716445[359] = 0;
   out_5102563603905716445[360] = 0;
   out_5102563603905716445[361] = 0;
   out_5102563603905716445[362] = 0;
   out_5102563603905716445[363] = 0;
   out_5102563603905716445[364] = 0;
   out_5102563603905716445[365] = 0;
   out_5102563603905716445[366] = 0;
   out_5102563603905716445[367] = 0;
   out_5102563603905716445[368] = 0;
   out_5102563603905716445[369] = 0;
   out_5102563603905716445[370] = 0;
   out_5102563603905716445[371] = 0;
   out_5102563603905716445[372] = 0;
   out_5102563603905716445[373] = 1.0;
   out_5102563603905716445[374] = 0;
   out_5102563603905716445[375] = 0;
   out_5102563603905716445[376] = 0;
   out_5102563603905716445[377] = 0;
   out_5102563603905716445[378] = 0;
   out_5102563603905716445[379] = 0;
   out_5102563603905716445[380] = 0;
   out_5102563603905716445[381] = 0;
   out_5102563603905716445[382] = 0;
   out_5102563603905716445[383] = 0;
   out_5102563603905716445[384] = 0;
   out_5102563603905716445[385] = 0;
   out_5102563603905716445[386] = 0;
   out_5102563603905716445[387] = 0;
   out_5102563603905716445[388] = 0;
   out_5102563603905716445[389] = 0;
   out_5102563603905716445[390] = 0;
   out_5102563603905716445[391] = 0;
   out_5102563603905716445[392] = 0;
   out_5102563603905716445[393] = 0;
   out_5102563603905716445[394] = 0;
   out_5102563603905716445[395] = 1.0;
   out_5102563603905716445[396] = 0;
   out_5102563603905716445[397] = 0;
   out_5102563603905716445[398] = 0;
   out_5102563603905716445[399] = 0;
   out_5102563603905716445[400] = 0;
   out_5102563603905716445[401] = 0;
   out_5102563603905716445[402] = 0;
   out_5102563603905716445[403] = 0;
   out_5102563603905716445[404] = 0;
   out_5102563603905716445[405] = 0;
   out_5102563603905716445[406] = 0;
   out_5102563603905716445[407] = 0;
   out_5102563603905716445[408] = 0;
   out_5102563603905716445[409] = 0;
   out_5102563603905716445[410] = 0;
   out_5102563603905716445[411] = 0;
   out_5102563603905716445[412] = 0;
   out_5102563603905716445[413] = 0;
   out_5102563603905716445[414] = 0;
   out_5102563603905716445[415] = 0;
   out_5102563603905716445[416] = 0;
   out_5102563603905716445[417] = 1.0;
   out_5102563603905716445[418] = 0;
   out_5102563603905716445[419] = 0;
   out_5102563603905716445[420] = 0;
   out_5102563603905716445[421] = 0;
   out_5102563603905716445[422] = 0;
   out_5102563603905716445[423] = 0;
   out_5102563603905716445[424] = 0;
   out_5102563603905716445[425] = 0;
   out_5102563603905716445[426] = 0;
   out_5102563603905716445[427] = 0;
   out_5102563603905716445[428] = 0;
   out_5102563603905716445[429] = 0;
   out_5102563603905716445[430] = 0;
   out_5102563603905716445[431] = 0;
   out_5102563603905716445[432] = 0;
   out_5102563603905716445[433] = 0;
   out_5102563603905716445[434] = 0;
   out_5102563603905716445[435] = 0;
   out_5102563603905716445[436] = 0;
   out_5102563603905716445[437] = 0;
   out_5102563603905716445[438] = 0;
   out_5102563603905716445[439] = 1.0;
   out_5102563603905716445[440] = 0;
   out_5102563603905716445[441] = 0;
   out_5102563603905716445[442] = 0;
   out_5102563603905716445[443] = 0;
   out_5102563603905716445[444] = 0;
   out_5102563603905716445[445] = 0;
   out_5102563603905716445[446] = 0;
   out_5102563603905716445[447] = 0;
   out_5102563603905716445[448] = 0;
   out_5102563603905716445[449] = 0;
   out_5102563603905716445[450] = 0;
   out_5102563603905716445[451] = 0;
   out_5102563603905716445[452] = 0;
   out_5102563603905716445[453] = 0;
   out_5102563603905716445[454] = 0;
   out_5102563603905716445[455] = 0;
   out_5102563603905716445[456] = 0;
   out_5102563603905716445[457] = 0;
   out_5102563603905716445[458] = 0;
   out_5102563603905716445[459] = 0;
   out_5102563603905716445[460] = 0;
   out_5102563603905716445[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7329154140838552077) {
   out_7329154140838552077[0] = dt*state[7] + state[0];
   out_7329154140838552077[1] = dt*state[8] + state[1];
   out_7329154140838552077[2] = dt*state[9] + state[2];
   out_7329154140838552077[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7329154140838552077[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7329154140838552077[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7329154140838552077[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7329154140838552077[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7329154140838552077[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7329154140838552077[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7329154140838552077[10] = state[10];
   out_7329154140838552077[11] = state[11];
   out_7329154140838552077[12] = state[12];
   out_7329154140838552077[13] = state[13];
   out_7329154140838552077[14] = state[14];
   out_7329154140838552077[15] = state[15];
   out_7329154140838552077[16] = state[16];
   out_7329154140838552077[17] = state[17];
   out_7329154140838552077[18] = state[18];
   out_7329154140838552077[19] = state[19];
   out_7329154140838552077[20] = state[20];
   out_7329154140838552077[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4718842532029652348) {
   out_4718842532029652348[0] = 1;
   out_4718842532029652348[1] = 0;
   out_4718842532029652348[2] = 0;
   out_4718842532029652348[3] = 0;
   out_4718842532029652348[4] = 0;
   out_4718842532029652348[5] = 0;
   out_4718842532029652348[6] = dt;
   out_4718842532029652348[7] = 0;
   out_4718842532029652348[8] = 0;
   out_4718842532029652348[9] = 0;
   out_4718842532029652348[10] = 0;
   out_4718842532029652348[11] = 0;
   out_4718842532029652348[12] = 0;
   out_4718842532029652348[13] = 0;
   out_4718842532029652348[14] = 0;
   out_4718842532029652348[15] = 0;
   out_4718842532029652348[16] = 0;
   out_4718842532029652348[17] = 0;
   out_4718842532029652348[18] = 0;
   out_4718842532029652348[19] = 0;
   out_4718842532029652348[20] = 0;
   out_4718842532029652348[21] = 0;
   out_4718842532029652348[22] = 1;
   out_4718842532029652348[23] = 0;
   out_4718842532029652348[24] = 0;
   out_4718842532029652348[25] = 0;
   out_4718842532029652348[26] = 0;
   out_4718842532029652348[27] = 0;
   out_4718842532029652348[28] = dt;
   out_4718842532029652348[29] = 0;
   out_4718842532029652348[30] = 0;
   out_4718842532029652348[31] = 0;
   out_4718842532029652348[32] = 0;
   out_4718842532029652348[33] = 0;
   out_4718842532029652348[34] = 0;
   out_4718842532029652348[35] = 0;
   out_4718842532029652348[36] = 0;
   out_4718842532029652348[37] = 0;
   out_4718842532029652348[38] = 0;
   out_4718842532029652348[39] = 0;
   out_4718842532029652348[40] = 0;
   out_4718842532029652348[41] = 0;
   out_4718842532029652348[42] = 0;
   out_4718842532029652348[43] = 0;
   out_4718842532029652348[44] = 1;
   out_4718842532029652348[45] = 0;
   out_4718842532029652348[46] = 0;
   out_4718842532029652348[47] = 0;
   out_4718842532029652348[48] = 0;
   out_4718842532029652348[49] = 0;
   out_4718842532029652348[50] = dt;
   out_4718842532029652348[51] = 0;
   out_4718842532029652348[52] = 0;
   out_4718842532029652348[53] = 0;
   out_4718842532029652348[54] = 0;
   out_4718842532029652348[55] = 0;
   out_4718842532029652348[56] = 0;
   out_4718842532029652348[57] = 0;
   out_4718842532029652348[58] = 0;
   out_4718842532029652348[59] = 0;
   out_4718842532029652348[60] = 0;
   out_4718842532029652348[61] = 0;
   out_4718842532029652348[62] = 0;
   out_4718842532029652348[63] = 0;
   out_4718842532029652348[64] = 0;
   out_4718842532029652348[65] = 0;
   out_4718842532029652348[66] = 1;
   out_4718842532029652348[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4718842532029652348[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4718842532029652348[69] = 0;
   out_4718842532029652348[70] = 0;
   out_4718842532029652348[71] = 0;
   out_4718842532029652348[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4718842532029652348[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4718842532029652348[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4718842532029652348[75] = 0;
   out_4718842532029652348[76] = 0;
   out_4718842532029652348[77] = 0;
   out_4718842532029652348[78] = 0;
   out_4718842532029652348[79] = 0;
   out_4718842532029652348[80] = 0;
   out_4718842532029652348[81] = 0;
   out_4718842532029652348[82] = 0;
   out_4718842532029652348[83] = 0;
   out_4718842532029652348[84] = 0;
   out_4718842532029652348[85] = 0;
   out_4718842532029652348[86] = 0;
   out_4718842532029652348[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4718842532029652348[88] = 1;
   out_4718842532029652348[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4718842532029652348[90] = 0;
   out_4718842532029652348[91] = 0;
   out_4718842532029652348[92] = 0;
   out_4718842532029652348[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4718842532029652348[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4718842532029652348[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4718842532029652348[96] = 0;
   out_4718842532029652348[97] = 0;
   out_4718842532029652348[98] = 0;
   out_4718842532029652348[99] = 0;
   out_4718842532029652348[100] = 0;
   out_4718842532029652348[101] = 0;
   out_4718842532029652348[102] = 0;
   out_4718842532029652348[103] = 0;
   out_4718842532029652348[104] = 0;
   out_4718842532029652348[105] = 0;
   out_4718842532029652348[106] = 0;
   out_4718842532029652348[107] = 0;
   out_4718842532029652348[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4718842532029652348[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4718842532029652348[110] = 1;
   out_4718842532029652348[111] = 0;
   out_4718842532029652348[112] = 0;
   out_4718842532029652348[113] = 0;
   out_4718842532029652348[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4718842532029652348[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4718842532029652348[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4718842532029652348[117] = 0;
   out_4718842532029652348[118] = 0;
   out_4718842532029652348[119] = 0;
   out_4718842532029652348[120] = 0;
   out_4718842532029652348[121] = 0;
   out_4718842532029652348[122] = 0;
   out_4718842532029652348[123] = 0;
   out_4718842532029652348[124] = 0;
   out_4718842532029652348[125] = 0;
   out_4718842532029652348[126] = 0;
   out_4718842532029652348[127] = 0;
   out_4718842532029652348[128] = 0;
   out_4718842532029652348[129] = 0;
   out_4718842532029652348[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4718842532029652348[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4718842532029652348[132] = 1;
   out_4718842532029652348[133] = 0;
   out_4718842532029652348[134] = 0;
   out_4718842532029652348[135] = 0;
   out_4718842532029652348[136] = 0;
   out_4718842532029652348[137] = 0;
   out_4718842532029652348[138] = 0;
   out_4718842532029652348[139] = 0;
   out_4718842532029652348[140] = 0;
   out_4718842532029652348[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4718842532029652348[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4718842532029652348[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4718842532029652348[144] = 0;
   out_4718842532029652348[145] = 0;
   out_4718842532029652348[146] = 0;
   out_4718842532029652348[147] = 0;
   out_4718842532029652348[148] = 0;
   out_4718842532029652348[149] = 0;
   out_4718842532029652348[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4718842532029652348[151] = 0;
   out_4718842532029652348[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4718842532029652348[153] = 0;
   out_4718842532029652348[154] = 1;
   out_4718842532029652348[155] = 0;
   out_4718842532029652348[156] = 0;
   out_4718842532029652348[157] = 0;
   out_4718842532029652348[158] = 0;
   out_4718842532029652348[159] = 0;
   out_4718842532029652348[160] = 0;
   out_4718842532029652348[161] = 0;
   out_4718842532029652348[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4718842532029652348[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4718842532029652348[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4718842532029652348[165] = 0;
   out_4718842532029652348[166] = 0;
   out_4718842532029652348[167] = 0;
   out_4718842532029652348[168] = 0;
   out_4718842532029652348[169] = 0;
   out_4718842532029652348[170] = 0;
   out_4718842532029652348[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4718842532029652348[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4718842532029652348[173] = 0;
   out_4718842532029652348[174] = 0;
   out_4718842532029652348[175] = 0;
   out_4718842532029652348[176] = 1;
   out_4718842532029652348[177] = 0;
   out_4718842532029652348[178] = 0;
   out_4718842532029652348[179] = 0;
   out_4718842532029652348[180] = 0;
   out_4718842532029652348[181] = 0;
   out_4718842532029652348[182] = 0;
   out_4718842532029652348[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4718842532029652348[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4718842532029652348[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4718842532029652348[186] = 0;
   out_4718842532029652348[187] = 0;
   out_4718842532029652348[188] = 0;
   out_4718842532029652348[189] = 0;
   out_4718842532029652348[190] = 0;
   out_4718842532029652348[191] = 0;
   out_4718842532029652348[192] = 0;
   out_4718842532029652348[193] = 0;
   out_4718842532029652348[194] = 0;
   out_4718842532029652348[195] = 0;
   out_4718842532029652348[196] = 0;
   out_4718842532029652348[197] = 0;
   out_4718842532029652348[198] = 1;
   out_4718842532029652348[199] = 0;
   out_4718842532029652348[200] = 0;
   out_4718842532029652348[201] = 0;
   out_4718842532029652348[202] = 0;
   out_4718842532029652348[203] = 0;
   out_4718842532029652348[204] = 0;
   out_4718842532029652348[205] = 0;
   out_4718842532029652348[206] = 0;
   out_4718842532029652348[207] = 0;
   out_4718842532029652348[208] = 0;
   out_4718842532029652348[209] = 0;
   out_4718842532029652348[210] = 0;
   out_4718842532029652348[211] = 0;
   out_4718842532029652348[212] = 0;
   out_4718842532029652348[213] = 0;
   out_4718842532029652348[214] = 0;
   out_4718842532029652348[215] = 0;
   out_4718842532029652348[216] = 0;
   out_4718842532029652348[217] = 0;
   out_4718842532029652348[218] = 0;
   out_4718842532029652348[219] = 0;
   out_4718842532029652348[220] = 1;
   out_4718842532029652348[221] = 0;
   out_4718842532029652348[222] = 0;
   out_4718842532029652348[223] = 0;
   out_4718842532029652348[224] = 0;
   out_4718842532029652348[225] = 0;
   out_4718842532029652348[226] = 0;
   out_4718842532029652348[227] = 0;
   out_4718842532029652348[228] = 0;
   out_4718842532029652348[229] = 0;
   out_4718842532029652348[230] = 0;
   out_4718842532029652348[231] = 0;
   out_4718842532029652348[232] = 0;
   out_4718842532029652348[233] = 0;
   out_4718842532029652348[234] = 0;
   out_4718842532029652348[235] = 0;
   out_4718842532029652348[236] = 0;
   out_4718842532029652348[237] = 0;
   out_4718842532029652348[238] = 0;
   out_4718842532029652348[239] = 0;
   out_4718842532029652348[240] = 0;
   out_4718842532029652348[241] = 0;
   out_4718842532029652348[242] = 1;
   out_4718842532029652348[243] = 0;
   out_4718842532029652348[244] = 0;
   out_4718842532029652348[245] = 0;
   out_4718842532029652348[246] = 0;
   out_4718842532029652348[247] = 0;
   out_4718842532029652348[248] = 0;
   out_4718842532029652348[249] = 0;
   out_4718842532029652348[250] = 0;
   out_4718842532029652348[251] = 0;
   out_4718842532029652348[252] = 0;
   out_4718842532029652348[253] = 0;
   out_4718842532029652348[254] = 0;
   out_4718842532029652348[255] = 0;
   out_4718842532029652348[256] = 0;
   out_4718842532029652348[257] = 0;
   out_4718842532029652348[258] = 0;
   out_4718842532029652348[259] = 0;
   out_4718842532029652348[260] = 0;
   out_4718842532029652348[261] = 0;
   out_4718842532029652348[262] = 0;
   out_4718842532029652348[263] = 0;
   out_4718842532029652348[264] = 1;
   out_4718842532029652348[265] = 0;
   out_4718842532029652348[266] = 0;
   out_4718842532029652348[267] = 0;
   out_4718842532029652348[268] = 0;
   out_4718842532029652348[269] = 0;
   out_4718842532029652348[270] = 0;
   out_4718842532029652348[271] = 0;
   out_4718842532029652348[272] = 0;
   out_4718842532029652348[273] = 0;
   out_4718842532029652348[274] = 0;
   out_4718842532029652348[275] = 0;
   out_4718842532029652348[276] = 0;
   out_4718842532029652348[277] = 0;
   out_4718842532029652348[278] = 0;
   out_4718842532029652348[279] = 0;
   out_4718842532029652348[280] = 0;
   out_4718842532029652348[281] = 0;
   out_4718842532029652348[282] = 0;
   out_4718842532029652348[283] = 0;
   out_4718842532029652348[284] = 0;
   out_4718842532029652348[285] = 0;
   out_4718842532029652348[286] = 1;
   out_4718842532029652348[287] = 0;
   out_4718842532029652348[288] = 0;
   out_4718842532029652348[289] = 0;
   out_4718842532029652348[290] = 0;
   out_4718842532029652348[291] = 0;
   out_4718842532029652348[292] = 0;
   out_4718842532029652348[293] = 0;
   out_4718842532029652348[294] = 0;
   out_4718842532029652348[295] = 0;
   out_4718842532029652348[296] = 0;
   out_4718842532029652348[297] = 0;
   out_4718842532029652348[298] = 0;
   out_4718842532029652348[299] = 0;
   out_4718842532029652348[300] = 0;
   out_4718842532029652348[301] = 0;
   out_4718842532029652348[302] = 0;
   out_4718842532029652348[303] = 0;
   out_4718842532029652348[304] = 0;
   out_4718842532029652348[305] = 0;
   out_4718842532029652348[306] = 0;
   out_4718842532029652348[307] = 0;
   out_4718842532029652348[308] = 1;
   out_4718842532029652348[309] = 0;
   out_4718842532029652348[310] = 0;
   out_4718842532029652348[311] = 0;
   out_4718842532029652348[312] = 0;
   out_4718842532029652348[313] = 0;
   out_4718842532029652348[314] = 0;
   out_4718842532029652348[315] = 0;
   out_4718842532029652348[316] = 0;
   out_4718842532029652348[317] = 0;
   out_4718842532029652348[318] = 0;
   out_4718842532029652348[319] = 0;
   out_4718842532029652348[320] = 0;
   out_4718842532029652348[321] = 0;
   out_4718842532029652348[322] = 0;
   out_4718842532029652348[323] = 0;
   out_4718842532029652348[324] = 0;
   out_4718842532029652348[325] = 0;
   out_4718842532029652348[326] = 0;
   out_4718842532029652348[327] = 0;
   out_4718842532029652348[328] = 0;
   out_4718842532029652348[329] = 0;
   out_4718842532029652348[330] = 1;
   out_4718842532029652348[331] = 0;
   out_4718842532029652348[332] = 0;
   out_4718842532029652348[333] = 0;
   out_4718842532029652348[334] = 0;
   out_4718842532029652348[335] = 0;
   out_4718842532029652348[336] = 0;
   out_4718842532029652348[337] = 0;
   out_4718842532029652348[338] = 0;
   out_4718842532029652348[339] = 0;
   out_4718842532029652348[340] = 0;
   out_4718842532029652348[341] = 0;
   out_4718842532029652348[342] = 0;
   out_4718842532029652348[343] = 0;
   out_4718842532029652348[344] = 0;
   out_4718842532029652348[345] = 0;
   out_4718842532029652348[346] = 0;
   out_4718842532029652348[347] = 0;
   out_4718842532029652348[348] = 0;
   out_4718842532029652348[349] = 0;
   out_4718842532029652348[350] = 0;
   out_4718842532029652348[351] = 0;
   out_4718842532029652348[352] = 1;
   out_4718842532029652348[353] = 0;
   out_4718842532029652348[354] = 0;
   out_4718842532029652348[355] = 0;
   out_4718842532029652348[356] = 0;
   out_4718842532029652348[357] = 0;
   out_4718842532029652348[358] = 0;
   out_4718842532029652348[359] = 0;
   out_4718842532029652348[360] = 0;
   out_4718842532029652348[361] = 0;
   out_4718842532029652348[362] = 0;
   out_4718842532029652348[363] = 0;
   out_4718842532029652348[364] = 0;
   out_4718842532029652348[365] = 0;
   out_4718842532029652348[366] = 0;
   out_4718842532029652348[367] = 0;
   out_4718842532029652348[368] = 0;
   out_4718842532029652348[369] = 0;
   out_4718842532029652348[370] = 0;
   out_4718842532029652348[371] = 0;
   out_4718842532029652348[372] = 0;
   out_4718842532029652348[373] = 0;
   out_4718842532029652348[374] = 1;
   out_4718842532029652348[375] = 0;
   out_4718842532029652348[376] = 0;
   out_4718842532029652348[377] = 0;
   out_4718842532029652348[378] = 0;
   out_4718842532029652348[379] = 0;
   out_4718842532029652348[380] = 0;
   out_4718842532029652348[381] = 0;
   out_4718842532029652348[382] = 0;
   out_4718842532029652348[383] = 0;
   out_4718842532029652348[384] = 0;
   out_4718842532029652348[385] = 0;
   out_4718842532029652348[386] = 0;
   out_4718842532029652348[387] = 0;
   out_4718842532029652348[388] = 0;
   out_4718842532029652348[389] = 0;
   out_4718842532029652348[390] = 0;
   out_4718842532029652348[391] = 0;
   out_4718842532029652348[392] = 0;
   out_4718842532029652348[393] = 0;
   out_4718842532029652348[394] = 0;
   out_4718842532029652348[395] = 0;
   out_4718842532029652348[396] = 1;
   out_4718842532029652348[397] = 0;
   out_4718842532029652348[398] = 0;
   out_4718842532029652348[399] = 0;
   out_4718842532029652348[400] = 0;
   out_4718842532029652348[401] = 0;
   out_4718842532029652348[402] = 0;
   out_4718842532029652348[403] = 0;
   out_4718842532029652348[404] = 0;
   out_4718842532029652348[405] = 0;
   out_4718842532029652348[406] = 0;
   out_4718842532029652348[407] = 0;
   out_4718842532029652348[408] = 0;
   out_4718842532029652348[409] = 0;
   out_4718842532029652348[410] = 0;
   out_4718842532029652348[411] = 0;
   out_4718842532029652348[412] = 0;
   out_4718842532029652348[413] = 0;
   out_4718842532029652348[414] = 0;
   out_4718842532029652348[415] = 0;
   out_4718842532029652348[416] = 0;
   out_4718842532029652348[417] = 0;
   out_4718842532029652348[418] = 1;
   out_4718842532029652348[419] = 0;
   out_4718842532029652348[420] = 0;
   out_4718842532029652348[421] = 0;
   out_4718842532029652348[422] = 0;
   out_4718842532029652348[423] = 0;
   out_4718842532029652348[424] = 0;
   out_4718842532029652348[425] = 0;
   out_4718842532029652348[426] = 0;
   out_4718842532029652348[427] = 0;
   out_4718842532029652348[428] = 0;
   out_4718842532029652348[429] = 0;
   out_4718842532029652348[430] = 0;
   out_4718842532029652348[431] = 0;
   out_4718842532029652348[432] = 0;
   out_4718842532029652348[433] = 0;
   out_4718842532029652348[434] = 0;
   out_4718842532029652348[435] = 0;
   out_4718842532029652348[436] = 0;
   out_4718842532029652348[437] = 0;
   out_4718842532029652348[438] = 0;
   out_4718842532029652348[439] = 0;
   out_4718842532029652348[440] = 1;
}
void h_4(double *state, double *unused, double *out_7415800318484510059) {
   out_7415800318484510059[0] = state[10] + state[13];
   out_7415800318484510059[1] = state[11] + state[14];
   out_7415800318484510059[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4555738591742659618) {
   out_4555738591742659618[0] = 0;
   out_4555738591742659618[1] = 0;
   out_4555738591742659618[2] = 0;
   out_4555738591742659618[3] = 0;
   out_4555738591742659618[4] = 0;
   out_4555738591742659618[5] = 0;
   out_4555738591742659618[6] = 0;
   out_4555738591742659618[7] = 0;
   out_4555738591742659618[8] = 0;
   out_4555738591742659618[9] = 0;
   out_4555738591742659618[10] = 1;
   out_4555738591742659618[11] = 0;
   out_4555738591742659618[12] = 0;
   out_4555738591742659618[13] = 1;
   out_4555738591742659618[14] = 0;
   out_4555738591742659618[15] = 0;
   out_4555738591742659618[16] = 0;
   out_4555738591742659618[17] = 0;
   out_4555738591742659618[18] = 0;
   out_4555738591742659618[19] = 0;
   out_4555738591742659618[20] = 0;
   out_4555738591742659618[21] = 0;
   out_4555738591742659618[22] = 0;
   out_4555738591742659618[23] = 0;
   out_4555738591742659618[24] = 0;
   out_4555738591742659618[25] = 0;
   out_4555738591742659618[26] = 0;
   out_4555738591742659618[27] = 0;
   out_4555738591742659618[28] = 0;
   out_4555738591742659618[29] = 0;
   out_4555738591742659618[30] = 0;
   out_4555738591742659618[31] = 0;
   out_4555738591742659618[32] = 0;
   out_4555738591742659618[33] = 1;
   out_4555738591742659618[34] = 0;
   out_4555738591742659618[35] = 0;
   out_4555738591742659618[36] = 1;
   out_4555738591742659618[37] = 0;
   out_4555738591742659618[38] = 0;
   out_4555738591742659618[39] = 0;
   out_4555738591742659618[40] = 0;
   out_4555738591742659618[41] = 0;
   out_4555738591742659618[42] = 0;
   out_4555738591742659618[43] = 0;
   out_4555738591742659618[44] = 0;
   out_4555738591742659618[45] = 0;
   out_4555738591742659618[46] = 0;
   out_4555738591742659618[47] = 0;
   out_4555738591742659618[48] = 0;
   out_4555738591742659618[49] = 0;
   out_4555738591742659618[50] = 0;
   out_4555738591742659618[51] = 0;
   out_4555738591742659618[52] = 0;
   out_4555738591742659618[53] = 0;
   out_4555738591742659618[54] = 0;
   out_4555738591742659618[55] = 0;
   out_4555738591742659618[56] = 1;
   out_4555738591742659618[57] = 0;
   out_4555738591742659618[58] = 0;
   out_4555738591742659618[59] = 1;
   out_4555738591742659618[60] = 0;
   out_4555738591742659618[61] = 0;
   out_4555738591742659618[62] = 0;
   out_4555738591742659618[63] = 0;
   out_4555738591742659618[64] = 0;
   out_4555738591742659618[65] = 0;
}
void h_9(double *state, double *unused, double *out_5501259363844600019) {
   out_5501259363844600019[0] = state[10];
   out_5501259363844600019[1] = state[11];
   out_5501259363844600019[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4314548945113068973) {
   out_4314548945113068973[0] = 0;
   out_4314548945113068973[1] = 0;
   out_4314548945113068973[2] = 0;
   out_4314548945113068973[3] = 0;
   out_4314548945113068973[4] = 0;
   out_4314548945113068973[5] = 0;
   out_4314548945113068973[6] = 0;
   out_4314548945113068973[7] = 0;
   out_4314548945113068973[8] = 0;
   out_4314548945113068973[9] = 0;
   out_4314548945113068973[10] = 1;
   out_4314548945113068973[11] = 0;
   out_4314548945113068973[12] = 0;
   out_4314548945113068973[13] = 0;
   out_4314548945113068973[14] = 0;
   out_4314548945113068973[15] = 0;
   out_4314548945113068973[16] = 0;
   out_4314548945113068973[17] = 0;
   out_4314548945113068973[18] = 0;
   out_4314548945113068973[19] = 0;
   out_4314548945113068973[20] = 0;
   out_4314548945113068973[21] = 0;
   out_4314548945113068973[22] = 0;
   out_4314548945113068973[23] = 0;
   out_4314548945113068973[24] = 0;
   out_4314548945113068973[25] = 0;
   out_4314548945113068973[26] = 0;
   out_4314548945113068973[27] = 0;
   out_4314548945113068973[28] = 0;
   out_4314548945113068973[29] = 0;
   out_4314548945113068973[30] = 0;
   out_4314548945113068973[31] = 0;
   out_4314548945113068973[32] = 0;
   out_4314548945113068973[33] = 1;
   out_4314548945113068973[34] = 0;
   out_4314548945113068973[35] = 0;
   out_4314548945113068973[36] = 0;
   out_4314548945113068973[37] = 0;
   out_4314548945113068973[38] = 0;
   out_4314548945113068973[39] = 0;
   out_4314548945113068973[40] = 0;
   out_4314548945113068973[41] = 0;
   out_4314548945113068973[42] = 0;
   out_4314548945113068973[43] = 0;
   out_4314548945113068973[44] = 0;
   out_4314548945113068973[45] = 0;
   out_4314548945113068973[46] = 0;
   out_4314548945113068973[47] = 0;
   out_4314548945113068973[48] = 0;
   out_4314548945113068973[49] = 0;
   out_4314548945113068973[50] = 0;
   out_4314548945113068973[51] = 0;
   out_4314548945113068973[52] = 0;
   out_4314548945113068973[53] = 0;
   out_4314548945113068973[54] = 0;
   out_4314548945113068973[55] = 0;
   out_4314548945113068973[56] = 1;
   out_4314548945113068973[57] = 0;
   out_4314548945113068973[58] = 0;
   out_4314548945113068973[59] = 0;
   out_4314548945113068973[60] = 0;
   out_4314548945113068973[61] = 0;
   out_4314548945113068973[62] = 0;
   out_4314548945113068973[63] = 0;
   out_4314548945113068973[64] = 0;
   out_4314548945113068973[65] = 0;
}
void h_10(double *state, double *unused, double *out_7659614083091357968) {
   out_7659614083091357968[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7659614083091357968[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7659614083091357968[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4099442533871365456) {
   out_4099442533871365456[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4099442533871365456[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4099442533871365456[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4099442533871365456[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4099442533871365456[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4099442533871365456[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4099442533871365456[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4099442533871365456[7] = 0;
   out_4099442533871365456[8] = 0;
   out_4099442533871365456[9] = 0;
   out_4099442533871365456[10] = 0;
   out_4099442533871365456[11] = 0;
   out_4099442533871365456[12] = 0;
   out_4099442533871365456[13] = 0;
   out_4099442533871365456[14] = 0;
   out_4099442533871365456[15] = 0;
   out_4099442533871365456[16] = 1;
   out_4099442533871365456[17] = 0;
   out_4099442533871365456[18] = 0;
   out_4099442533871365456[19] = 1;
   out_4099442533871365456[20] = 0;
   out_4099442533871365456[21] = 0;
   out_4099442533871365456[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4099442533871365456[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4099442533871365456[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4099442533871365456[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4099442533871365456[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4099442533871365456[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4099442533871365456[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4099442533871365456[29] = 0;
   out_4099442533871365456[30] = 0;
   out_4099442533871365456[31] = 0;
   out_4099442533871365456[32] = 0;
   out_4099442533871365456[33] = 0;
   out_4099442533871365456[34] = 0;
   out_4099442533871365456[35] = 0;
   out_4099442533871365456[36] = 0;
   out_4099442533871365456[37] = 0;
   out_4099442533871365456[38] = 0;
   out_4099442533871365456[39] = 1;
   out_4099442533871365456[40] = 0;
   out_4099442533871365456[41] = 0;
   out_4099442533871365456[42] = 1;
   out_4099442533871365456[43] = 0;
   out_4099442533871365456[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4099442533871365456[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4099442533871365456[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4099442533871365456[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4099442533871365456[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4099442533871365456[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4099442533871365456[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4099442533871365456[51] = 0;
   out_4099442533871365456[52] = 0;
   out_4099442533871365456[53] = 0;
   out_4099442533871365456[54] = 0;
   out_4099442533871365456[55] = 0;
   out_4099442533871365456[56] = 0;
   out_4099442533871365456[57] = 0;
   out_4099442533871365456[58] = 0;
   out_4099442533871365456[59] = 0;
   out_4099442533871365456[60] = 0;
   out_4099442533871365456[61] = 0;
   out_4099442533871365456[62] = 1;
   out_4099442533871365456[63] = 0;
   out_4099442533871365456[64] = 0;
   out_4099442533871365456[65] = 1;
}
void h_12(double *state, double *unused, double *out_24599607377042501) {
   out_24599607377042501[0] = state[0];
   out_24599607377042501[1] = state[1];
   out_24599607377042501[2] = state[2];
}
void H_12(double *state, double *unused, double *out_463717816289302177) {
   out_463717816289302177[0] = 1;
   out_463717816289302177[1] = 0;
   out_463717816289302177[2] = 0;
   out_463717816289302177[3] = 0;
   out_463717816289302177[4] = 0;
   out_463717816289302177[5] = 0;
   out_463717816289302177[6] = 0;
   out_463717816289302177[7] = 0;
   out_463717816289302177[8] = 0;
   out_463717816289302177[9] = 0;
   out_463717816289302177[10] = 0;
   out_463717816289302177[11] = 0;
   out_463717816289302177[12] = 0;
   out_463717816289302177[13] = 0;
   out_463717816289302177[14] = 0;
   out_463717816289302177[15] = 0;
   out_463717816289302177[16] = 0;
   out_463717816289302177[17] = 0;
   out_463717816289302177[18] = 0;
   out_463717816289302177[19] = 0;
   out_463717816289302177[20] = 0;
   out_463717816289302177[21] = 0;
   out_463717816289302177[22] = 0;
   out_463717816289302177[23] = 1;
   out_463717816289302177[24] = 0;
   out_463717816289302177[25] = 0;
   out_463717816289302177[26] = 0;
   out_463717816289302177[27] = 0;
   out_463717816289302177[28] = 0;
   out_463717816289302177[29] = 0;
   out_463717816289302177[30] = 0;
   out_463717816289302177[31] = 0;
   out_463717816289302177[32] = 0;
   out_463717816289302177[33] = 0;
   out_463717816289302177[34] = 0;
   out_463717816289302177[35] = 0;
   out_463717816289302177[36] = 0;
   out_463717816289302177[37] = 0;
   out_463717816289302177[38] = 0;
   out_463717816289302177[39] = 0;
   out_463717816289302177[40] = 0;
   out_463717816289302177[41] = 0;
   out_463717816289302177[42] = 0;
   out_463717816289302177[43] = 0;
   out_463717816289302177[44] = 0;
   out_463717816289302177[45] = 0;
   out_463717816289302177[46] = 1;
   out_463717816289302177[47] = 0;
   out_463717816289302177[48] = 0;
   out_463717816289302177[49] = 0;
   out_463717816289302177[50] = 0;
   out_463717816289302177[51] = 0;
   out_463717816289302177[52] = 0;
   out_463717816289302177[53] = 0;
   out_463717816289302177[54] = 0;
   out_463717816289302177[55] = 0;
   out_463717816289302177[56] = 0;
   out_463717816289302177[57] = 0;
   out_463717816289302177[58] = 0;
   out_463717816289302177[59] = 0;
   out_463717816289302177[60] = 0;
   out_463717816289302177[61] = 0;
   out_463717816289302177[62] = 0;
   out_463717816289302177[63] = 0;
   out_463717816289302177[64] = 0;
   out_463717816289302177[65] = 0;
}
void h_35(double *state, double *unused, double *out_7610217345300344909) {
   out_7610217345300344909[0] = state[7];
   out_7610217345300344909[1] = state[8];
   out_7610217345300344909[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1189076534370052242) {
   out_1189076534370052242[0] = 0;
   out_1189076534370052242[1] = 0;
   out_1189076534370052242[2] = 0;
   out_1189076534370052242[3] = 0;
   out_1189076534370052242[4] = 0;
   out_1189076534370052242[5] = 0;
   out_1189076534370052242[6] = 0;
   out_1189076534370052242[7] = 1;
   out_1189076534370052242[8] = 0;
   out_1189076534370052242[9] = 0;
   out_1189076534370052242[10] = 0;
   out_1189076534370052242[11] = 0;
   out_1189076534370052242[12] = 0;
   out_1189076534370052242[13] = 0;
   out_1189076534370052242[14] = 0;
   out_1189076534370052242[15] = 0;
   out_1189076534370052242[16] = 0;
   out_1189076534370052242[17] = 0;
   out_1189076534370052242[18] = 0;
   out_1189076534370052242[19] = 0;
   out_1189076534370052242[20] = 0;
   out_1189076534370052242[21] = 0;
   out_1189076534370052242[22] = 0;
   out_1189076534370052242[23] = 0;
   out_1189076534370052242[24] = 0;
   out_1189076534370052242[25] = 0;
   out_1189076534370052242[26] = 0;
   out_1189076534370052242[27] = 0;
   out_1189076534370052242[28] = 0;
   out_1189076534370052242[29] = 0;
   out_1189076534370052242[30] = 1;
   out_1189076534370052242[31] = 0;
   out_1189076534370052242[32] = 0;
   out_1189076534370052242[33] = 0;
   out_1189076534370052242[34] = 0;
   out_1189076534370052242[35] = 0;
   out_1189076534370052242[36] = 0;
   out_1189076534370052242[37] = 0;
   out_1189076534370052242[38] = 0;
   out_1189076534370052242[39] = 0;
   out_1189076534370052242[40] = 0;
   out_1189076534370052242[41] = 0;
   out_1189076534370052242[42] = 0;
   out_1189076534370052242[43] = 0;
   out_1189076534370052242[44] = 0;
   out_1189076534370052242[45] = 0;
   out_1189076534370052242[46] = 0;
   out_1189076534370052242[47] = 0;
   out_1189076534370052242[48] = 0;
   out_1189076534370052242[49] = 0;
   out_1189076534370052242[50] = 0;
   out_1189076534370052242[51] = 0;
   out_1189076534370052242[52] = 0;
   out_1189076534370052242[53] = 1;
   out_1189076534370052242[54] = 0;
   out_1189076534370052242[55] = 0;
   out_1189076534370052242[56] = 0;
   out_1189076534370052242[57] = 0;
   out_1189076534370052242[58] = 0;
   out_1189076534370052242[59] = 0;
   out_1189076534370052242[60] = 0;
   out_1189076534370052242[61] = 0;
   out_1189076534370052242[62] = 0;
   out_1189076534370052242[63] = 0;
   out_1189076534370052242[64] = 0;
   out_1189076534370052242[65] = 0;
}
void h_32(double *state, double *unused, double *out_7061699293644735915) {
   out_7061699293644735915[0] = state[3];
   out_7061699293644735915[1] = state[4];
   out_7061699293644735915[2] = state[5];
   out_7061699293644735915[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8103941038064168598) {
   out_8103941038064168598[0] = 0;
   out_8103941038064168598[1] = 0;
   out_8103941038064168598[2] = 0;
   out_8103941038064168598[3] = 1;
   out_8103941038064168598[4] = 0;
   out_8103941038064168598[5] = 0;
   out_8103941038064168598[6] = 0;
   out_8103941038064168598[7] = 0;
   out_8103941038064168598[8] = 0;
   out_8103941038064168598[9] = 0;
   out_8103941038064168598[10] = 0;
   out_8103941038064168598[11] = 0;
   out_8103941038064168598[12] = 0;
   out_8103941038064168598[13] = 0;
   out_8103941038064168598[14] = 0;
   out_8103941038064168598[15] = 0;
   out_8103941038064168598[16] = 0;
   out_8103941038064168598[17] = 0;
   out_8103941038064168598[18] = 0;
   out_8103941038064168598[19] = 0;
   out_8103941038064168598[20] = 0;
   out_8103941038064168598[21] = 0;
   out_8103941038064168598[22] = 0;
   out_8103941038064168598[23] = 0;
   out_8103941038064168598[24] = 0;
   out_8103941038064168598[25] = 0;
   out_8103941038064168598[26] = 1;
   out_8103941038064168598[27] = 0;
   out_8103941038064168598[28] = 0;
   out_8103941038064168598[29] = 0;
   out_8103941038064168598[30] = 0;
   out_8103941038064168598[31] = 0;
   out_8103941038064168598[32] = 0;
   out_8103941038064168598[33] = 0;
   out_8103941038064168598[34] = 0;
   out_8103941038064168598[35] = 0;
   out_8103941038064168598[36] = 0;
   out_8103941038064168598[37] = 0;
   out_8103941038064168598[38] = 0;
   out_8103941038064168598[39] = 0;
   out_8103941038064168598[40] = 0;
   out_8103941038064168598[41] = 0;
   out_8103941038064168598[42] = 0;
   out_8103941038064168598[43] = 0;
   out_8103941038064168598[44] = 0;
   out_8103941038064168598[45] = 0;
   out_8103941038064168598[46] = 0;
   out_8103941038064168598[47] = 0;
   out_8103941038064168598[48] = 0;
   out_8103941038064168598[49] = 1;
   out_8103941038064168598[50] = 0;
   out_8103941038064168598[51] = 0;
   out_8103941038064168598[52] = 0;
   out_8103941038064168598[53] = 0;
   out_8103941038064168598[54] = 0;
   out_8103941038064168598[55] = 0;
   out_8103941038064168598[56] = 0;
   out_8103941038064168598[57] = 0;
   out_8103941038064168598[58] = 0;
   out_8103941038064168598[59] = 0;
   out_8103941038064168598[60] = 0;
   out_8103941038064168598[61] = 0;
   out_8103941038064168598[62] = 0;
   out_8103941038064168598[63] = 0;
   out_8103941038064168598[64] = 0;
   out_8103941038064168598[65] = 0;
   out_8103941038064168598[66] = 0;
   out_8103941038064168598[67] = 0;
   out_8103941038064168598[68] = 0;
   out_8103941038064168598[69] = 0;
   out_8103941038064168598[70] = 0;
   out_8103941038064168598[71] = 0;
   out_8103941038064168598[72] = 1;
   out_8103941038064168598[73] = 0;
   out_8103941038064168598[74] = 0;
   out_8103941038064168598[75] = 0;
   out_8103941038064168598[76] = 0;
   out_8103941038064168598[77] = 0;
   out_8103941038064168598[78] = 0;
   out_8103941038064168598[79] = 0;
   out_8103941038064168598[80] = 0;
   out_8103941038064168598[81] = 0;
   out_8103941038064168598[82] = 0;
   out_8103941038064168598[83] = 0;
   out_8103941038064168598[84] = 0;
   out_8103941038064168598[85] = 0;
   out_8103941038064168598[86] = 0;
   out_8103941038064168598[87] = 0;
}
void h_13(double *state, double *unused, double *out_9072829778971797242) {
   out_9072829778971797242[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9072829778971797242[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9072829778971797242[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4163188090060936784) {
   out_4163188090060936784[0] = 0;
   out_4163188090060936784[1] = 0;
   out_4163188090060936784[2] = 0;
   out_4163188090060936784[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4163188090060936784[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4163188090060936784[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4163188090060936784[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4163188090060936784[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4163188090060936784[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4163188090060936784[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4163188090060936784[10] = 0;
   out_4163188090060936784[11] = 0;
   out_4163188090060936784[12] = 0;
   out_4163188090060936784[13] = 0;
   out_4163188090060936784[14] = 0;
   out_4163188090060936784[15] = 0;
   out_4163188090060936784[16] = 0;
   out_4163188090060936784[17] = 0;
   out_4163188090060936784[18] = 0;
   out_4163188090060936784[19] = 0;
   out_4163188090060936784[20] = 0;
   out_4163188090060936784[21] = 0;
   out_4163188090060936784[22] = 0;
   out_4163188090060936784[23] = 0;
   out_4163188090060936784[24] = 0;
   out_4163188090060936784[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4163188090060936784[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4163188090060936784[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4163188090060936784[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4163188090060936784[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4163188090060936784[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4163188090060936784[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4163188090060936784[32] = 0;
   out_4163188090060936784[33] = 0;
   out_4163188090060936784[34] = 0;
   out_4163188090060936784[35] = 0;
   out_4163188090060936784[36] = 0;
   out_4163188090060936784[37] = 0;
   out_4163188090060936784[38] = 0;
   out_4163188090060936784[39] = 0;
   out_4163188090060936784[40] = 0;
   out_4163188090060936784[41] = 0;
   out_4163188090060936784[42] = 0;
   out_4163188090060936784[43] = 0;
   out_4163188090060936784[44] = 0;
   out_4163188090060936784[45] = 0;
   out_4163188090060936784[46] = 0;
   out_4163188090060936784[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4163188090060936784[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4163188090060936784[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4163188090060936784[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4163188090060936784[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4163188090060936784[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4163188090060936784[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4163188090060936784[54] = 0;
   out_4163188090060936784[55] = 0;
   out_4163188090060936784[56] = 0;
   out_4163188090060936784[57] = 0;
   out_4163188090060936784[58] = 0;
   out_4163188090060936784[59] = 0;
   out_4163188090060936784[60] = 0;
   out_4163188090060936784[61] = 0;
   out_4163188090060936784[62] = 0;
   out_4163188090060936784[63] = 0;
   out_4163188090060936784[64] = 0;
   out_4163188090060936784[65] = 0;
}
void h_14(double *state, double *unused, double *out_5501259363844600019) {
   out_5501259363844600019[0] = state[10];
   out_5501259363844600019[1] = state[11];
   out_5501259363844600019[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4314548945113068973) {
   out_4314548945113068973[0] = 0;
   out_4314548945113068973[1] = 0;
   out_4314548945113068973[2] = 0;
   out_4314548945113068973[3] = 0;
   out_4314548945113068973[4] = 0;
   out_4314548945113068973[5] = 0;
   out_4314548945113068973[6] = 0;
   out_4314548945113068973[7] = 0;
   out_4314548945113068973[8] = 0;
   out_4314548945113068973[9] = 0;
   out_4314548945113068973[10] = 1;
   out_4314548945113068973[11] = 0;
   out_4314548945113068973[12] = 0;
   out_4314548945113068973[13] = 0;
   out_4314548945113068973[14] = 0;
   out_4314548945113068973[15] = 0;
   out_4314548945113068973[16] = 0;
   out_4314548945113068973[17] = 0;
   out_4314548945113068973[18] = 0;
   out_4314548945113068973[19] = 0;
   out_4314548945113068973[20] = 0;
   out_4314548945113068973[21] = 0;
   out_4314548945113068973[22] = 0;
   out_4314548945113068973[23] = 0;
   out_4314548945113068973[24] = 0;
   out_4314548945113068973[25] = 0;
   out_4314548945113068973[26] = 0;
   out_4314548945113068973[27] = 0;
   out_4314548945113068973[28] = 0;
   out_4314548945113068973[29] = 0;
   out_4314548945113068973[30] = 0;
   out_4314548945113068973[31] = 0;
   out_4314548945113068973[32] = 0;
   out_4314548945113068973[33] = 1;
   out_4314548945113068973[34] = 0;
   out_4314548945113068973[35] = 0;
   out_4314548945113068973[36] = 0;
   out_4314548945113068973[37] = 0;
   out_4314548945113068973[38] = 0;
   out_4314548945113068973[39] = 0;
   out_4314548945113068973[40] = 0;
   out_4314548945113068973[41] = 0;
   out_4314548945113068973[42] = 0;
   out_4314548945113068973[43] = 0;
   out_4314548945113068973[44] = 0;
   out_4314548945113068973[45] = 0;
   out_4314548945113068973[46] = 0;
   out_4314548945113068973[47] = 0;
   out_4314548945113068973[48] = 0;
   out_4314548945113068973[49] = 0;
   out_4314548945113068973[50] = 0;
   out_4314548945113068973[51] = 0;
   out_4314548945113068973[52] = 0;
   out_4314548945113068973[53] = 0;
   out_4314548945113068973[54] = 0;
   out_4314548945113068973[55] = 0;
   out_4314548945113068973[56] = 1;
   out_4314548945113068973[57] = 0;
   out_4314548945113068973[58] = 0;
   out_4314548945113068973[59] = 0;
   out_4314548945113068973[60] = 0;
   out_4314548945113068973[61] = 0;
   out_4314548945113068973[62] = 0;
   out_4314548945113068973[63] = 0;
   out_4314548945113068973[64] = 0;
   out_4314548945113068973[65] = 0;
}
void h_33(double *state, double *unused, double *out_4368452122107625980) {
   out_4368452122107625980[0] = state[16];
   out_4368452122107625980[1] = state[17];
   out_4368452122107625980[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1961480470268805362) {
   out_1961480470268805362[0] = 0;
   out_1961480470268805362[1] = 0;
   out_1961480470268805362[2] = 0;
   out_1961480470268805362[3] = 0;
   out_1961480470268805362[4] = 0;
   out_1961480470268805362[5] = 0;
   out_1961480470268805362[6] = 0;
   out_1961480470268805362[7] = 0;
   out_1961480470268805362[8] = 0;
   out_1961480470268805362[9] = 0;
   out_1961480470268805362[10] = 0;
   out_1961480470268805362[11] = 0;
   out_1961480470268805362[12] = 0;
   out_1961480470268805362[13] = 0;
   out_1961480470268805362[14] = 0;
   out_1961480470268805362[15] = 0;
   out_1961480470268805362[16] = 1;
   out_1961480470268805362[17] = 0;
   out_1961480470268805362[18] = 0;
   out_1961480470268805362[19] = 0;
   out_1961480470268805362[20] = 0;
   out_1961480470268805362[21] = 0;
   out_1961480470268805362[22] = 0;
   out_1961480470268805362[23] = 0;
   out_1961480470268805362[24] = 0;
   out_1961480470268805362[25] = 0;
   out_1961480470268805362[26] = 0;
   out_1961480470268805362[27] = 0;
   out_1961480470268805362[28] = 0;
   out_1961480470268805362[29] = 0;
   out_1961480470268805362[30] = 0;
   out_1961480470268805362[31] = 0;
   out_1961480470268805362[32] = 0;
   out_1961480470268805362[33] = 0;
   out_1961480470268805362[34] = 0;
   out_1961480470268805362[35] = 0;
   out_1961480470268805362[36] = 0;
   out_1961480470268805362[37] = 0;
   out_1961480470268805362[38] = 0;
   out_1961480470268805362[39] = 1;
   out_1961480470268805362[40] = 0;
   out_1961480470268805362[41] = 0;
   out_1961480470268805362[42] = 0;
   out_1961480470268805362[43] = 0;
   out_1961480470268805362[44] = 0;
   out_1961480470268805362[45] = 0;
   out_1961480470268805362[46] = 0;
   out_1961480470268805362[47] = 0;
   out_1961480470268805362[48] = 0;
   out_1961480470268805362[49] = 0;
   out_1961480470268805362[50] = 0;
   out_1961480470268805362[51] = 0;
   out_1961480470268805362[52] = 0;
   out_1961480470268805362[53] = 0;
   out_1961480470268805362[54] = 0;
   out_1961480470268805362[55] = 0;
   out_1961480470268805362[56] = 0;
   out_1961480470268805362[57] = 0;
   out_1961480470268805362[58] = 0;
   out_1961480470268805362[59] = 0;
   out_1961480470268805362[60] = 0;
   out_1961480470268805362[61] = 0;
   out_1961480470268805362[62] = 1;
   out_1961480470268805362[63] = 0;
   out_1961480470268805362[64] = 0;
   out_1961480470268805362[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6264240166570111056) {
  H(in_vec, out_6264240166570111056);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_929829361008702232) {
  err_fun(nom_x, delta_x, out_929829361008702232);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8810076277123414669) {
  inv_err_fun(nom_x, true_x, out_8810076277123414669);
}
void live_H_mod_fun(double *state, double *out_5102563603905716445) {
  H_mod_fun(state, out_5102563603905716445);
}
void live_f_fun(double *state, double dt, double *out_7329154140838552077) {
  f_fun(state,  dt, out_7329154140838552077);
}
void live_F_fun(double *state, double dt, double *out_4718842532029652348) {
  F_fun(state,  dt, out_4718842532029652348);
}
void live_h_4(double *state, double *unused, double *out_7415800318484510059) {
  h_4(state, unused, out_7415800318484510059);
}
void live_H_4(double *state, double *unused, double *out_4555738591742659618) {
  H_4(state, unused, out_4555738591742659618);
}
void live_h_9(double *state, double *unused, double *out_5501259363844600019) {
  h_9(state, unused, out_5501259363844600019);
}
void live_H_9(double *state, double *unused, double *out_4314548945113068973) {
  H_9(state, unused, out_4314548945113068973);
}
void live_h_10(double *state, double *unused, double *out_7659614083091357968) {
  h_10(state, unused, out_7659614083091357968);
}
void live_H_10(double *state, double *unused, double *out_4099442533871365456) {
  H_10(state, unused, out_4099442533871365456);
}
void live_h_12(double *state, double *unused, double *out_24599607377042501) {
  h_12(state, unused, out_24599607377042501);
}
void live_H_12(double *state, double *unused, double *out_463717816289302177) {
  H_12(state, unused, out_463717816289302177);
}
void live_h_35(double *state, double *unused, double *out_7610217345300344909) {
  h_35(state, unused, out_7610217345300344909);
}
void live_H_35(double *state, double *unused, double *out_1189076534370052242) {
  H_35(state, unused, out_1189076534370052242);
}
void live_h_32(double *state, double *unused, double *out_7061699293644735915) {
  h_32(state, unused, out_7061699293644735915);
}
void live_H_32(double *state, double *unused, double *out_8103941038064168598) {
  H_32(state, unused, out_8103941038064168598);
}
void live_h_13(double *state, double *unused, double *out_9072829778971797242) {
  h_13(state, unused, out_9072829778971797242);
}
void live_H_13(double *state, double *unused, double *out_4163188090060936784) {
  H_13(state, unused, out_4163188090060936784);
}
void live_h_14(double *state, double *unused, double *out_5501259363844600019) {
  h_14(state, unused, out_5501259363844600019);
}
void live_H_14(double *state, double *unused, double *out_4314548945113068973) {
  H_14(state, unused, out_4314548945113068973);
}
void live_h_33(double *state, double *unused, double *out_4368452122107625980) {
  h_33(state, unused, out_4368452122107625980);
}
void live_H_33(double *state, double *unused, double *out_1961480470268805362) {
  H_33(state, unused, out_1961480470268805362);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
