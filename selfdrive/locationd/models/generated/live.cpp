#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6610048557944625674) {
   out_6610048557944625674[0] = 0;
   out_6610048557944625674[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6610048557944625674[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6610048557944625674[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6610048557944625674[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6610048557944625674[5] = -sin(in_vec[1]);
   out_6610048557944625674[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6610048557944625674[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6610048557944625674[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6610048557944625674[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6610048557944625674[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6610048557944625674[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6610048557944625674[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6610048557944625674[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6610048557944625674[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6610048557944625674[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6610048557944625674[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6610048557944625674[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7748278816848259557) {
   out_7748278816848259557[0] = delta_x[0] + nom_x[0];
   out_7748278816848259557[1] = delta_x[1] + nom_x[1];
   out_7748278816848259557[2] = delta_x[2] + nom_x[2];
   out_7748278816848259557[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7748278816848259557[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7748278816848259557[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7748278816848259557[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7748278816848259557[7] = delta_x[6] + nom_x[7];
   out_7748278816848259557[8] = delta_x[7] + nom_x[8];
   out_7748278816848259557[9] = delta_x[8] + nom_x[9];
   out_7748278816848259557[10] = delta_x[9] + nom_x[10];
   out_7748278816848259557[11] = delta_x[10] + nom_x[11];
   out_7748278816848259557[12] = delta_x[11] + nom_x[12];
   out_7748278816848259557[13] = delta_x[12] + nom_x[13];
   out_7748278816848259557[14] = delta_x[13] + nom_x[14];
   out_7748278816848259557[15] = delta_x[14] + nom_x[15];
   out_7748278816848259557[16] = delta_x[15] + nom_x[16];
   out_7748278816848259557[17] = delta_x[16] + nom_x[17];
   out_7748278816848259557[18] = delta_x[17] + nom_x[18];
   out_7748278816848259557[19] = delta_x[18] + nom_x[19];
   out_7748278816848259557[20] = delta_x[19] + nom_x[20];
   out_7748278816848259557[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2213082149044762718) {
   out_2213082149044762718[0] = -nom_x[0] + true_x[0];
   out_2213082149044762718[1] = -nom_x[1] + true_x[1];
   out_2213082149044762718[2] = -nom_x[2] + true_x[2];
   out_2213082149044762718[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2213082149044762718[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2213082149044762718[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2213082149044762718[6] = -nom_x[7] + true_x[7];
   out_2213082149044762718[7] = -nom_x[8] + true_x[8];
   out_2213082149044762718[8] = -nom_x[9] + true_x[9];
   out_2213082149044762718[9] = -nom_x[10] + true_x[10];
   out_2213082149044762718[10] = -nom_x[11] + true_x[11];
   out_2213082149044762718[11] = -nom_x[12] + true_x[12];
   out_2213082149044762718[12] = -nom_x[13] + true_x[13];
   out_2213082149044762718[13] = -nom_x[14] + true_x[14];
   out_2213082149044762718[14] = -nom_x[15] + true_x[15];
   out_2213082149044762718[15] = -nom_x[16] + true_x[16];
   out_2213082149044762718[16] = -nom_x[17] + true_x[17];
   out_2213082149044762718[17] = -nom_x[18] + true_x[18];
   out_2213082149044762718[18] = -nom_x[19] + true_x[19];
   out_2213082149044762718[19] = -nom_x[20] + true_x[20];
   out_2213082149044762718[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5094183247678276312) {
   out_5094183247678276312[0] = 1.0;
   out_5094183247678276312[1] = 0;
   out_5094183247678276312[2] = 0;
   out_5094183247678276312[3] = 0;
   out_5094183247678276312[4] = 0;
   out_5094183247678276312[5] = 0;
   out_5094183247678276312[6] = 0;
   out_5094183247678276312[7] = 0;
   out_5094183247678276312[8] = 0;
   out_5094183247678276312[9] = 0;
   out_5094183247678276312[10] = 0;
   out_5094183247678276312[11] = 0;
   out_5094183247678276312[12] = 0;
   out_5094183247678276312[13] = 0;
   out_5094183247678276312[14] = 0;
   out_5094183247678276312[15] = 0;
   out_5094183247678276312[16] = 0;
   out_5094183247678276312[17] = 0;
   out_5094183247678276312[18] = 0;
   out_5094183247678276312[19] = 0;
   out_5094183247678276312[20] = 0;
   out_5094183247678276312[21] = 0;
   out_5094183247678276312[22] = 1.0;
   out_5094183247678276312[23] = 0;
   out_5094183247678276312[24] = 0;
   out_5094183247678276312[25] = 0;
   out_5094183247678276312[26] = 0;
   out_5094183247678276312[27] = 0;
   out_5094183247678276312[28] = 0;
   out_5094183247678276312[29] = 0;
   out_5094183247678276312[30] = 0;
   out_5094183247678276312[31] = 0;
   out_5094183247678276312[32] = 0;
   out_5094183247678276312[33] = 0;
   out_5094183247678276312[34] = 0;
   out_5094183247678276312[35] = 0;
   out_5094183247678276312[36] = 0;
   out_5094183247678276312[37] = 0;
   out_5094183247678276312[38] = 0;
   out_5094183247678276312[39] = 0;
   out_5094183247678276312[40] = 0;
   out_5094183247678276312[41] = 0;
   out_5094183247678276312[42] = 0;
   out_5094183247678276312[43] = 0;
   out_5094183247678276312[44] = 1.0;
   out_5094183247678276312[45] = 0;
   out_5094183247678276312[46] = 0;
   out_5094183247678276312[47] = 0;
   out_5094183247678276312[48] = 0;
   out_5094183247678276312[49] = 0;
   out_5094183247678276312[50] = 0;
   out_5094183247678276312[51] = 0;
   out_5094183247678276312[52] = 0;
   out_5094183247678276312[53] = 0;
   out_5094183247678276312[54] = 0;
   out_5094183247678276312[55] = 0;
   out_5094183247678276312[56] = 0;
   out_5094183247678276312[57] = 0;
   out_5094183247678276312[58] = 0;
   out_5094183247678276312[59] = 0;
   out_5094183247678276312[60] = 0;
   out_5094183247678276312[61] = 0;
   out_5094183247678276312[62] = 0;
   out_5094183247678276312[63] = 0;
   out_5094183247678276312[64] = 0;
   out_5094183247678276312[65] = 0;
   out_5094183247678276312[66] = -0.5*state[4];
   out_5094183247678276312[67] = -0.5*state[5];
   out_5094183247678276312[68] = -0.5*state[6];
   out_5094183247678276312[69] = 0;
   out_5094183247678276312[70] = 0;
   out_5094183247678276312[71] = 0;
   out_5094183247678276312[72] = 0;
   out_5094183247678276312[73] = 0;
   out_5094183247678276312[74] = 0;
   out_5094183247678276312[75] = 0;
   out_5094183247678276312[76] = 0;
   out_5094183247678276312[77] = 0;
   out_5094183247678276312[78] = 0;
   out_5094183247678276312[79] = 0;
   out_5094183247678276312[80] = 0;
   out_5094183247678276312[81] = 0;
   out_5094183247678276312[82] = 0;
   out_5094183247678276312[83] = 0;
   out_5094183247678276312[84] = 0;
   out_5094183247678276312[85] = 0;
   out_5094183247678276312[86] = 0;
   out_5094183247678276312[87] = 0.5*state[3];
   out_5094183247678276312[88] = 0.5*state[6];
   out_5094183247678276312[89] = -0.5*state[5];
   out_5094183247678276312[90] = 0;
   out_5094183247678276312[91] = 0;
   out_5094183247678276312[92] = 0;
   out_5094183247678276312[93] = 0;
   out_5094183247678276312[94] = 0;
   out_5094183247678276312[95] = 0;
   out_5094183247678276312[96] = 0;
   out_5094183247678276312[97] = 0;
   out_5094183247678276312[98] = 0;
   out_5094183247678276312[99] = 0;
   out_5094183247678276312[100] = 0;
   out_5094183247678276312[101] = 0;
   out_5094183247678276312[102] = 0;
   out_5094183247678276312[103] = 0;
   out_5094183247678276312[104] = 0;
   out_5094183247678276312[105] = 0;
   out_5094183247678276312[106] = 0;
   out_5094183247678276312[107] = 0;
   out_5094183247678276312[108] = -0.5*state[6];
   out_5094183247678276312[109] = 0.5*state[3];
   out_5094183247678276312[110] = 0.5*state[4];
   out_5094183247678276312[111] = 0;
   out_5094183247678276312[112] = 0;
   out_5094183247678276312[113] = 0;
   out_5094183247678276312[114] = 0;
   out_5094183247678276312[115] = 0;
   out_5094183247678276312[116] = 0;
   out_5094183247678276312[117] = 0;
   out_5094183247678276312[118] = 0;
   out_5094183247678276312[119] = 0;
   out_5094183247678276312[120] = 0;
   out_5094183247678276312[121] = 0;
   out_5094183247678276312[122] = 0;
   out_5094183247678276312[123] = 0;
   out_5094183247678276312[124] = 0;
   out_5094183247678276312[125] = 0;
   out_5094183247678276312[126] = 0;
   out_5094183247678276312[127] = 0;
   out_5094183247678276312[128] = 0;
   out_5094183247678276312[129] = 0.5*state[5];
   out_5094183247678276312[130] = -0.5*state[4];
   out_5094183247678276312[131] = 0.5*state[3];
   out_5094183247678276312[132] = 0;
   out_5094183247678276312[133] = 0;
   out_5094183247678276312[134] = 0;
   out_5094183247678276312[135] = 0;
   out_5094183247678276312[136] = 0;
   out_5094183247678276312[137] = 0;
   out_5094183247678276312[138] = 0;
   out_5094183247678276312[139] = 0;
   out_5094183247678276312[140] = 0;
   out_5094183247678276312[141] = 0;
   out_5094183247678276312[142] = 0;
   out_5094183247678276312[143] = 0;
   out_5094183247678276312[144] = 0;
   out_5094183247678276312[145] = 0;
   out_5094183247678276312[146] = 0;
   out_5094183247678276312[147] = 0;
   out_5094183247678276312[148] = 0;
   out_5094183247678276312[149] = 0;
   out_5094183247678276312[150] = 0;
   out_5094183247678276312[151] = 0;
   out_5094183247678276312[152] = 0;
   out_5094183247678276312[153] = 1.0;
   out_5094183247678276312[154] = 0;
   out_5094183247678276312[155] = 0;
   out_5094183247678276312[156] = 0;
   out_5094183247678276312[157] = 0;
   out_5094183247678276312[158] = 0;
   out_5094183247678276312[159] = 0;
   out_5094183247678276312[160] = 0;
   out_5094183247678276312[161] = 0;
   out_5094183247678276312[162] = 0;
   out_5094183247678276312[163] = 0;
   out_5094183247678276312[164] = 0;
   out_5094183247678276312[165] = 0;
   out_5094183247678276312[166] = 0;
   out_5094183247678276312[167] = 0;
   out_5094183247678276312[168] = 0;
   out_5094183247678276312[169] = 0;
   out_5094183247678276312[170] = 0;
   out_5094183247678276312[171] = 0;
   out_5094183247678276312[172] = 0;
   out_5094183247678276312[173] = 0;
   out_5094183247678276312[174] = 0;
   out_5094183247678276312[175] = 1.0;
   out_5094183247678276312[176] = 0;
   out_5094183247678276312[177] = 0;
   out_5094183247678276312[178] = 0;
   out_5094183247678276312[179] = 0;
   out_5094183247678276312[180] = 0;
   out_5094183247678276312[181] = 0;
   out_5094183247678276312[182] = 0;
   out_5094183247678276312[183] = 0;
   out_5094183247678276312[184] = 0;
   out_5094183247678276312[185] = 0;
   out_5094183247678276312[186] = 0;
   out_5094183247678276312[187] = 0;
   out_5094183247678276312[188] = 0;
   out_5094183247678276312[189] = 0;
   out_5094183247678276312[190] = 0;
   out_5094183247678276312[191] = 0;
   out_5094183247678276312[192] = 0;
   out_5094183247678276312[193] = 0;
   out_5094183247678276312[194] = 0;
   out_5094183247678276312[195] = 0;
   out_5094183247678276312[196] = 0;
   out_5094183247678276312[197] = 1.0;
   out_5094183247678276312[198] = 0;
   out_5094183247678276312[199] = 0;
   out_5094183247678276312[200] = 0;
   out_5094183247678276312[201] = 0;
   out_5094183247678276312[202] = 0;
   out_5094183247678276312[203] = 0;
   out_5094183247678276312[204] = 0;
   out_5094183247678276312[205] = 0;
   out_5094183247678276312[206] = 0;
   out_5094183247678276312[207] = 0;
   out_5094183247678276312[208] = 0;
   out_5094183247678276312[209] = 0;
   out_5094183247678276312[210] = 0;
   out_5094183247678276312[211] = 0;
   out_5094183247678276312[212] = 0;
   out_5094183247678276312[213] = 0;
   out_5094183247678276312[214] = 0;
   out_5094183247678276312[215] = 0;
   out_5094183247678276312[216] = 0;
   out_5094183247678276312[217] = 0;
   out_5094183247678276312[218] = 0;
   out_5094183247678276312[219] = 1.0;
   out_5094183247678276312[220] = 0;
   out_5094183247678276312[221] = 0;
   out_5094183247678276312[222] = 0;
   out_5094183247678276312[223] = 0;
   out_5094183247678276312[224] = 0;
   out_5094183247678276312[225] = 0;
   out_5094183247678276312[226] = 0;
   out_5094183247678276312[227] = 0;
   out_5094183247678276312[228] = 0;
   out_5094183247678276312[229] = 0;
   out_5094183247678276312[230] = 0;
   out_5094183247678276312[231] = 0;
   out_5094183247678276312[232] = 0;
   out_5094183247678276312[233] = 0;
   out_5094183247678276312[234] = 0;
   out_5094183247678276312[235] = 0;
   out_5094183247678276312[236] = 0;
   out_5094183247678276312[237] = 0;
   out_5094183247678276312[238] = 0;
   out_5094183247678276312[239] = 0;
   out_5094183247678276312[240] = 0;
   out_5094183247678276312[241] = 1.0;
   out_5094183247678276312[242] = 0;
   out_5094183247678276312[243] = 0;
   out_5094183247678276312[244] = 0;
   out_5094183247678276312[245] = 0;
   out_5094183247678276312[246] = 0;
   out_5094183247678276312[247] = 0;
   out_5094183247678276312[248] = 0;
   out_5094183247678276312[249] = 0;
   out_5094183247678276312[250] = 0;
   out_5094183247678276312[251] = 0;
   out_5094183247678276312[252] = 0;
   out_5094183247678276312[253] = 0;
   out_5094183247678276312[254] = 0;
   out_5094183247678276312[255] = 0;
   out_5094183247678276312[256] = 0;
   out_5094183247678276312[257] = 0;
   out_5094183247678276312[258] = 0;
   out_5094183247678276312[259] = 0;
   out_5094183247678276312[260] = 0;
   out_5094183247678276312[261] = 0;
   out_5094183247678276312[262] = 0;
   out_5094183247678276312[263] = 1.0;
   out_5094183247678276312[264] = 0;
   out_5094183247678276312[265] = 0;
   out_5094183247678276312[266] = 0;
   out_5094183247678276312[267] = 0;
   out_5094183247678276312[268] = 0;
   out_5094183247678276312[269] = 0;
   out_5094183247678276312[270] = 0;
   out_5094183247678276312[271] = 0;
   out_5094183247678276312[272] = 0;
   out_5094183247678276312[273] = 0;
   out_5094183247678276312[274] = 0;
   out_5094183247678276312[275] = 0;
   out_5094183247678276312[276] = 0;
   out_5094183247678276312[277] = 0;
   out_5094183247678276312[278] = 0;
   out_5094183247678276312[279] = 0;
   out_5094183247678276312[280] = 0;
   out_5094183247678276312[281] = 0;
   out_5094183247678276312[282] = 0;
   out_5094183247678276312[283] = 0;
   out_5094183247678276312[284] = 0;
   out_5094183247678276312[285] = 1.0;
   out_5094183247678276312[286] = 0;
   out_5094183247678276312[287] = 0;
   out_5094183247678276312[288] = 0;
   out_5094183247678276312[289] = 0;
   out_5094183247678276312[290] = 0;
   out_5094183247678276312[291] = 0;
   out_5094183247678276312[292] = 0;
   out_5094183247678276312[293] = 0;
   out_5094183247678276312[294] = 0;
   out_5094183247678276312[295] = 0;
   out_5094183247678276312[296] = 0;
   out_5094183247678276312[297] = 0;
   out_5094183247678276312[298] = 0;
   out_5094183247678276312[299] = 0;
   out_5094183247678276312[300] = 0;
   out_5094183247678276312[301] = 0;
   out_5094183247678276312[302] = 0;
   out_5094183247678276312[303] = 0;
   out_5094183247678276312[304] = 0;
   out_5094183247678276312[305] = 0;
   out_5094183247678276312[306] = 0;
   out_5094183247678276312[307] = 1.0;
   out_5094183247678276312[308] = 0;
   out_5094183247678276312[309] = 0;
   out_5094183247678276312[310] = 0;
   out_5094183247678276312[311] = 0;
   out_5094183247678276312[312] = 0;
   out_5094183247678276312[313] = 0;
   out_5094183247678276312[314] = 0;
   out_5094183247678276312[315] = 0;
   out_5094183247678276312[316] = 0;
   out_5094183247678276312[317] = 0;
   out_5094183247678276312[318] = 0;
   out_5094183247678276312[319] = 0;
   out_5094183247678276312[320] = 0;
   out_5094183247678276312[321] = 0;
   out_5094183247678276312[322] = 0;
   out_5094183247678276312[323] = 0;
   out_5094183247678276312[324] = 0;
   out_5094183247678276312[325] = 0;
   out_5094183247678276312[326] = 0;
   out_5094183247678276312[327] = 0;
   out_5094183247678276312[328] = 0;
   out_5094183247678276312[329] = 1.0;
   out_5094183247678276312[330] = 0;
   out_5094183247678276312[331] = 0;
   out_5094183247678276312[332] = 0;
   out_5094183247678276312[333] = 0;
   out_5094183247678276312[334] = 0;
   out_5094183247678276312[335] = 0;
   out_5094183247678276312[336] = 0;
   out_5094183247678276312[337] = 0;
   out_5094183247678276312[338] = 0;
   out_5094183247678276312[339] = 0;
   out_5094183247678276312[340] = 0;
   out_5094183247678276312[341] = 0;
   out_5094183247678276312[342] = 0;
   out_5094183247678276312[343] = 0;
   out_5094183247678276312[344] = 0;
   out_5094183247678276312[345] = 0;
   out_5094183247678276312[346] = 0;
   out_5094183247678276312[347] = 0;
   out_5094183247678276312[348] = 0;
   out_5094183247678276312[349] = 0;
   out_5094183247678276312[350] = 0;
   out_5094183247678276312[351] = 1.0;
   out_5094183247678276312[352] = 0;
   out_5094183247678276312[353] = 0;
   out_5094183247678276312[354] = 0;
   out_5094183247678276312[355] = 0;
   out_5094183247678276312[356] = 0;
   out_5094183247678276312[357] = 0;
   out_5094183247678276312[358] = 0;
   out_5094183247678276312[359] = 0;
   out_5094183247678276312[360] = 0;
   out_5094183247678276312[361] = 0;
   out_5094183247678276312[362] = 0;
   out_5094183247678276312[363] = 0;
   out_5094183247678276312[364] = 0;
   out_5094183247678276312[365] = 0;
   out_5094183247678276312[366] = 0;
   out_5094183247678276312[367] = 0;
   out_5094183247678276312[368] = 0;
   out_5094183247678276312[369] = 0;
   out_5094183247678276312[370] = 0;
   out_5094183247678276312[371] = 0;
   out_5094183247678276312[372] = 0;
   out_5094183247678276312[373] = 1.0;
   out_5094183247678276312[374] = 0;
   out_5094183247678276312[375] = 0;
   out_5094183247678276312[376] = 0;
   out_5094183247678276312[377] = 0;
   out_5094183247678276312[378] = 0;
   out_5094183247678276312[379] = 0;
   out_5094183247678276312[380] = 0;
   out_5094183247678276312[381] = 0;
   out_5094183247678276312[382] = 0;
   out_5094183247678276312[383] = 0;
   out_5094183247678276312[384] = 0;
   out_5094183247678276312[385] = 0;
   out_5094183247678276312[386] = 0;
   out_5094183247678276312[387] = 0;
   out_5094183247678276312[388] = 0;
   out_5094183247678276312[389] = 0;
   out_5094183247678276312[390] = 0;
   out_5094183247678276312[391] = 0;
   out_5094183247678276312[392] = 0;
   out_5094183247678276312[393] = 0;
   out_5094183247678276312[394] = 0;
   out_5094183247678276312[395] = 1.0;
   out_5094183247678276312[396] = 0;
   out_5094183247678276312[397] = 0;
   out_5094183247678276312[398] = 0;
   out_5094183247678276312[399] = 0;
   out_5094183247678276312[400] = 0;
   out_5094183247678276312[401] = 0;
   out_5094183247678276312[402] = 0;
   out_5094183247678276312[403] = 0;
   out_5094183247678276312[404] = 0;
   out_5094183247678276312[405] = 0;
   out_5094183247678276312[406] = 0;
   out_5094183247678276312[407] = 0;
   out_5094183247678276312[408] = 0;
   out_5094183247678276312[409] = 0;
   out_5094183247678276312[410] = 0;
   out_5094183247678276312[411] = 0;
   out_5094183247678276312[412] = 0;
   out_5094183247678276312[413] = 0;
   out_5094183247678276312[414] = 0;
   out_5094183247678276312[415] = 0;
   out_5094183247678276312[416] = 0;
   out_5094183247678276312[417] = 1.0;
   out_5094183247678276312[418] = 0;
   out_5094183247678276312[419] = 0;
   out_5094183247678276312[420] = 0;
   out_5094183247678276312[421] = 0;
   out_5094183247678276312[422] = 0;
   out_5094183247678276312[423] = 0;
   out_5094183247678276312[424] = 0;
   out_5094183247678276312[425] = 0;
   out_5094183247678276312[426] = 0;
   out_5094183247678276312[427] = 0;
   out_5094183247678276312[428] = 0;
   out_5094183247678276312[429] = 0;
   out_5094183247678276312[430] = 0;
   out_5094183247678276312[431] = 0;
   out_5094183247678276312[432] = 0;
   out_5094183247678276312[433] = 0;
   out_5094183247678276312[434] = 0;
   out_5094183247678276312[435] = 0;
   out_5094183247678276312[436] = 0;
   out_5094183247678276312[437] = 0;
   out_5094183247678276312[438] = 0;
   out_5094183247678276312[439] = 1.0;
   out_5094183247678276312[440] = 0;
   out_5094183247678276312[441] = 0;
   out_5094183247678276312[442] = 0;
   out_5094183247678276312[443] = 0;
   out_5094183247678276312[444] = 0;
   out_5094183247678276312[445] = 0;
   out_5094183247678276312[446] = 0;
   out_5094183247678276312[447] = 0;
   out_5094183247678276312[448] = 0;
   out_5094183247678276312[449] = 0;
   out_5094183247678276312[450] = 0;
   out_5094183247678276312[451] = 0;
   out_5094183247678276312[452] = 0;
   out_5094183247678276312[453] = 0;
   out_5094183247678276312[454] = 0;
   out_5094183247678276312[455] = 0;
   out_5094183247678276312[456] = 0;
   out_5094183247678276312[457] = 0;
   out_5094183247678276312[458] = 0;
   out_5094183247678276312[459] = 0;
   out_5094183247678276312[460] = 0;
   out_5094183247678276312[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1900829864058528240) {
   out_1900829864058528240[0] = dt*state[7] + state[0];
   out_1900829864058528240[1] = dt*state[8] + state[1];
   out_1900829864058528240[2] = dt*state[9] + state[2];
   out_1900829864058528240[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1900829864058528240[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1900829864058528240[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1900829864058528240[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1900829864058528240[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1900829864058528240[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1900829864058528240[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1900829864058528240[10] = state[10];
   out_1900829864058528240[11] = state[11];
   out_1900829864058528240[12] = state[12];
   out_1900829864058528240[13] = state[13];
   out_1900829864058528240[14] = state[14];
   out_1900829864058528240[15] = state[15];
   out_1900829864058528240[16] = state[16];
   out_1900829864058528240[17] = state[17];
   out_1900829864058528240[18] = state[18];
   out_1900829864058528240[19] = state[19];
   out_1900829864058528240[20] = state[20];
   out_1900829864058528240[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3644154628780867195) {
   out_3644154628780867195[0] = 1;
   out_3644154628780867195[1] = 0;
   out_3644154628780867195[2] = 0;
   out_3644154628780867195[3] = 0;
   out_3644154628780867195[4] = 0;
   out_3644154628780867195[5] = 0;
   out_3644154628780867195[6] = dt;
   out_3644154628780867195[7] = 0;
   out_3644154628780867195[8] = 0;
   out_3644154628780867195[9] = 0;
   out_3644154628780867195[10] = 0;
   out_3644154628780867195[11] = 0;
   out_3644154628780867195[12] = 0;
   out_3644154628780867195[13] = 0;
   out_3644154628780867195[14] = 0;
   out_3644154628780867195[15] = 0;
   out_3644154628780867195[16] = 0;
   out_3644154628780867195[17] = 0;
   out_3644154628780867195[18] = 0;
   out_3644154628780867195[19] = 0;
   out_3644154628780867195[20] = 0;
   out_3644154628780867195[21] = 0;
   out_3644154628780867195[22] = 1;
   out_3644154628780867195[23] = 0;
   out_3644154628780867195[24] = 0;
   out_3644154628780867195[25] = 0;
   out_3644154628780867195[26] = 0;
   out_3644154628780867195[27] = 0;
   out_3644154628780867195[28] = dt;
   out_3644154628780867195[29] = 0;
   out_3644154628780867195[30] = 0;
   out_3644154628780867195[31] = 0;
   out_3644154628780867195[32] = 0;
   out_3644154628780867195[33] = 0;
   out_3644154628780867195[34] = 0;
   out_3644154628780867195[35] = 0;
   out_3644154628780867195[36] = 0;
   out_3644154628780867195[37] = 0;
   out_3644154628780867195[38] = 0;
   out_3644154628780867195[39] = 0;
   out_3644154628780867195[40] = 0;
   out_3644154628780867195[41] = 0;
   out_3644154628780867195[42] = 0;
   out_3644154628780867195[43] = 0;
   out_3644154628780867195[44] = 1;
   out_3644154628780867195[45] = 0;
   out_3644154628780867195[46] = 0;
   out_3644154628780867195[47] = 0;
   out_3644154628780867195[48] = 0;
   out_3644154628780867195[49] = 0;
   out_3644154628780867195[50] = dt;
   out_3644154628780867195[51] = 0;
   out_3644154628780867195[52] = 0;
   out_3644154628780867195[53] = 0;
   out_3644154628780867195[54] = 0;
   out_3644154628780867195[55] = 0;
   out_3644154628780867195[56] = 0;
   out_3644154628780867195[57] = 0;
   out_3644154628780867195[58] = 0;
   out_3644154628780867195[59] = 0;
   out_3644154628780867195[60] = 0;
   out_3644154628780867195[61] = 0;
   out_3644154628780867195[62] = 0;
   out_3644154628780867195[63] = 0;
   out_3644154628780867195[64] = 0;
   out_3644154628780867195[65] = 0;
   out_3644154628780867195[66] = 1;
   out_3644154628780867195[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3644154628780867195[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3644154628780867195[69] = 0;
   out_3644154628780867195[70] = 0;
   out_3644154628780867195[71] = 0;
   out_3644154628780867195[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3644154628780867195[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3644154628780867195[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3644154628780867195[75] = 0;
   out_3644154628780867195[76] = 0;
   out_3644154628780867195[77] = 0;
   out_3644154628780867195[78] = 0;
   out_3644154628780867195[79] = 0;
   out_3644154628780867195[80] = 0;
   out_3644154628780867195[81] = 0;
   out_3644154628780867195[82] = 0;
   out_3644154628780867195[83] = 0;
   out_3644154628780867195[84] = 0;
   out_3644154628780867195[85] = 0;
   out_3644154628780867195[86] = 0;
   out_3644154628780867195[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3644154628780867195[88] = 1;
   out_3644154628780867195[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3644154628780867195[90] = 0;
   out_3644154628780867195[91] = 0;
   out_3644154628780867195[92] = 0;
   out_3644154628780867195[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3644154628780867195[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3644154628780867195[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3644154628780867195[96] = 0;
   out_3644154628780867195[97] = 0;
   out_3644154628780867195[98] = 0;
   out_3644154628780867195[99] = 0;
   out_3644154628780867195[100] = 0;
   out_3644154628780867195[101] = 0;
   out_3644154628780867195[102] = 0;
   out_3644154628780867195[103] = 0;
   out_3644154628780867195[104] = 0;
   out_3644154628780867195[105] = 0;
   out_3644154628780867195[106] = 0;
   out_3644154628780867195[107] = 0;
   out_3644154628780867195[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3644154628780867195[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3644154628780867195[110] = 1;
   out_3644154628780867195[111] = 0;
   out_3644154628780867195[112] = 0;
   out_3644154628780867195[113] = 0;
   out_3644154628780867195[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3644154628780867195[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3644154628780867195[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3644154628780867195[117] = 0;
   out_3644154628780867195[118] = 0;
   out_3644154628780867195[119] = 0;
   out_3644154628780867195[120] = 0;
   out_3644154628780867195[121] = 0;
   out_3644154628780867195[122] = 0;
   out_3644154628780867195[123] = 0;
   out_3644154628780867195[124] = 0;
   out_3644154628780867195[125] = 0;
   out_3644154628780867195[126] = 0;
   out_3644154628780867195[127] = 0;
   out_3644154628780867195[128] = 0;
   out_3644154628780867195[129] = 0;
   out_3644154628780867195[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3644154628780867195[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3644154628780867195[132] = 1;
   out_3644154628780867195[133] = 0;
   out_3644154628780867195[134] = 0;
   out_3644154628780867195[135] = 0;
   out_3644154628780867195[136] = 0;
   out_3644154628780867195[137] = 0;
   out_3644154628780867195[138] = 0;
   out_3644154628780867195[139] = 0;
   out_3644154628780867195[140] = 0;
   out_3644154628780867195[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3644154628780867195[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3644154628780867195[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3644154628780867195[144] = 0;
   out_3644154628780867195[145] = 0;
   out_3644154628780867195[146] = 0;
   out_3644154628780867195[147] = 0;
   out_3644154628780867195[148] = 0;
   out_3644154628780867195[149] = 0;
   out_3644154628780867195[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3644154628780867195[151] = 0;
   out_3644154628780867195[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3644154628780867195[153] = 0;
   out_3644154628780867195[154] = 1;
   out_3644154628780867195[155] = 0;
   out_3644154628780867195[156] = 0;
   out_3644154628780867195[157] = 0;
   out_3644154628780867195[158] = 0;
   out_3644154628780867195[159] = 0;
   out_3644154628780867195[160] = 0;
   out_3644154628780867195[161] = 0;
   out_3644154628780867195[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3644154628780867195[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3644154628780867195[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3644154628780867195[165] = 0;
   out_3644154628780867195[166] = 0;
   out_3644154628780867195[167] = 0;
   out_3644154628780867195[168] = 0;
   out_3644154628780867195[169] = 0;
   out_3644154628780867195[170] = 0;
   out_3644154628780867195[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3644154628780867195[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3644154628780867195[173] = 0;
   out_3644154628780867195[174] = 0;
   out_3644154628780867195[175] = 0;
   out_3644154628780867195[176] = 1;
   out_3644154628780867195[177] = 0;
   out_3644154628780867195[178] = 0;
   out_3644154628780867195[179] = 0;
   out_3644154628780867195[180] = 0;
   out_3644154628780867195[181] = 0;
   out_3644154628780867195[182] = 0;
   out_3644154628780867195[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3644154628780867195[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3644154628780867195[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3644154628780867195[186] = 0;
   out_3644154628780867195[187] = 0;
   out_3644154628780867195[188] = 0;
   out_3644154628780867195[189] = 0;
   out_3644154628780867195[190] = 0;
   out_3644154628780867195[191] = 0;
   out_3644154628780867195[192] = 0;
   out_3644154628780867195[193] = 0;
   out_3644154628780867195[194] = 0;
   out_3644154628780867195[195] = 0;
   out_3644154628780867195[196] = 0;
   out_3644154628780867195[197] = 0;
   out_3644154628780867195[198] = 1;
   out_3644154628780867195[199] = 0;
   out_3644154628780867195[200] = 0;
   out_3644154628780867195[201] = 0;
   out_3644154628780867195[202] = 0;
   out_3644154628780867195[203] = 0;
   out_3644154628780867195[204] = 0;
   out_3644154628780867195[205] = 0;
   out_3644154628780867195[206] = 0;
   out_3644154628780867195[207] = 0;
   out_3644154628780867195[208] = 0;
   out_3644154628780867195[209] = 0;
   out_3644154628780867195[210] = 0;
   out_3644154628780867195[211] = 0;
   out_3644154628780867195[212] = 0;
   out_3644154628780867195[213] = 0;
   out_3644154628780867195[214] = 0;
   out_3644154628780867195[215] = 0;
   out_3644154628780867195[216] = 0;
   out_3644154628780867195[217] = 0;
   out_3644154628780867195[218] = 0;
   out_3644154628780867195[219] = 0;
   out_3644154628780867195[220] = 1;
   out_3644154628780867195[221] = 0;
   out_3644154628780867195[222] = 0;
   out_3644154628780867195[223] = 0;
   out_3644154628780867195[224] = 0;
   out_3644154628780867195[225] = 0;
   out_3644154628780867195[226] = 0;
   out_3644154628780867195[227] = 0;
   out_3644154628780867195[228] = 0;
   out_3644154628780867195[229] = 0;
   out_3644154628780867195[230] = 0;
   out_3644154628780867195[231] = 0;
   out_3644154628780867195[232] = 0;
   out_3644154628780867195[233] = 0;
   out_3644154628780867195[234] = 0;
   out_3644154628780867195[235] = 0;
   out_3644154628780867195[236] = 0;
   out_3644154628780867195[237] = 0;
   out_3644154628780867195[238] = 0;
   out_3644154628780867195[239] = 0;
   out_3644154628780867195[240] = 0;
   out_3644154628780867195[241] = 0;
   out_3644154628780867195[242] = 1;
   out_3644154628780867195[243] = 0;
   out_3644154628780867195[244] = 0;
   out_3644154628780867195[245] = 0;
   out_3644154628780867195[246] = 0;
   out_3644154628780867195[247] = 0;
   out_3644154628780867195[248] = 0;
   out_3644154628780867195[249] = 0;
   out_3644154628780867195[250] = 0;
   out_3644154628780867195[251] = 0;
   out_3644154628780867195[252] = 0;
   out_3644154628780867195[253] = 0;
   out_3644154628780867195[254] = 0;
   out_3644154628780867195[255] = 0;
   out_3644154628780867195[256] = 0;
   out_3644154628780867195[257] = 0;
   out_3644154628780867195[258] = 0;
   out_3644154628780867195[259] = 0;
   out_3644154628780867195[260] = 0;
   out_3644154628780867195[261] = 0;
   out_3644154628780867195[262] = 0;
   out_3644154628780867195[263] = 0;
   out_3644154628780867195[264] = 1;
   out_3644154628780867195[265] = 0;
   out_3644154628780867195[266] = 0;
   out_3644154628780867195[267] = 0;
   out_3644154628780867195[268] = 0;
   out_3644154628780867195[269] = 0;
   out_3644154628780867195[270] = 0;
   out_3644154628780867195[271] = 0;
   out_3644154628780867195[272] = 0;
   out_3644154628780867195[273] = 0;
   out_3644154628780867195[274] = 0;
   out_3644154628780867195[275] = 0;
   out_3644154628780867195[276] = 0;
   out_3644154628780867195[277] = 0;
   out_3644154628780867195[278] = 0;
   out_3644154628780867195[279] = 0;
   out_3644154628780867195[280] = 0;
   out_3644154628780867195[281] = 0;
   out_3644154628780867195[282] = 0;
   out_3644154628780867195[283] = 0;
   out_3644154628780867195[284] = 0;
   out_3644154628780867195[285] = 0;
   out_3644154628780867195[286] = 1;
   out_3644154628780867195[287] = 0;
   out_3644154628780867195[288] = 0;
   out_3644154628780867195[289] = 0;
   out_3644154628780867195[290] = 0;
   out_3644154628780867195[291] = 0;
   out_3644154628780867195[292] = 0;
   out_3644154628780867195[293] = 0;
   out_3644154628780867195[294] = 0;
   out_3644154628780867195[295] = 0;
   out_3644154628780867195[296] = 0;
   out_3644154628780867195[297] = 0;
   out_3644154628780867195[298] = 0;
   out_3644154628780867195[299] = 0;
   out_3644154628780867195[300] = 0;
   out_3644154628780867195[301] = 0;
   out_3644154628780867195[302] = 0;
   out_3644154628780867195[303] = 0;
   out_3644154628780867195[304] = 0;
   out_3644154628780867195[305] = 0;
   out_3644154628780867195[306] = 0;
   out_3644154628780867195[307] = 0;
   out_3644154628780867195[308] = 1;
   out_3644154628780867195[309] = 0;
   out_3644154628780867195[310] = 0;
   out_3644154628780867195[311] = 0;
   out_3644154628780867195[312] = 0;
   out_3644154628780867195[313] = 0;
   out_3644154628780867195[314] = 0;
   out_3644154628780867195[315] = 0;
   out_3644154628780867195[316] = 0;
   out_3644154628780867195[317] = 0;
   out_3644154628780867195[318] = 0;
   out_3644154628780867195[319] = 0;
   out_3644154628780867195[320] = 0;
   out_3644154628780867195[321] = 0;
   out_3644154628780867195[322] = 0;
   out_3644154628780867195[323] = 0;
   out_3644154628780867195[324] = 0;
   out_3644154628780867195[325] = 0;
   out_3644154628780867195[326] = 0;
   out_3644154628780867195[327] = 0;
   out_3644154628780867195[328] = 0;
   out_3644154628780867195[329] = 0;
   out_3644154628780867195[330] = 1;
   out_3644154628780867195[331] = 0;
   out_3644154628780867195[332] = 0;
   out_3644154628780867195[333] = 0;
   out_3644154628780867195[334] = 0;
   out_3644154628780867195[335] = 0;
   out_3644154628780867195[336] = 0;
   out_3644154628780867195[337] = 0;
   out_3644154628780867195[338] = 0;
   out_3644154628780867195[339] = 0;
   out_3644154628780867195[340] = 0;
   out_3644154628780867195[341] = 0;
   out_3644154628780867195[342] = 0;
   out_3644154628780867195[343] = 0;
   out_3644154628780867195[344] = 0;
   out_3644154628780867195[345] = 0;
   out_3644154628780867195[346] = 0;
   out_3644154628780867195[347] = 0;
   out_3644154628780867195[348] = 0;
   out_3644154628780867195[349] = 0;
   out_3644154628780867195[350] = 0;
   out_3644154628780867195[351] = 0;
   out_3644154628780867195[352] = 1;
   out_3644154628780867195[353] = 0;
   out_3644154628780867195[354] = 0;
   out_3644154628780867195[355] = 0;
   out_3644154628780867195[356] = 0;
   out_3644154628780867195[357] = 0;
   out_3644154628780867195[358] = 0;
   out_3644154628780867195[359] = 0;
   out_3644154628780867195[360] = 0;
   out_3644154628780867195[361] = 0;
   out_3644154628780867195[362] = 0;
   out_3644154628780867195[363] = 0;
   out_3644154628780867195[364] = 0;
   out_3644154628780867195[365] = 0;
   out_3644154628780867195[366] = 0;
   out_3644154628780867195[367] = 0;
   out_3644154628780867195[368] = 0;
   out_3644154628780867195[369] = 0;
   out_3644154628780867195[370] = 0;
   out_3644154628780867195[371] = 0;
   out_3644154628780867195[372] = 0;
   out_3644154628780867195[373] = 0;
   out_3644154628780867195[374] = 1;
   out_3644154628780867195[375] = 0;
   out_3644154628780867195[376] = 0;
   out_3644154628780867195[377] = 0;
   out_3644154628780867195[378] = 0;
   out_3644154628780867195[379] = 0;
   out_3644154628780867195[380] = 0;
   out_3644154628780867195[381] = 0;
   out_3644154628780867195[382] = 0;
   out_3644154628780867195[383] = 0;
   out_3644154628780867195[384] = 0;
   out_3644154628780867195[385] = 0;
   out_3644154628780867195[386] = 0;
   out_3644154628780867195[387] = 0;
   out_3644154628780867195[388] = 0;
   out_3644154628780867195[389] = 0;
   out_3644154628780867195[390] = 0;
   out_3644154628780867195[391] = 0;
   out_3644154628780867195[392] = 0;
   out_3644154628780867195[393] = 0;
   out_3644154628780867195[394] = 0;
   out_3644154628780867195[395] = 0;
   out_3644154628780867195[396] = 1;
   out_3644154628780867195[397] = 0;
   out_3644154628780867195[398] = 0;
   out_3644154628780867195[399] = 0;
   out_3644154628780867195[400] = 0;
   out_3644154628780867195[401] = 0;
   out_3644154628780867195[402] = 0;
   out_3644154628780867195[403] = 0;
   out_3644154628780867195[404] = 0;
   out_3644154628780867195[405] = 0;
   out_3644154628780867195[406] = 0;
   out_3644154628780867195[407] = 0;
   out_3644154628780867195[408] = 0;
   out_3644154628780867195[409] = 0;
   out_3644154628780867195[410] = 0;
   out_3644154628780867195[411] = 0;
   out_3644154628780867195[412] = 0;
   out_3644154628780867195[413] = 0;
   out_3644154628780867195[414] = 0;
   out_3644154628780867195[415] = 0;
   out_3644154628780867195[416] = 0;
   out_3644154628780867195[417] = 0;
   out_3644154628780867195[418] = 1;
   out_3644154628780867195[419] = 0;
   out_3644154628780867195[420] = 0;
   out_3644154628780867195[421] = 0;
   out_3644154628780867195[422] = 0;
   out_3644154628780867195[423] = 0;
   out_3644154628780867195[424] = 0;
   out_3644154628780867195[425] = 0;
   out_3644154628780867195[426] = 0;
   out_3644154628780867195[427] = 0;
   out_3644154628780867195[428] = 0;
   out_3644154628780867195[429] = 0;
   out_3644154628780867195[430] = 0;
   out_3644154628780867195[431] = 0;
   out_3644154628780867195[432] = 0;
   out_3644154628780867195[433] = 0;
   out_3644154628780867195[434] = 0;
   out_3644154628780867195[435] = 0;
   out_3644154628780867195[436] = 0;
   out_3644154628780867195[437] = 0;
   out_3644154628780867195[438] = 0;
   out_3644154628780867195[439] = 0;
   out_3644154628780867195[440] = 1;
}
void h_4(double *state, double *unused, double *out_7072665034909624515) {
   out_7072665034909624515[0] = state[10] + state[13];
   out_7072665034909624515[1] = state[11] + state[14];
   out_7072665034909624515[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4741796549636674704) {
   out_4741796549636674704[0] = 0;
   out_4741796549636674704[1] = 0;
   out_4741796549636674704[2] = 0;
   out_4741796549636674704[3] = 0;
   out_4741796549636674704[4] = 0;
   out_4741796549636674704[5] = 0;
   out_4741796549636674704[6] = 0;
   out_4741796549636674704[7] = 0;
   out_4741796549636674704[8] = 0;
   out_4741796549636674704[9] = 0;
   out_4741796549636674704[10] = 1;
   out_4741796549636674704[11] = 0;
   out_4741796549636674704[12] = 0;
   out_4741796549636674704[13] = 1;
   out_4741796549636674704[14] = 0;
   out_4741796549636674704[15] = 0;
   out_4741796549636674704[16] = 0;
   out_4741796549636674704[17] = 0;
   out_4741796549636674704[18] = 0;
   out_4741796549636674704[19] = 0;
   out_4741796549636674704[20] = 0;
   out_4741796549636674704[21] = 0;
   out_4741796549636674704[22] = 0;
   out_4741796549636674704[23] = 0;
   out_4741796549636674704[24] = 0;
   out_4741796549636674704[25] = 0;
   out_4741796549636674704[26] = 0;
   out_4741796549636674704[27] = 0;
   out_4741796549636674704[28] = 0;
   out_4741796549636674704[29] = 0;
   out_4741796549636674704[30] = 0;
   out_4741796549636674704[31] = 0;
   out_4741796549636674704[32] = 0;
   out_4741796549636674704[33] = 1;
   out_4741796549636674704[34] = 0;
   out_4741796549636674704[35] = 0;
   out_4741796549636674704[36] = 1;
   out_4741796549636674704[37] = 0;
   out_4741796549636674704[38] = 0;
   out_4741796549636674704[39] = 0;
   out_4741796549636674704[40] = 0;
   out_4741796549636674704[41] = 0;
   out_4741796549636674704[42] = 0;
   out_4741796549636674704[43] = 0;
   out_4741796549636674704[44] = 0;
   out_4741796549636674704[45] = 0;
   out_4741796549636674704[46] = 0;
   out_4741796549636674704[47] = 0;
   out_4741796549636674704[48] = 0;
   out_4741796549636674704[49] = 0;
   out_4741796549636674704[50] = 0;
   out_4741796549636674704[51] = 0;
   out_4741796549636674704[52] = 0;
   out_4741796549636674704[53] = 0;
   out_4741796549636674704[54] = 0;
   out_4741796549636674704[55] = 0;
   out_4741796549636674704[56] = 1;
   out_4741796549636674704[57] = 0;
   out_4741796549636674704[58] = 0;
   out_4741796549636674704[59] = 1;
   out_4741796549636674704[60] = 0;
   out_4741796549636674704[61] = 0;
   out_4741796549636674704[62] = 0;
   out_4741796549636674704[63] = 0;
   out_4741796549636674704[64] = 0;
   out_4741796549636674704[65] = 0;
}
void h_9(double *state, double *unused, double *out_5823877824687254756) {
   out_5823877824687254756[0] = state[10];
   out_5823877824687254756[1] = state[11];
   out_5823877824687254756[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4982986196266265349) {
   out_4982986196266265349[0] = 0;
   out_4982986196266265349[1] = 0;
   out_4982986196266265349[2] = 0;
   out_4982986196266265349[3] = 0;
   out_4982986196266265349[4] = 0;
   out_4982986196266265349[5] = 0;
   out_4982986196266265349[6] = 0;
   out_4982986196266265349[7] = 0;
   out_4982986196266265349[8] = 0;
   out_4982986196266265349[9] = 0;
   out_4982986196266265349[10] = 1;
   out_4982986196266265349[11] = 0;
   out_4982986196266265349[12] = 0;
   out_4982986196266265349[13] = 0;
   out_4982986196266265349[14] = 0;
   out_4982986196266265349[15] = 0;
   out_4982986196266265349[16] = 0;
   out_4982986196266265349[17] = 0;
   out_4982986196266265349[18] = 0;
   out_4982986196266265349[19] = 0;
   out_4982986196266265349[20] = 0;
   out_4982986196266265349[21] = 0;
   out_4982986196266265349[22] = 0;
   out_4982986196266265349[23] = 0;
   out_4982986196266265349[24] = 0;
   out_4982986196266265349[25] = 0;
   out_4982986196266265349[26] = 0;
   out_4982986196266265349[27] = 0;
   out_4982986196266265349[28] = 0;
   out_4982986196266265349[29] = 0;
   out_4982986196266265349[30] = 0;
   out_4982986196266265349[31] = 0;
   out_4982986196266265349[32] = 0;
   out_4982986196266265349[33] = 1;
   out_4982986196266265349[34] = 0;
   out_4982986196266265349[35] = 0;
   out_4982986196266265349[36] = 0;
   out_4982986196266265349[37] = 0;
   out_4982986196266265349[38] = 0;
   out_4982986196266265349[39] = 0;
   out_4982986196266265349[40] = 0;
   out_4982986196266265349[41] = 0;
   out_4982986196266265349[42] = 0;
   out_4982986196266265349[43] = 0;
   out_4982986196266265349[44] = 0;
   out_4982986196266265349[45] = 0;
   out_4982986196266265349[46] = 0;
   out_4982986196266265349[47] = 0;
   out_4982986196266265349[48] = 0;
   out_4982986196266265349[49] = 0;
   out_4982986196266265349[50] = 0;
   out_4982986196266265349[51] = 0;
   out_4982986196266265349[52] = 0;
   out_4982986196266265349[53] = 0;
   out_4982986196266265349[54] = 0;
   out_4982986196266265349[55] = 0;
   out_4982986196266265349[56] = 1;
   out_4982986196266265349[57] = 0;
   out_4982986196266265349[58] = 0;
   out_4982986196266265349[59] = 0;
   out_4982986196266265349[60] = 0;
   out_4982986196266265349[61] = 0;
   out_4982986196266265349[62] = 0;
   out_4982986196266265349[63] = 0;
   out_4982986196266265349[64] = 0;
   out_4982986196266265349[65] = 0;
}
void h_10(double *state, double *unused, double *out_3210457795255247761) {
   out_3210457795255247761[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3210457795255247761[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3210457795255247761[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6457423153758060774) {
   out_6457423153758060774[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6457423153758060774[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6457423153758060774[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6457423153758060774[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6457423153758060774[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6457423153758060774[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6457423153758060774[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6457423153758060774[7] = 0;
   out_6457423153758060774[8] = 0;
   out_6457423153758060774[9] = 0;
   out_6457423153758060774[10] = 0;
   out_6457423153758060774[11] = 0;
   out_6457423153758060774[12] = 0;
   out_6457423153758060774[13] = 0;
   out_6457423153758060774[14] = 0;
   out_6457423153758060774[15] = 0;
   out_6457423153758060774[16] = 1;
   out_6457423153758060774[17] = 0;
   out_6457423153758060774[18] = 0;
   out_6457423153758060774[19] = 1;
   out_6457423153758060774[20] = 0;
   out_6457423153758060774[21] = 0;
   out_6457423153758060774[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6457423153758060774[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6457423153758060774[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6457423153758060774[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6457423153758060774[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6457423153758060774[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6457423153758060774[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6457423153758060774[29] = 0;
   out_6457423153758060774[30] = 0;
   out_6457423153758060774[31] = 0;
   out_6457423153758060774[32] = 0;
   out_6457423153758060774[33] = 0;
   out_6457423153758060774[34] = 0;
   out_6457423153758060774[35] = 0;
   out_6457423153758060774[36] = 0;
   out_6457423153758060774[37] = 0;
   out_6457423153758060774[38] = 0;
   out_6457423153758060774[39] = 1;
   out_6457423153758060774[40] = 0;
   out_6457423153758060774[41] = 0;
   out_6457423153758060774[42] = 1;
   out_6457423153758060774[43] = 0;
   out_6457423153758060774[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6457423153758060774[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6457423153758060774[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6457423153758060774[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6457423153758060774[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6457423153758060774[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6457423153758060774[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6457423153758060774[51] = 0;
   out_6457423153758060774[52] = 0;
   out_6457423153758060774[53] = 0;
   out_6457423153758060774[54] = 0;
   out_6457423153758060774[55] = 0;
   out_6457423153758060774[56] = 0;
   out_6457423153758060774[57] = 0;
   out_6457423153758060774[58] = 0;
   out_6457423153758060774[59] = 0;
   out_6457423153758060774[60] = 0;
   out_6457423153758060774[61] = 0;
   out_6457423153758060774[62] = 1;
   out_6457423153758060774[63] = 0;
   out_6457423153758060774[64] = 0;
   out_6457423153758060774[65] = 1;
}
void h_12(double *state, double *unused, double *out_999243380165389066) {
   out_999243380165389066[0] = state[0];
   out_999243380165389066[1] = state[1];
   out_999243380165389066[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8685491116040915117) {
   out_8685491116040915117[0] = 1;
   out_8685491116040915117[1] = 0;
   out_8685491116040915117[2] = 0;
   out_8685491116040915117[3] = 0;
   out_8685491116040915117[4] = 0;
   out_8685491116040915117[5] = 0;
   out_8685491116040915117[6] = 0;
   out_8685491116040915117[7] = 0;
   out_8685491116040915117[8] = 0;
   out_8685491116040915117[9] = 0;
   out_8685491116040915117[10] = 0;
   out_8685491116040915117[11] = 0;
   out_8685491116040915117[12] = 0;
   out_8685491116040915117[13] = 0;
   out_8685491116040915117[14] = 0;
   out_8685491116040915117[15] = 0;
   out_8685491116040915117[16] = 0;
   out_8685491116040915117[17] = 0;
   out_8685491116040915117[18] = 0;
   out_8685491116040915117[19] = 0;
   out_8685491116040915117[20] = 0;
   out_8685491116040915117[21] = 0;
   out_8685491116040915117[22] = 0;
   out_8685491116040915117[23] = 1;
   out_8685491116040915117[24] = 0;
   out_8685491116040915117[25] = 0;
   out_8685491116040915117[26] = 0;
   out_8685491116040915117[27] = 0;
   out_8685491116040915117[28] = 0;
   out_8685491116040915117[29] = 0;
   out_8685491116040915117[30] = 0;
   out_8685491116040915117[31] = 0;
   out_8685491116040915117[32] = 0;
   out_8685491116040915117[33] = 0;
   out_8685491116040915117[34] = 0;
   out_8685491116040915117[35] = 0;
   out_8685491116040915117[36] = 0;
   out_8685491116040915117[37] = 0;
   out_8685491116040915117[38] = 0;
   out_8685491116040915117[39] = 0;
   out_8685491116040915117[40] = 0;
   out_8685491116040915117[41] = 0;
   out_8685491116040915117[42] = 0;
   out_8685491116040915117[43] = 0;
   out_8685491116040915117[44] = 0;
   out_8685491116040915117[45] = 0;
   out_8685491116040915117[46] = 1;
   out_8685491116040915117[47] = 0;
   out_8685491116040915117[48] = 0;
   out_8685491116040915117[49] = 0;
   out_8685491116040915117[50] = 0;
   out_8685491116040915117[51] = 0;
   out_8685491116040915117[52] = 0;
   out_8685491116040915117[53] = 0;
   out_8685491116040915117[54] = 0;
   out_8685491116040915117[55] = 0;
   out_8685491116040915117[56] = 0;
   out_8685491116040915117[57] = 0;
   out_8685491116040915117[58] = 0;
   out_8685491116040915117[59] = 0;
   out_8685491116040915117[60] = 0;
   out_8685491116040915117[61] = 0;
   out_8685491116040915117[62] = 0;
   out_8685491116040915117[63] = 0;
   out_8685491116040915117[64] = 0;
   out_8685491116040915117[65] = 0;
}
void h_35(double *state, double *unused, double *out_6872417239258100351) {
   out_6872417239258100351[0] = state[7];
   out_6872417239258100351[1] = state[8];
   out_6872417239258100351[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5939928083715901408) {
   out_5939928083715901408[0] = 0;
   out_5939928083715901408[1] = 0;
   out_5939928083715901408[2] = 0;
   out_5939928083715901408[3] = 0;
   out_5939928083715901408[4] = 0;
   out_5939928083715901408[5] = 0;
   out_5939928083715901408[6] = 0;
   out_5939928083715901408[7] = 1;
   out_5939928083715901408[8] = 0;
   out_5939928083715901408[9] = 0;
   out_5939928083715901408[10] = 0;
   out_5939928083715901408[11] = 0;
   out_5939928083715901408[12] = 0;
   out_5939928083715901408[13] = 0;
   out_5939928083715901408[14] = 0;
   out_5939928083715901408[15] = 0;
   out_5939928083715901408[16] = 0;
   out_5939928083715901408[17] = 0;
   out_5939928083715901408[18] = 0;
   out_5939928083715901408[19] = 0;
   out_5939928083715901408[20] = 0;
   out_5939928083715901408[21] = 0;
   out_5939928083715901408[22] = 0;
   out_5939928083715901408[23] = 0;
   out_5939928083715901408[24] = 0;
   out_5939928083715901408[25] = 0;
   out_5939928083715901408[26] = 0;
   out_5939928083715901408[27] = 0;
   out_5939928083715901408[28] = 0;
   out_5939928083715901408[29] = 0;
   out_5939928083715901408[30] = 1;
   out_5939928083715901408[31] = 0;
   out_5939928083715901408[32] = 0;
   out_5939928083715901408[33] = 0;
   out_5939928083715901408[34] = 0;
   out_5939928083715901408[35] = 0;
   out_5939928083715901408[36] = 0;
   out_5939928083715901408[37] = 0;
   out_5939928083715901408[38] = 0;
   out_5939928083715901408[39] = 0;
   out_5939928083715901408[40] = 0;
   out_5939928083715901408[41] = 0;
   out_5939928083715901408[42] = 0;
   out_5939928083715901408[43] = 0;
   out_5939928083715901408[44] = 0;
   out_5939928083715901408[45] = 0;
   out_5939928083715901408[46] = 0;
   out_5939928083715901408[47] = 0;
   out_5939928083715901408[48] = 0;
   out_5939928083715901408[49] = 0;
   out_5939928083715901408[50] = 0;
   out_5939928083715901408[51] = 0;
   out_5939928083715901408[52] = 0;
   out_5939928083715901408[53] = 1;
   out_5939928083715901408[54] = 0;
   out_5939928083715901408[55] = 0;
   out_5939928083715901408[56] = 0;
   out_5939928083715901408[57] = 0;
   out_5939928083715901408[58] = 0;
   out_5939928083715901408[59] = 0;
   out_5939928083715901408[60] = 0;
   out_5939928083715901408[61] = 0;
   out_5939928083715901408[62] = 0;
   out_5939928083715901408[63] = 0;
   out_5939928083715901408[64] = 0;
   out_5939928083715901408[65] = 0;
}
void h_32(double *state, double *unused, double *out_6069528323998052603) {
   out_6069528323998052603[0] = state[3];
   out_6069528323998052603[1] = state[4];
   out_6069528323998052603[2] = state[5];
   out_6069528323998052603[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3999089746382892607) {
   out_3999089746382892607[0] = 0;
   out_3999089746382892607[1] = 0;
   out_3999089746382892607[2] = 0;
   out_3999089746382892607[3] = 1;
   out_3999089746382892607[4] = 0;
   out_3999089746382892607[5] = 0;
   out_3999089746382892607[6] = 0;
   out_3999089746382892607[7] = 0;
   out_3999089746382892607[8] = 0;
   out_3999089746382892607[9] = 0;
   out_3999089746382892607[10] = 0;
   out_3999089746382892607[11] = 0;
   out_3999089746382892607[12] = 0;
   out_3999089746382892607[13] = 0;
   out_3999089746382892607[14] = 0;
   out_3999089746382892607[15] = 0;
   out_3999089746382892607[16] = 0;
   out_3999089746382892607[17] = 0;
   out_3999089746382892607[18] = 0;
   out_3999089746382892607[19] = 0;
   out_3999089746382892607[20] = 0;
   out_3999089746382892607[21] = 0;
   out_3999089746382892607[22] = 0;
   out_3999089746382892607[23] = 0;
   out_3999089746382892607[24] = 0;
   out_3999089746382892607[25] = 0;
   out_3999089746382892607[26] = 1;
   out_3999089746382892607[27] = 0;
   out_3999089746382892607[28] = 0;
   out_3999089746382892607[29] = 0;
   out_3999089746382892607[30] = 0;
   out_3999089746382892607[31] = 0;
   out_3999089746382892607[32] = 0;
   out_3999089746382892607[33] = 0;
   out_3999089746382892607[34] = 0;
   out_3999089746382892607[35] = 0;
   out_3999089746382892607[36] = 0;
   out_3999089746382892607[37] = 0;
   out_3999089746382892607[38] = 0;
   out_3999089746382892607[39] = 0;
   out_3999089746382892607[40] = 0;
   out_3999089746382892607[41] = 0;
   out_3999089746382892607[42] = 0;
   out_3999089746382892607[43] = 0;
   out_3999089746382892607[44] = 0;
   out_3999089746382892607[45] = 0;
   out_3999089746382892607[46] = 0;
   out_3999089746382892607[47] = 0;
   out_3999089746382892607[48] = 0;
   out_3999089746382892607[49] = 1;
   out_3999089746382892607[50] = 0;
   out_3999089746382892607[51] = 0;
   out_3999089746382892607[52] = 0;
   out_3999089746382892607[53] = 0;
   out_3999089746382892607[54] = 0;
   out_3999089746382892607[55] = 0;
   out_3999089746382892607[56] = 0;
   out_3999089746382892607[57] = 0;
   out_3999089746382892607[58] = 0;
   out_3999089746382892607[59] = 0;
   out_3999089746382892607[60] = 0;
   out_3999089746382892607[61] = 0;
   out_3999089746382892607[62] = 0;
   out_3999089746382892607[63] = 0;
   out_3999089746382892607[64] = 0;
   out_3999089746382892607[65] = 0;
   out_3999089746382892607[66] = 0;
   out_3999089746382892607[67] = 0;
   out_3999089746382892607[68] = 0;
   out_3999089746382892607[69] = 0;
   out_3999089746382892607[70] = 0;
   out_3999089746382892607[71] = 0;
   out_3999089746382892607[72] = 1;
   out_3999089746382892607[73] = 0;
   out_3999089746382892607[74] = 0;
   out_3999089746382892607[75] = 0;
   out_3999089746382892607[76] = 0;
   out_3999089746382892607[77] = 0;
   out_3999089746382892607[78] = 0;
   out_3999089746382892607[79] = 0;
   out_3999089746382892607[80] = 0;
   out_3999089746382892607[81] = 0;
   out_3999089746382892607[82] = 0;
   out_3999089746382892607[83] = 0;
   out_3999089746382892607[84] = 0;
   out_3999089746382892607[85] = 0;
   out_3999089746382892607[86] = 0;
   out_3999089746382892607[87] = 0;
}
void h_13(double *state, double *unused, double *out_5593807323605185206) {
   out_5593807323605185206[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5593807323605185206[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5593807323605185206[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5691826018188565238) {
   out_5691826018188565238[0] = 0;
   out_5691826018188565238[1] = 0;
   out_5691826018188565238[2] = 0;
   out_5691826018188565238[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5691826018188565238[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5691826018188565238[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5691826018188565238[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5691826018188565238[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5691826018188565238[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5691826018188565238[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5691826018188565238[10] = 0;
   out_5691826018188565238[11] = 0;
   out_5691826018188565238[12] = 0;
   out_5691826018188565238[13] = 0;
   out_5691826018188565238[14] = 0;
   out_5691826018188565238[15] = 0;
   out_5691826018188565238[16] = 0;
   out_5691826018188565238[17] = 0;
   out_5691826018188565238[18] = 0;
   out_5691826018188565238[19] = 0;
   out_5691826018188565238[20] = 0;
   out_5691826018188565238[21] = 0;
   out_5691826018188565238[22] = 0;
   out_5691826018188565238[23] = 0;
   out_5691826018188565238[24] = 0;
   out_5691826018188565238[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5691826018188565238[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5691826018188565238[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5691826018188565238[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5691826018188565238[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5691826018188565238[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5691826018188565238[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5691826018188565238[32] = 0;
   out_5691826018188565238[33] = 0;
   out_5691826018188565238[34] = 0;
   out_5691826018188565238[35] = 0;
   out_5691826018188565238[36] = 0;
   out_5691826018188565238[37] = 0;
   out_5691826018188565238[38] = 0;
   out_5691826018188565238[39] = 0;
   out_5691826018188565238[40] = 0;
   out_5691826018188565238[41] = 0;
   out_5691826018188565238[42] = 0;
   out_5691826018188565238[43] = 0;
   out_5691826018188565238[44] = 0;
   out_5691826018188565238[45] = 0;
   out_5691826018188565238[46] = 0;
   out_5691826018188565238[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5691826018188565238[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5691826018188565238[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5691826018188565238[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5691826018188565238[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5691826018188565238[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5691826018188565238[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5691826018188565238[54] = 0;
   out_5691826018188565238[55] = 0;
   out_5691826018188565238[56] = 0;
   out_5691826018188565238[57] = 0;
   out_5691826018188565238[58] = 0;
   out_5691826018188565238[59] = 0;
   out_5691826018188565238[60] = 0;
   out_5691826018188565238[61] = 0;
   out_5691826018188565238[62] = 0;
   out_5691826018188565238[63] = 0;
   out_5691826018188565238[64] = 0;
   out_5691826018188565238[65] = 0;
}
void h_14(double *state, double *unused, double *out_5823877824687254756) {
   out_5823877824687254756[0] = state[10];
   out_5823877824687254756[1] = state[11];
   out_5823877824687254756[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4982986196266265349) {
   out_4982986196266265349[0] = 0;
   out_4982986196266265349[1] = 0;
   out_4982986196266265349[2] = 0;
   out_4982986196266265349[3] = 0;
   out_4982986196266265349[4] = 0;
   out_4982986196266265349[5] = 0;
   out_4982986196266265349[6] = 0;
   out_4982986196266265349[7] = 0;
   out_4982986196266265349[8] = 0;
   out_4982986196266265349[9] = 0;
   out_4982986196266265349[10] = 1;
   out_4982986196266265349[11] = 0;
   out_4982986196266265349[12] = 0;
   out_4982986196266265349[13] = 0;
   out_4982986196266265349[14] = 0;
   out_4982986196266265349[15] = 0;
   out_4982986196266265349[16] = 0;
   out_4982986196266265349[17] = 0;
   out_4982986196266265349[18] = 0;
   out_4982986196266265349[19] = 0;
   out_4982986196266265349[20] = 0;
   out_4982986196266265349[21] = 0;
   out_4982986196266265349[22] = 0;
   out_4982986196266265349[23] = 0;
   out_4982986196266265349[24] = 0;
   out_4982986196266265349[25] = 0;
   out_4982986196266265349[26] = 0;
   out_4982986196266265349[27] = 0;
   out_4982986196266265349[28] = 0;
   out_4982986196266265349[29] = 0;
   out_4982986196266265349[30] = 0;
   out_4982986196266265349[31] = 0;
   out_4982986196266265349[32] = 0;
   out_4982986196266265349[33] = 1;
   out_4982986196266265349[34] = 0;
   out_4982986196266265349[35] = 0;
   out_4982986196266265349[36] = 0;
   out_4982986196266265349[37] = 0;
   out_4982986196266265349[38] = 0;
   out_4982986196266265349[39] = 0;
   out_4982986196266265349[40] = 0;
   out_4982986196266265349[41] = 0;
   out_4982986196266265349[42] = 0;
   out_4982986196266265349[43] = 0;
   out_4982986196266265349[44] = 0;
   out_4982986196266265349[45] = 0;
   out_4982986196266265349[46] = 0;
   out_4982986196266265349[47] = 0;
   out_4982986196266265349[48] = 0;
   out_4982986196266265349[49] = 0;
   out_4982986196266265349[50] = 0;
   out_4982986196266265349[51] = 0;
   out_4982986196266265349[52] = 0;
   out_4982986196266265349[53] = 0;
   out_4982986196266265349[54] = 0;
   out_4982986196266265349[55] = 0;
   out_4982986196266265349[56] = 1;
   out_4982986196266265349[57] = 0;
   out_4982986196266265349[58] = 0;
   out_4982986196266265349[59] = 0;
   out_4982986196266265349[60] = 0;
   out_4982986196266265349[61] = 0;
   out_4982986196266265349[62] = 0;
   out_4982986196266265349[63] = 0;
   out_4982986196266265349[64] = 0;
   out_4982986196266265349[65] = 0;
}
void h_33(double *state, double *unused, double *out_2822426070322703074) {
   out_2822426070322703074[0] = state[16];
   out_2822426070322703074[1] = state[17];
   out_2822426070322703074[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7187728462061411932) {
   out_7187728462061411932[0] = 0;
   out_7187728462061411932[1] = 0;
   out_7187728462061411932[2] = 0;
   out_7187728462061411932[3] = 0;
   out_7187728462061411932[4] = 0;
   out_7187728462061411932[5] = 0;
   out_7187728462061411932[6] = 0;
   out_7187728462061411932[7] = 0;
   out_7187728462061411932[8] = 0;
   out_7187728462061411932[9] = 0;
   out_7187728462061411932[10] = 0;
   out_7187728462061411932[11] = 0;
   out_7187728462061411932[12] = 0;
   out_7187728462061411932[13] = 0;
   out_7187728462061411932[14] = 0;
   out_7187728462061411932[15] = 0;
   out_7187728462061411932[16] = 1;
   out_7187728462061411932[17] = 0;
   out_7187728462061411932[18] = 0;
   out_7187728462061411932[19] = 0;
   out_7187728462061411932[20] = 0;
   out_7187728462061411932[21] = 0;
   out_7187728462061411932[22] = 0;
   out_7187728462061411932[23] = 0;
   out_7187728462061411932[24] = 0;
   out_7187728462061411932[25] = 0;
   out_7187728462061411932[26] = 0;
   out_7187728462061411932[27] = 0;
   out_7187728462061411932[28] = 0;
   out_7187728462061411932[29] = 0;
   out_7187728462061411932[30] = 0;
   out_7187728462061411932[31] = 0;
   out_7187728462061411932[32] = 0;
   out_7187728462061411932[33] = 0;
   out_7187728462061411932[34] = 0;
   out_7187728462061411932[35] = 0;
   out_7187728462061411932[36] = 0;
   out_7187728462061411932[37] = 0;
   out_7187728462061411932[38] = 0;
   out_7187728462061411932[39] = 1;
   out_7187728462061411932[40] = 0;
   out_7187728462061411932[41] = 0;
   out_7187728462061411932[42] = 0;
   out_7187728462061411932[43] = 0;
   out_7187728462061411932[44] = 0;
   out_7187728462061411932[45] = 0;
   out_7187728462061411932[46] = 0;
   out_7187728462061411932[47] = 0;
   out_7187728462061411932[48] = 0;
   out_7187728462061411932[49] = 0;
   out_7187728462061411932[50] = 0;
   out_7187728462061411932[51] = 0;
   out_7187728462061411932[52] = 0;
   out_7187728462061411932[53] = 0;
   out_7187728462061411932[54] = 0;
   out_7187728462061411932[55] = 0;
   out_7187728462061411932[56] = 0;
   out_7187728462061411932[57] = 0;
   out_7187728462061411932[58] = 0;
   out_7187728462061411932[59] = 0;
   out_7187728462061411932[60] = 0;
   out_7187728462061411932[61] = 0;
   out_7187728462061411932[62] = 1;
   out_7187728462061411932[63] = 0;
   out_7187728462061411932[64] = 0;
   out_7187728462061411932[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6610048557944625674) {
  H(in_vec, out_6610048557944625674);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7748278816848259557) {
  err_fun(nom_x, delta_x, out_7748278816848259557);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2213082149044762718) {
  inv_err_fun(nom_x, true_x, out_2213082149044762718);
}
void live_H_mod_fun(double *state, double *out_5094183247678276312) {
  H_mod_fun(state, out_5094183247678276312);
}
void live_f_fun(double *state, double dt, double *out_1900829864058528240) {
  f_fun(state,  dt, out_1900829864058528240);
}
void live_F_fun(double *state, double dt, double *out_3644154628780867195) {
  F_fun(state,  dt, out_3644154628780867195);
}
void live_h_4(double *state, double *unused, double *out_7072665034909624515) {
  h_4(state, unused, out_7072665034909624515);
}
void live_H_4(double *state, double *unused, double *out_4741796549636674704) {
  H_4(state, unused, out_4741796549636674704);
}
void live_h_9(double *state, double *unused, double *out_5823877824687254756) {
  h_9(state, unused, out_5823877824687254756);
}
void live_H_9(double *state, double *unused, double *out_4982986196266265349) {
  H_9(state, unused, out_4982986196266265349);
}
void live_h_10(double *state, double *unused, double *out_3210457795255247761) {
  h_10(state, unused, out_3210457795255247761);
}
void live_H_10(double *state, double *unused, double *out_6457423153758060774) {
  H_10(state, unused, out_6457423153758060774);
}
void live_h_12(double *state, double *unused, double *out_999243380165389066) {
  h_12(state, unused, out_999243380165389066);
}
void live_H_12(double *state, double *unused, double *out_8685491116040915117) {
  H_12(state, unused, out_8685491116040915117);
}
void live_h_35(double *state, double *unused, double *out_6872417239258100351) {
  h_35(state, unused, out_6872417239258100351);
}
void live_H_35(double *state, double *unused, double *out_5939928083715901408) {
  H_35(state, unused, out_5939928083715901408);
}
void live_h_32(double *state, double *unused, double *out_6069528323998052603) {
  h_32(state, unused, out_6069528323998052603);
}
void live_H_32(double *state, double *unused, double *out_3999089746382892607) {
  H_32(state, unused, out_3999089746382892607);
}
void live_h_13(double *state, double *unused, double *out_5593807323605185206) {
  h_13(state, unused, out_5593807323605185206);
}
void live_H_13(double *state, double *unused, double *out_5691826018188565238) {
  H_13(state, unused, out_5691826018188565238);
}
void live_h_14(double *state, double *unused, double *out_5823877824687254756) {
  h_14(state, unused, out_5823877824687254756);
}
void live_H_14(double *state, double *unused, double *out_4982986196266265349) {
  H_14(state, unused, out_4982986196266265349);
}
void live_h_33(double *state, double *unused, double *out_2822426070322703074) {
  h_33(state, unused, out_2822426070322703074);
}
void live_H_33(double *state, double *unused, double *out_7187728462061411932) {
  H_33(state, unused, out_7187728462061411932);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
