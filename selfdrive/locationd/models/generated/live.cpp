#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8295645905409934087) {
   out_8295645905409934087[0] = 0;
   out_8295645905409934087[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8295645905409934087[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8295645905409934087[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8295645905409934087[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8295645905409934087[5] = -sin(in_vec[1]);
   out_8295645905409934087[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8295645905409934087[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8295645905409934087[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8295645905409934087[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8295645905409934087[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8295645905409934087[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8295645905409934087[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8295645905409934087[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8295645905409934087[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8295645905409934087[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8295645905409934087[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8295645905409934087[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8619578534154616486) {
   out_8619578534154616486[0] = delta_x[0] + nom_x[0];
   out_8619578534154616486[1] = delta_x[1] + nom_x[1];
   out_8619578534154616486[2] = delta_x[2] + nom_x[2];
   out_8619578534154616486[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8619578534154616486[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8619578534154616486[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8619578534154616486[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8619578534154616486[7] = delta_x[6] + nom_x[7];
   out_8619578534154616486[8] = delta_x[7] + nom_x[8];
   out_8619578534154616486[9] = delta_x[8] + nom_x[9];
   out_8619578534154616486[10] = delta_x[9] + nom_x[10];
   out_8619578534154616486[11] = delta_x[10] + nom_x[11];
   out_8619578534154616486[12] = delta_x[11] + nom_x[12];
   out_8619578534154616486[13] = delta_x[12] + nom_x[13];
   out_8619578534154616486[14] = delta_x[13] + nom_x[14];
   out_8619578534154616486[15] = delta_x[14] + nom_x[15];
   out_8619578534154616486[16] = delta_x[15] + nom_x[16];
   out_8619578534154616486[17] = delta_x[16] + nom_x[17];
   out_8619578534154616486[18] = delta_x[17] + nom_x[18];
   out_8619578534154616486[19] = delta_x[18] + nom_x[19];
   out_8619578534154616486[20] = delta_x[19] + nom_x[20];
   out_8619578534154616486[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3513142964193659494) {
   out_3513142964193659494[0] = -nom_x[0] + true_x[0];
   out_3513142964193659494[1] = -nom_x[1] + true_x[1];
   out_3513142964193659494[2] = -nom_x[2] + true_x[2];
   out_3513142964193659494[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3513142964193659494[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3513142964193659494[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3513142964193659494[6] = -nom_x[7] + true_x[7];
   out_3513142964193659494[7] = -nom_x[8] + true_x[8];
   out_3513142964193659494[8] = -nom_x[9] + true_x[9];
   out_3513142964193659494[9] = -nom_x[10] + true_x[10];
   out_3513142964193659494[10] = -nom_x[11] + true_x[11];
   out_3513142964193659494[11] = -nom_x[12] + true_x[12];
   out_3513142964193659494[12] = -nom_x[13] + true_x[13];
   out_3513142964193659494[13] = -nom_x[14] + true_x[14];
   out_3513142964193659494[14] = -nom_x[15] + true_x[15];
   out_3513142964193659494[15] = -nom_x[16] + true_x[16];
   out_3513142964193659494[16] = -nom_x[17] + true_x[17];
   out_3513142964193659494[17] = -nom_x[18] + true_x[18];
   out_3513142964193659494[18] = -nom_x[19] + true_x[19];
   out_3513142964193659494[19] = -nom_x[20] + true_x[20];
   out_3513142964193659494[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4486130015261313537) {
   out_4486130015261313537[0] = 1.0;
   out_4486130015261313537[1] = 0;
   out_4486130015261313537[2] = 0;
   out_4486130015261313537[3] = 0;
   out_4486130015261313537[4] = 0;
   out_4486130015261313537[5] = 0;
   out_4486130015261313537[6] = 0;
   out_4486130015261313537[7] = 0;
   out_4486130015261313537[8] = 0;
   out_4486130015261313537[9] = 0;
   out_4486130015261313537[10] = 0;
   out_4486130015261313537[11] = 0;
   out_4486130015261313537[12] = 0;
   out_4486130015261313537[13] = 0;
   out_4486130015261313537[14] = 0;
   out_4486130015261313537[15] = 0;
   out_4486130015261313537[16] = 0;
   out_4486130015261313537[17] = 0;
   out_4486130015261313537[18] = 0;
   out_4486130015261313537[19] = 0;
   out_4486130015261313537[20] = 0;
   out_4486130015261313537[21] = 0;
   out_4486130015261313537[22] = 1.0;
   out_4486130015261313537[23] = 0;
   out_4486130015261313537[24] = 0;
   out_4486130015261313537[25] = 0;
   out_4486130015261313537[26] = 0;
   out_4486130015261313537[27] = 0;
   out_4486130015261313537[28] = 0;
   out_4486130015261313537[29] = 0;
   out_4486130015261313537[30] = 0;
   out_4486130015261313537[31] = 0;
   out_4486130015261313537[32] = 0;
   out_4486130015261313537[33] = 0;
   out_4486130015261313537[34] = 0;
   out_4486130015261313537[35] = 0;
   out_4486130015261313537[36] = 0;
   out_4486130015261313537[37] = 0;
   out_4486130015261313537[38] = 0;
   out_4486130015261313537[39] = 0;
   out_4486130015261313537[40] = 0;
   out_4486130015261313537[41] = 0;
   out_4486130015261313537[42] = 0;
   out_4486130015261313537[43] = 0;
   out_4486130015261313537[44] = 1.0;
   out_4486130015261313537[45] = 0;
   out_4486130015261313537[46] = 0;
   out_4486130015261313537[47] = 0;
   out_4486130015261313537[48] = 0;
   out_4486130015261313537[49] = 0;
   out_4486130015261313537[50] = 0;
   out_4486130015261313537[51] = 0;
   out_4486130015261313537[52] = 0;
   out_4486130015261313537[53] = 0;
   out_4486130015261313537[54] = 0;
   out_4486130015261313537[55] = 0;
   out_4486130015261313537[56] = 0;
   out_4486130015261313537[57] = 0;
   out_4486130015261313537[58] = 0;
   out_4486130015261313537[59] = 0;
   out_4486130015261313537[60] = 0;
   out_4486130015261313537[61] = 0;
   out_4486130015261313537[62] = 0;
   out_4486130015261313537[63] = 0;
   out_4486130015261313537[64] = 0;
   out_4486130015261313537[65] = 0;
   out_4486130015261313537[66] = -0.5*state[4];
   out_4486130015261313537[67] = -0.5*state[5];
   out_4486130015261313537[68] = -0.5*state[6];
   out_4486130015261313537[69] = 0;
   out_4486130015261313537[70] = 0;
   out_4486130015261313537[71] = 0;
   out_4486130015261313537[72] = 0;
   out_4486130015261313537[73] = 0;
   out_4486130015261313537[74] = 0;
   out_4486130015261313537[75] = 0;
   out_4486130015261313537[76] = 0;
   out_4486130015261313537[77] = 0;
   out_4486130015261313537[78] = 0;
   out_4486130015261313537[79] = 0;
   out_4486130015261313537[80] = 0;
   out_4486130015261313537[81] = 0;
   out_4486130015261313537[82] = 0;
   out_4486130015261313537[83] = 0;
   out_4486130015261313537[84] = 0;
   out_4486130015261313537[85] = 0;
   out_4486130015261313537[86] = 0;
   out_4486130015261313537[87] = 0.5*state[3];
   out_4486130015261313537[88] = 0.5*state[6];
   out_4486130015261313537[89] = -0.5*state[5];
   out_4486130015261313537[90] = 0;
   out_4486130015261313537[91] = 0;
   out_4486130015261313537[92] = 0;
   out_4486130015261313537[93] = 0;
   out_4486130015261313537[94] = 0;
   out_4486130015261313537[95] = 0;
   out_4486130015261313537[96] = 0;
   out_4486130015261313537[97] = 0;
   out_4486130015261313537[98] = 0;
   out_4486130015261313537[99] = 0;
   out_4486130015261313537[100] = 0;
   out_4486130015261313537[101] = 0;
   out_4486130015261313537[102] = 0;
   out_4486130015261313537[103] = 0;
   out_4486130015261313537[104] = 0;
   out_4486130015261313537[105] = 0;
   out_4486130015261313537[106] = 0;
   out_4486130015261313537[107] = 0;
   out_4486130015261313537[108] = -0.5*state[6];
   out_4486130015261313537[109] = 0.5*state[3];
   out_4486130015261313537[110] = 0.5*state[4];
   out_4486130015261313537[111] = 0;
   out_4486130015261313537[112] = 0;
   out_4486130015261313537[113] = 0;
   out_4486130015261313537[114] = 0;
   out_4486130015261313537[115] = 0;
   out_4486130015261313537[116] = 0;
   out_4486130015261313537[117] = 0;
   out_4486130015261313537[118] = 0;
   out_4486130015261313537[119] = 0;
   out_4486130015261313537[120] = 0;
   out_4486130015261313537[121] = 0;
   out_4486130015261313537[122] = 0;
   out_4486130015261313537[123] = 0;
   out_4486130015261313537[124] = 0;
   out_4486130015261313537[125] = 0;
   out_4486130015261313537[126] = 0;
   out_4486130015261313537[127] = 0;
   out_4486130015261313537[128] = 0;
   out_4486130015261313537[129] = 0.5*state[5];
   out_4486130015261313537[130] = -0.5*state[4];
   out_4486130015261313537[131] = 0.5*state[3];
   out_4486130015261313537[132] = 0;
   out_4486130015261313537[133] = 0;
   out_4486130015261313537[134] = 0;
   out_4486130015261313537[135] = 0;
   out_4486130015261313537[136] = 0;
   out_4486130015261313537[137] = 0;
   out_4486130015261313537[138] = 0;
   out_4486130015261313537[139] = 0;
   out_4486130015261313537[140] = 0;
   out_4486130015261313537[141] = 0;
   out_4486130015261313537[142] = 0;
   out_4486130015261313537[143] = 0;
   out_4486130015261313537[144] = 0;
   out_4486130015261313537[145] = 0;
   out_4486130015261313537[146] = 0;
   out_4486130015261313537[147] = 0;
   out_4486130015261313537[148] = 0;
   out_4486130015261313537[149] = 0;
   out_4486130015261313537[150] = 0;
   out_4486130015261313537[151] = 0;
   out_4486130015261313537[152] = 0;
   out_4486130015261313537[153] = 1.0;
   out_4486130015261313537[154] = 0;
   out_4486130015261313537[155] = 0;
   out_4486130015261313537[156] = 0;
   out_4486130015261313537[157] = 0;
   out_4486130015261313537[158] = 0;
   out_4486130015261313537[159] = 0;
   out_4486130015261313537[160] = 0;
   out_4486130015261313537[161] = 0;
   out_4486130015261313537[162] = 0;
   out_4486130015261313537[163] = 0;
   out_4486130015261313537[164] = 0;
   out_4486130015261313537[165] = 0;
   out_4486130015261313537[166] = 0;
   out_4486130015261313537[167] = 0;
   out_4486130015261313537[168] = 0;
   out_4486130015261313537[169] = 0;
   out_4486130015261313537[170] = 0;
   out_4486130015261313537[171] = 0;
   out_4486130015261313537[172] = 0;
   out_4486130015261313537[173] = 0;
   out_4486130015261313537[174] = 0;
   out_4486130015261313537[175] = 1.0;
   out_4486130015261313537[176] = 0;
   out_4486130015261313537[177] = 0;
   out_4486130015261313537[178] = 0;
   out_4486130015261313537[179] = 0;
   out_4486130015261313537[180] = 0;
   out_4486130015261313537[181] = 0;
   out_4486130015261313537[182] = 0;
   out_4486130015261313537[183] = 0;
   out_4486130015261313537[184] = 0;
   out_4486130015261313537[185] = 0;
   out_4486130015261313537[186] = 0;
   out_4486130015261313537[187] = 0;
   out_4486130015261313537[188] = 0;
   out_4486130015261313537[189] = 0;
   out_4486130015261313537[190] = 0;
   out_4486130015261313537[191] = 0;
   out_4486130015261313537[192] = 0;
   out_4486130015261313537[193] = 0;
   out_4486130015261313537[194] = 0;
   out_4486130015261313537[195] = 0;
   out_4486130015261313537[196] = 0;
   out_4486130015261313537[197] = 1.0;
   out_4486130015261313537[198] = 0;
   out_4486130015261313537[199] = 0;
   out_4486130015261313537[200] = 0;
   out_4486130015261313537[201] = 0;
   out_4486130015261313537[202] = 0;
   out_4486130015261313537[203] = 0;
   out_4486130015261313537[204] = 0;
   out_4486130015261313537[205] = 0;
   out_4486130015261313537[206] = 0;
   out_4486130015261313537[207] = 0;
   out_4486130015261313537[208] = 0;
   out_4486130015261313537[209] = 0;
   out_4486130015261313537[210] = 0;
   out_4486130015261313537[211] = 0;
   out_4486130015261313537[212] = 0;
   out_4486130015261313537[213] = 0;
   out_4486130015261313537[214] = 0;
   out_4486130015261313537[215] = 0;
   out_4486130015261313537[216] = 0;
   out_4486130015261313537[217] = 0;
   out_4486130015261313537[218] = 0;
   out_4486130015261313537[219] = 1.0;
   out_4486130015261313537[220] = 0;
   out_4486130015261313537[221] = 0;
   out_4486130015261313537[222] = 0;
   out_4486130015261313537[223] = 0;
   out_4486130015261313537[224] = 0;
   out_4486130015261313537[225] = 0;
   out_4486130015261313537[226] = 0;
   out_4486130015261313537[227] = 0;
   out_4486130015261313537[228] = 0;
   out_4486130015261313537[229] = 0;
   out_4486130015261313537[230] = 0;
   out_4486130015261313537[231] = 0;
   out_4486130015261313537[232] = 0;
   out_4486130015261313537[233] = 0;
   out_4486130015261313537[234] = 0;
   out_4486130015261313537[235] = 0;
   out_4486130015261313537[236] = 0;
   out_4486130015261313537[237] = 0;
   out_4486130015261313537[238] = 0;
   out_4486130015261313537[239] = 0;
   out_4486130015261313537[240] = 0;
   out_4486130015261313537[241] = 1.0;
   out_4486130015261313537[242] = 0;
   out_4486130015261313537[243] = 0;
   out_4486130015261313537[244] = 0;
   out_4486130015261313537[245] = 0;
   out_4486130015261313537[246] = 0;
   out_4486130015261313537[247] = 0;
   out_4486130015261313537[248] = 0;
   out_4486130015261313537[249] = 0;
   out_4486130015261313537[250] = 0;
   out_4486130015261313537[251] = 0;
   out_4486130015261313537[252] = 0;
   out_4486130015261313537[253] = 0;
   out_4486130015261313537[254] = 0;
   out_4486130015261313537[255] = 0;
   out_4486130015261313537[256] = 0;
   out_4486130015261313537[257] = 0;
   out_4486130015261313537[258] = 0;
   out_4486130015261313537[259] = 0;
   out_4486130015261313537[260] = 0;
   out_4486130015261313537[261] = 0;
   out_4486130015261313537[262] = 0;
   out_4486130015261313537[263] = 1.0;
   out_4486130015261313537[264] = 0;
   out_4486130015261313537[265] = 0;
   out_4486130015261313537[266] = 0;
   out_4486130015261313537[267] = 0;
   out_4486130015261313537[268] = 0;
   out_4486130015261313537[269] = 0;
   out_4486130015261313537[270] = 0;
   out_4486130015261313537[271] = 0;
   out_4486130015261313537[272] = 0;
   out_4486130015261313537[273] = 0;
   out_4486130015261313537[274] = 0;
   out_4486130015261313537[275] = 0;
   out_4486130015261313537[276] = 0;
   out_4486130015261313537[277] = 0;
   out_4486130015261313537[278] = 0;
   out_4486130015261313537[279] = 0;
   out_4486130015261313537[280] = 0;
   out_4486130015261313537[281] = 0;
   out_4486130015261313537[282] = 0;
   out_4486130015261313537[283] = 0;
   out_4486130015261313537[284] = 0;
   out_4486130015261313537[285] = 1.0;
   out_4486130015261313537[286] = 0;
   out_4486130015261313537[287] = 0;
   out_4486130015261313537[288] = 0;
   out_4486130015261313537[289] = 0;
   out_4486130015261313537[290] = 0;
   out_4486130015261313537[291] = 0;
   out_4486130015261313537[292] = 0;
   out_4486130015261313537[293] = 0;
   out_4486130015261313537[294] = 0;
   out_4486130015261313537[295] = 0;
   out_4486130015261313537[296] = 0;
   out_4486130015261313537[297] = 0;
   out_4486130015261313537[298] = 0;
   out_4486130015261313537[299] = 0;
   out_4486130015261313537[300] = 0;
   out_4486130015261313537[301] = 0;
   out_4486130015261313537[302] = 0;
   out_4486130015261313537[303] = 0;
   out_4486130015261313537[304] = 0;
   out_4486130015261313537[305] = 0;
   out_4486130015261313537[306] = 0;
   out_4486130015261313537[307] = 1.0;
   out_4486130015261313537[308] = 0;
   out_4486130015261313537[309] = 0;
   out_4486130015261313537[310] = 0;
   out_4486130015261313537[311] = 0;
   out_4486130015261313537[312] = 0;
   out_4486130015261313537[313] = 0;
   out_4486130015261313537[314] = 0;
   out_4486130015261313537[315] = 0;
   out_4486130015261313537[316] = 0;
   out_4486130015261313537[317] = 0;
   out_4486130015261313537[318] = 0;
   out_4486130015261313537[319] = 0;
   out_4486130015261313537[320] = 0;
   out_4486130015261313537[321] = 0;
   out_4486130015261313537[322] = 0;
   out_4486130015261313537[323] = 0;
   out_4486130015261313537[324] = 0;
   out_4486130015261313537[325] = 0;
   out_4486130015261313537[326] = 0;
   out_4486130015261313537[327] = 0;
   out_4486130015261313537[328] = 0;
   out_4486130015261313537[329] = 1.0;
   out_4486130015261313537[330] = 0;
   out_4486130015261313537[331] = 0;
   out_4486130015261313537[332] = 0;
   out_4486130015261313537[333] = 0;
   out_4486130015261313537[334] = 0;
   out_4486130015261313537[335] = 0;
   out_4486130015261313537[336] = 0;
   out_4486130015261313537[337] = 0;
   out_4486130015261313537[338] = 0;
   out_4486130015261313537[339] = 0;
   out_4486130015261313537[340] = 0;
   out_4486130015261313537[341] = 0;
   out_4486130015261313537[342] = 0;
   out_4486130015261313537[343] = 0;
   out_4486130015261313537[344] = 0;
   out_4486130015261313537[345] = 0;
   out_4486130015261313537[346] = 0;
   out_4486130015261313537[347] = 0;
   out_4486130015261313537[348] = 0;
   out_4486130015261313537[349] = 0;
   out_4486130015261313537[350] = 0;
   out_4486130015261313537[351] = 1.0;
   out_4486130015261313537[352] = 0;
   out_4486130015261313537[353] = 0;
   out_4486130015261313537[354] = 0;
   out_4486130015261313537[355] = 0;
   out_4486130015261313537[356] = 0;
   out_4486130015261313537[357] = 0;
   out_4486130015261313537[358] = 0;
   out_4486130015261313537[359] = 0;
   out_4486130015261313537[360] = 0;
   out_4486130015261313537[361] = 0;
   out_4486130015261313537[362] = 0;
   out_4486130015261313537[363] = 0;
   out_4486130015261313537[364] = 0;
   out_4486130015261313537[365] = 0;
   out_4486130015261313537[366] = 0;
   out_4486130015261313537[367] = 0;
   out_4486130015261313537[368] = 0;
   out_4486130015261313537[369] = 0;
   out_4486130015261313537[370] = 0;
   out_4486130015261313537[371] = 0;
   out_4486130015261313537[372] = 0;
   out_4486130015261313537[373] = 1.0;
   out_4486130015261313537[374] = 0;
   out_4486130015261313537[375] = 0;
   out_4486130015261313537[376] = 0;
   out_4486130015261313537[377] = 0;
   out_4486130015261313537[378] = 0;
   out_4486130015261313537[379] = 0;
   out_4486130015261313537[380] = 0;
   out_4486130015261313537[381] = 0;
   out_4486130015261313537[382] = 0;
   out_4486130015261313537[383] = 0;
   out_4486130015261313537[384] = 0;
   out_4486130015261313537[385] = 0;
   out_4486130015261313537[386] = 0;
   out_4486130015261313537[387] = 0;
   out_4486130015261313537[388] = 0;
   out_4486130015261313537[389] = 0;
   out_4486130015261313537[390] = 0;
   out_4486130015261313537[391] = 0;
   out_4486130015261313537[392] = 0;
   out_4486130015261313537[393] = 0;
   out_4486130015261313537[394] = 0;
   out_4486130015261313537[395] = 1.0;
   out_4486130015261313537[396] = 0;
   out_4486130015261313537[397] = 0;
   out_4486130015261313537[398] = 0;
   out_4486130015261313537[399] = 0;
   out_4486130015261313537[400] = 0;
   out_4486130015261313537[401] = 0;
   out_4486130015261313537[402] = 0;
   out_4486130015261313537[403] = 0;
   out_4486130015261313537[404] = 0;
   out_4486130015261313537[405] = 0;
   out_4486130015261313537[406] = 0;
   out_4486130015261313537[407] = 0;
   out_4486130015261313537[408] = 0;
   out_4486130015261313537[409] = 0;
   out_4486130015261313537[410] = 0;
   out_4486130015261313537[411] = 0;
   out_4486130015261313537[412] = 0;
   out_4486130015261313537[413] = 0;
   out_4486130015261313537[414] = 0;
   out_4486130015261313537[415] = 0;
   out_4486130015261313537[416] = 0;
   out_4486130015261313537[417] = 1.0;
   out_4486130015261313537[418] = 0;
   out_4486130015261313537[419] = 0;
   out_4486130015261313537[420] = 0;
   out_4486130015261313537[421] = 0;
   out_4486130015261313537[422] = 0;
   out_4486130015261313537[423] = 0;
   out_4486130015261313537[424] = 0;
   out_4486130015261313537[425] = 0;
   out_4486130015261313537[426] = 0;
   out_4486130015261313537[427] = 0;
   out_4486130015261313537[428] = 0;
   out_4486130015261313537[429] = 0;
   out_4486130015261313537[430] = 0;
   out_4486130015261313537[431] = 0;
   out_4486130015261313537[432] = 0;
   out_4486130015261313537[433] = 0;
   out_4486130015261313537[434] = 0;
   out_4486130015261313537[435] = 0;
   out_4486130015261313537[436] = 0;
   out_4486130015261313537[437] = 0;
   out_4486130015261313537[438] = 0;
   out_4486130015261313537[439] = 1.0;
   out_4486130015261313537[440] = 0;
   out_4486130015261313537[441] = 0;
   out_4486130015261313537[442] = 0;
   out_4486130015261313537[443] = 0;
   out_4486130015261313537[444] = 0;
   out_4486130015261313537[445] = 0;
   out_4486130015261313537[446] = 0;
   out_4486130015261313537[447] = 0;
   out_4486130015261313537[448] = 0;
   out_4486130015261313537[449] = 0;
   out_4486130015261313537[450] = 0;
   out_4486130015261313537[451] = 0;
   out_4486130015261313537[452] = 0;
   out_4486130015261313537[453] = 0;
   out_4486130015261313537[454] = 0;
   out_4486130015261313537[455] = 0;
   out_4486130015261313537[456] = 0;
   out_4486130015261313537[457] = 0;
   out_4486130015261313537[458] = 0;
   out_4486130015261313537[459] = 0;
   out_4486130015261313537[460] = 0;
   out_4486130015261313537[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1181359135653298229) {
   out_1181359135653298229[0] = dt*state[7] + state[0];
   out_1181359135653298229[1] = dt*state[8] + state[1];
   out_1181359135653298229[2] = dt*state[9] + state[2];
   out_1181359135653298229[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1181359135653298229[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1181359135653298229[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1181359135653298229[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1181359135653298229[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1181359135653298229[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1181359135653298229[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1181359135653298229[10] = state[10];
   out_1181359135653298229[11] = state[11];
   out_1181359135653298229[12] = state[12];
   out_1181359135653298229[13] = state[13];
   out_1181359135653298229[14] = state[14];
   out_1181359135653298229[15] = state[15];
   out_1181359135653298229[16] = state[16];
   out_1181359135653298229[17] = state[17];
   out_1181359135653298229[18] = state[18];
   out_1181359135653298229[19] = state[19];
   out_1181359135653298229[20] = state[20];
   out_1181359135653298229[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5541218906871329770) {
   out_5541218906871329770[0] = 1;
   out_5541218906871329770[1] = 0;
   out_5541218906871329770[2] = 0;
   out_5541218906871329770[3] = 0;
   out_5541218906871329770[4] = 0;
   out_5541218906871329770[5] = 0;
   out_5541218906871329770[6] = dt;
   out_5541218906871329770[7] = 0;
   out_5541218906871329770[8] = 0;
   out_5541218906871329770[9] = 0;
   out_5541218906871329770[10] = 0;
   out_5541218906871329770[11] = 0;
   out_5541218906871329770[12] = 0;
   out_5541218906871329770[13] = 0;
   out_5541218906871329770[14] = 0;
   out_5541218906871329770[15] = 0;
   out_5541218906871329770[16] = 0;
   out_5541218906871329770[17] = 0;
   out_5541218906871329770[18] = 0;
   out_5541218906871329770[19] = 0;
   out_5541218906871329770[20] = 0;
   out_5541218906871329770[21] = 0;
   out_5541218906871329770[22] = 1;
   out_5541218906871329770[23] = 0;
   out_5541218906871329770[24] = 0;
   out_5541218906871329770[25] = 0;
   out_5541218906871329770[26] = 0;
   out_5541218906871329770[27] = 0;
   out_5541218906871329770[28] = dt;
   out_5541218906871329770[29] = 0;
   out_5541218906871329770[30] = 0;
   out_5541218906871329770[31] = 0;
   out_5541218906871329770[32] = 0;
   out_5541218906871329770[33] = 0;
   out_5541218906871329770[34] = 0;
   out_5541218906871329770[35] = 0;
   out_5541218906871329770[36] = 0;
   out_5541218906871329770[37] = 0;
   out_5541218906871329770[38] = 0;
   out_5541218906871329770[39] = 0;
   out_5541218906871329770[40] = 0;
   out_5541218906871329770[41] = 0;
   out_5541218906871329770[42] = 0;
   out_5541218906871329770[43] = 0;
   out_5541218906871329770[44] = 1;
   out_5541218906871329770[45] = 0;
   out_5541218906871329770[46] = 0;
   out_5541218906871329770[47] = 0;
   out_5541218906871329770[48] = 0;
   out_5541218906871329770[49] = 0;
   out_5541218906871329770[50] = dt;
   out_5541218906871329770[51] = 0;
   out_5541218906871329770[52] = 0;
   out_5541218906871329770[53] = 0;
   out_5541218906871329770[54] = 0;
   out_5541218906871329770[55] = 0;
   out_5541218906871329770[56] = 0;
   out_5541218906871329770[57] = 0;
   out_5541218906871329770[58] = 0;
   out_5541218906871329770[59] = 0;
   out_5541218906871329770[60] = 0;
   out_5541218906871329770[61] = 0;
   out_5541218906871329770[62] = 0;
   out_5541218906871329770[63] = 0;
   out_5541218906871329770[64] = 0;
   out_5541218906871329770[65] = 0;
   out_5541218906871329770[66] = 1;
   out_5541218906871329770[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5541218906871329770[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5541218906871329770[69] = 0;
   out_5541218906871329770[70] = 0;
   out_5541218906871329770[71] = 0;
   out_5541218906871329770[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5541218906871329770[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5541218906871329770[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5541218906871329770[75] = 0;
   out_5541218906871329770[76] = 0;
   out_5541218906871329770[77] = 0;
   out_5541218906871329770[78] = 0;
   out_5541218906871329770[79] = 0;
   out_5541218906871329770[80] = 0;
   out_5541218906871329770[81] = 0;
   out_5541218906871329770[82] = 0;
   out_5541218906871329770[83] = 0;
   out_5541218906871329770[84] = 0;
   out_5541218906871329770[85] = 0;
   out_5541218906871329770[86] = 0;
   out_5541218906871329770[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5541218906871329770[88] = 1;
   out_5541218906871329770[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5541218906871329770[90] = 0;
   out_5541218906871329770[91] = 0;
   out_5541218906871329770[92] = 0;
   out_5541218906871329770[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5541218906871329770[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5541218906871329770[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5541218906871329770[96] = 0;
   out_5541218906871329770[97] = 0;
   out_5541218906871329770[98] = 0;
   out_5541218906871329770[99] = 0;
   out_5541218906871329770[100] = 0;
   out_5541218906871329770[101] = 0;
   out_5541218906871329770[102] = 0;
   out_5541218906871329770[103] = 0;
   out_5541218906871329770[104] = 0;
   out_5541218906871329770[105] = 0;
   out_5541218906871329770[106] = 0;
   out_5541218906871329770[107] = 0;
   out_5541218906871329770[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5541218906871329770[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5541218906871329770[110] = 1;
   out_5541218906871329770[111] = 0;
   out_5541218906871329770[112] = 0;
   out_5541218906871329770[113] = 0;
   out_5541218906871329770[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5541218906871329770[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5541218906871329770[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5541218906871329770[117] = 0;
   out_5541218906871329770[118] = 0;
   out_5541218906871329770[119] = 0;
   out_5541218906871329770[120] = 0;
   out_5541218906871329770[121] = 0;
   out_5541218906871329770[122] = 0;
   out_5541218906871329770[123] = 0;
   out_5541218906871329770[124] = 0;
   out_5541218906871329770[125] = 0;
   out_5541218906871329770[126] = 0;
   out_5541218906871329770[127] = 0;
   out_5541218906871329770[128] = 0;
   out_5541218906871329770[129] = 0;
   out_5541218906871329770[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5541218906871329770[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5541218906871329770[132] = 1;
   out_5541218906871329770[133] = 0;
   out_5541218906871329770[134] = 0;
   out_5541218906871329770[135] = 0;
   out_5541218906871329770[136] = 0;
   out_5541218906871329770[137] = 0;
   out_5541218906871329770[138] = 0;
   out_5541218906871329770[139] = 0;
   out_5541218906871329770[140] = 0;
   out_5541218906871329770[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5541218906871329770[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5541218906871329770[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5541218906871329770[144] = 0;
   out_5541218906871329770[145] = 0;
   out_5541218906871329770[146] = 0;
   out_5541218906871329770[147] = 0;
   out_5541218906871329770[148] = 0;
   out_5541218906871329770[149] = 0;
   out_5541218906871329770[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5541218906871329770[151] = 0;
   out_5541218906871329770[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5541218906871329770[153] = 0;
   out_5541218906871329770[154] = 1;
   out_5541218906871329770[155] = 0;
   out_5541218906871329770[156] = 0;
   out_5541218906871329770[157] = 0;
   out_5541218906871329770[158] = 0;
   out_5541218906871329770[159] = 0;
   out_5541218906871329770[160] = 0;
   out_5541218906871329770[161] = 0;
   out_5541218906871329770[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5541218906871329770[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5541218906871329770[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5541218906871329770[165] = 0;
   out_5541218906871329770[166] = 0;
   out_5541218906871329770[167] = 0;
   out_5541218906871329770[168] = 0;
   out_5541218906871329770[169] = 0;
   out_5541218906871329770[170] = 0;
   out_5541218906871329770[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5541218906871329770[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5541218906871329770[173] = 0;
   out_5541218906871329770[174] = 0;
   out_5541218906871329770[175] = 0;
   out_5541218906871329770[176] = 1;
   out_5541218906871329770[177] = 0;
   out_5541218906871329770[178] = 0;
   out_5541218906871329770[179] = 0;
   out_5541218906871329770[180] = 0;
   out_5541218906871329770[181] = 0;
   out_5541218906871329770[182] = 0;
   out_5541218906871329770[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5541218906871329770[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5541218906871329770[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5541218906871329770[186] = 0;
   out_5541218906871329770[187] = 0;
   out_5541218906871329770[188] = 0;
   out_5541218906871329770[189] = 0;
   out_5541218906871329770[190] = 0;
   out_5541218906871329770[191] = 0;
   out_5541218906871329770[192] = 0;
   out_5541218906871329770[193] = 0;
   out_5541218906871329770[194] = 0;
   out_5541218906871329770[195] = 0;
   out_5541218906871329770[196] = 0;
   out_5541218906871329770[197] = 0;
   out_5541218906871329770[198] = 1;
   out_5541218906871329770[199] = 0;
   out_5541218906871329770[200] = 0;
   out_5541218906871329770[201] = 0;
   out_5541218906871329770[202] = 0;
   out_5541218906871329770[203] = 0;
   out_5541218906871329770[204] = 0;
   out_5541218906871329770[205] = 0;
   out_5541218906871329770[206] = 0;
   out_5541218906871329770[207] = 0;
   out_5541218906871329770[208] = 0;
   out_5541218906871329770[209] = 0;
   out_5541218906871329770[210] = 0;
   out_5541218906871329770[211] = 0;
   out_5541218906871329770[212] = 0;
   out_5541218906871329770[213] = 0;
   out_5541218906871329770[214] = 0;
   out_5541218906871329770[215] = 0;
   out_5541218906871329770[216] = 0;
   out_5541218906871329770[217] = 0;
   out_5541218906871329770[218] = 0;
   out_5541218906871329770[219] = 0;
   out_5541218906871329770[220] = 1;
   out_5541218906871329770[221] = 0;
   out_5541218906871329770[222] = 0;
   out_5541218906871329770[223] = 0;
   out_5541218906871329770[224] = 0;
   out_5541218906871329770[225] = 0;
   out_5541218906871329770[226] = 0;
   out_5541218906871329770[227] = 0;
   out_5541218906871329770[228] = 0;
   out_5541218906871329770[229] = 0;
   out_5541218906871329770[230] = 0;
   out_5541218906871329770[231] = 0;
   out_5541218906871329770[232] = 0;
   out_5541218906871329770[233] = 0;
   out_5541218906871329770[234] = 0;
   out_5541218906871329770[235] = 0;
   out_5541218906871329770[236] = 0;
   out_5541218906871329770[237] = 0;
   out_5541218906871329770[238] = 0;
   out_5541218906871329770[239] = 0;
   out_5541218906871329770[240] = 0;
   out_5541218906871329770[241] = 0;
   out_5541218906871329770[242] = 1;
   out_5541218906871329770[243] = 0;
   out_5541218906871329770[244] = 0;
   out_5541218906871329770[245] = 0;
   out_5541218906871329770[246] = 0;
   out_5541218906871329770[247] = 0;
   out_5541218906871329770[248] = 0;
   out_5541218906871329770[249] = 0;
   out_5541218906871329770[250] = 0;
   out_5541218906871329770[251] = 0;
   out_5541218906871329770[252] = 0;
   out_5541218906871329770[253] = 0;
   out_5541218906871329770[254] = 0;
   out_5541218906871329770[255] = 0;
   out_5541218906871329770[256] = 0;
   out_5541218906871329770[257] = 0;
   out_5541218906871329770[258] = 0;
   out_5541218906871329770[259] = 0;
   out_5541218906871329770[260] = 0;
   out_5541218906871329770[261] = 0;
   out_5541218906871329770[262] = 0;
   out_5541218906871329770[263] = 0;
   out_5541218906871329770[264] = 1;
   out_5541218906871329770[265] = 0;
   out_5541218906871329770[266] = 0;
   out_5541218906871329770[267] = 0;
   out_5541218906871329770[268] = 0;
   out_5541218906871329770[269] = 0;
   out_5541218906871329770[270] = 0;
   out_5541218906871329770[271] = 0;
   out_5541218906871329770[272] = 0;
   out_5541218906871329770[273] = 0;
   out_5541218906871329770[274] = 0;
   out_5541218906871329770[275] = 0;
   out_5541218906871329770[276] = 0;
   out_5541218906871329770[277] = 0;
   out_5541218906871329770[278] = 0;
   out_5541218906871329770[279] = 0;
   out_5541218906871329770[280] = 0;
   out_5541218906871329770[281] = 0;
   out_5541218906871329770[282] = 0;
   out_5541218906871329770[283] = 0;
   out_5541218906871329770[284] = 0;
   out_5541218906871329770[285] = 0;
   out_5541218906871329770[286] = 1;
   out_5541218906871329770[287] = 0;
   out_5541218906871329770[288] = 0;
   out_5541218906871329770[289] = 0;
   out_5541218906871329770[290] = 0;
   out_5541218906871329770[291] = 0;
   out_5541218906871329770[292] = 0;
   out_5541218906871329770[293] = 0;
   out_5541218906871329770[294] = 0;
   out_5541218906871329770[295] = 0;
   out_5541218906871329770[296] = 0;
   out_5541218906871329770[297] = 0;
   out_5541218906871329770[298] = 0;
   out_5541218906871329770[299] = 0;
   out_5541218906871329770[300] = 0;
   out_5541218906871329770[301] = 0;
   out_5541218906871329770[302] = 0;
   out_5541218906871329770[303] = 0;
   out_5541218906871329770[304] = 0;
   out_5541218906871329770[305] = 0;
   out_5541218906871329770[306] = 0;
   out_5541218906871329770[307] = 0;
   out_5541218906871329770[308] = 1;
   out_5541218906871329770[309] = 0;
   out_5541218906871329770[310] = 0;
   out_5541218906871329770[311] = 0;
   out_5541218906871329770[312] = 0;
   out_5541218906871329770[313] = 0;
   out_5541218906871329770[314] = 0;
   out_5541218906871329770[315] = 0;
   out_5541218906871329770[316] = 0;
   out_5541218906871329770[317] = 0;
   out_5541218906871329770[318] = 0;
   out_5541218906871329770[319] = 0;
   out_5541218906871329770[320] = 0;
   out_5541218906871329770[321] = 0;
   out_5541218906871329770[322] = 0;
   out_5541218906871329770[323] = 0;
   out_5541218906871329770[324] = 0;
   out_5541218906871329770[325] = 0;
   out_5541218906871329770[326] = 0;
   out_5541218906871329770[327] = 0;
   out_5541218906871329770[328] = 0;
   out_5541218906871329770[329] = 0;
   out_5541218906871329770[330] = 1;
   out_5541218906871329770[331] = 0;
   out_5541218906871329770[332] = 0;
   out_5541218906871329770[333] = 0;
   out_5541218906871329770[334] = 0;
   out_5541218906871329770[335] = 0;
   out_5541218906871329770[336] = 0;
   out_5541218906871329770[337] = 0;
   out_5541218906871329770[338] = 0;
   out_5541218906871329770[339] = 0;
   out_5541218906871329770[340] = 0;
   out_5541218906871329770[341] = 0;
   out_5541218906871329770[342] = 0;
   out_5541218906871329770[343] = 0;
   out_5541218906871329770[344] = 0;
   out_5541218906871329770[345] = 0;
   out_5541218906871329770[346] = 0;
   out_5541218906871329770[347] = 0;
   out_5541218906871329770[348] = 0;
   out_5541218906871329770[349] = 0;
   out_5541218906871329770[350] = 0;
   out_5541218906871329770[351] = 0;
   out_5541218906871329770[352] = 1;
   out_5541218906871329770[353] = 0;
   out_5541218906871329770[354] = 0;
   out_5541218906871329770[355] = 0;
   out_5541218906871329770[356] = 0;
   out_5541218906871329770[357] = 0;
   out_5541218906871329770[358] = 0;
   out_5541218906871329770[359] = 0;
   out_5541218906871329770[360] = 0;
   out_5541218906871329770[361] = 0;
   out_5541218906871329770[362] = 0;
   out_5541218906871329770[363] = 0;
   out_5541218906871329770[364] = 0;
   out_5541218906871329770[365] = 0;
   out_5541218906871329770[366] = 0;
   out_5541218906871329770[367] = 0;
   out_5541218906871329770[368] = 0;
   out_5541218906871329770[369] = 0;
   out_5541218906871329770[370] = 0;
   out_5541218906871329770[371] = 0;
   out_5541218906871329770[372] = 0;
   out_5541218906871329770[373] = 0;
   out_5541218906871329770[374] = 1;
   out_5541218906871329770[375] = 0;
   out_5541218906871329770[376] = 0;
   out_5541218906871329770[377] = 0;
   out_5541218906871329770[378] = 0;
   out_5541218906871329770[379] = 0;
   out_5541218906871329770[380] = 0;
   out_5541218906871329770[381] = 0;
   out_5541218906871329770[382] = 0;
   out_5541218906871329770[383] = 0;
   out_5541218906871329770[384] = 0;
   out_5541218906871329770[385] = 0;
   out_5541218906871329770[386] = 0;
   out_5541218906871329770[387] = 0;
   out_5541218906871329770[388] = 0;
   out_5541218906871329770[389] = 0;
   out_5541218906871329770[390] = 0;
   out_5541218906871329770[391] = 0;
   out_5541218906871329770[392] = 0;
   out_5541218906871329770[393] = 0;
   out_5541218906871329770[394] = 0;
   out_5541218906871329770[395] = 0;
   out_5541218906871329770[396] = 1;
   out_5541218906871329770[397] = 0;
   out_5541218906871329770[398] = 0;
   out_5541218906871329770[399] = 0;
   out_5541218906871329770[400] = 0;
   out_5541218906871329770[401] = 0;
   out_5541218906871329770[402] = 0;
   out_5541218906871329770[403] = 0;
   out_5541218906871329770[404] = 0;
   out_5541218906871329770[405] = 0;
   out_5541218906871329770[406] = 0;
   out_5541218906871329770[407] = 0;
   out_5541218906871329770[408] = 0;
   out_5541218906871329770[409] = 0;
   out_5541218906871329770[410] = 0;
   out_5541218906871329770[411] = 0;
   out_5541218906871329770[412] = 0;
   out_5541218906871329770[413] = 0;
   out_5541218906871329770[414] = 0;
   out_5541218906871329770[415] = 0;
   out_5541218906871329770[416] = 0;
   out_5541218906871329770[417] = 0;
   out_5541218906871329770[418] = 1;
   out_5541218906871329770[419] = 0;
   out_5541218906871329770[420] = 0;
   out_5541218906871329770[421] = 0;
   out_5541218906871329770[422] = 0;
   out_5541218906871329770[423] = 0;
   out_5541218906871329770[424] = 0;
   out_5541218906871329770[425] = 0;
   out_5541218906871329770[426] = 0;
   out_5541218906871329770[427] = 0;
   out_5541218906871329770[428] = 0;
   out_5541218906871329770[429] = 0;
   out_5541218906871329770[430] = 0;
   out_5541218906871329770[431] = 0;
   out_5541218906871329770[432] = 0;
   out_5541218906871329770[433] = 0;
   out_5541218906871329770[434] = 0;
   out_5541218906871329770[435] = 0;
   out_5541218906871329770[436] = 0;
   out_5541218906871329770[437] = 0;
   out_5541218906871329770[438] = 0;
   out_5541218906871329770[439] = 0;
   out_5541218906871329770[440] = 1;
}
void h_4(double *state, double *unused, double *out_5193603763907660647) {
   out_5193603763907660647[0] = state[10] + state[13];
   out_5193603763907660647[1] = state[11] + state[14];
   out_5193603763907660647[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4937118780596984391) {
   out_4937118780596984391[0] = 0;
   out_4937118780596984391[1] = 0;
   out_4937118780596984391[2] = 0;
   out_4937118780596984391[3] = 0;
   out_4937118780596984391[4] = 0;
   out_4937118780596984391[5] = 0;
   out_4937118780596984391[6] = 0;
   out_4937118780596984391[7] = 0;
   out_4937118780596984391[8] = 0;
   out_4937118780596984391[9] = 0;
   out_4937118780596984391[10] = 1;
   out_4937118780596984391[11] = 0;
   out_4937118780596984391[12] = 0;
   out_4937118780596984391[13] = 1;
   out_4937118780596984391[14] = 0;
   out_4937118780596984391[15] = 0;
   out_4937118780596984391[16] = 0;
   out_4937118780596984391[17] = 0;
   out_4937118780596984391[18] = 0;
   out_4937118780596984391[19] = 0;
   out_4937118780596984391[20] = 0;
   out_4937118780596984391[21] = 0;
   out_4937118780596984391[22] = 0;
   out_4937118780596984391[23] = 0;
   out_4937118780596984391[24] = 0;
   out_4937118780596984391[25] = 0;
   out_4937118780596984391[26] = 0;
   out_4937118780596984391[27] = 0;
   out_4937118780596984391[28] = 0;
   out_4937118780596984391[29] = 0;
   out_4937118780596984391[30] = 0;
   out_4937118780596984391[31] = 0;
   out_4937118780596984391[32] = 0;
   out_4937118780596984391[33] = 1;
   out_4937118780596984391[34] = 0;
   out_4937118780596984391[35] = 0;
   out_4937118780596984391[36] = 1;
   out_4937118780596984391[37] = 0;
   out_4937118780596984391[38] = 0;
   out_4937118780596984391[39] = 0;
   out_4937118780596984391[40] = 0;
   out_4937118780596984391[41] = 0;
   out_4937118780596984391[42] = 0;
   out_4937118780596984391[43] = 0;
   out_4937118780596984391[44] = 0;
   out_4937118780596984391[45] = 0;
   out_4937118780596984391[46] = 0;
   out_4937118780596984391[47] = 0;
   out_4937118780596984391[48] = 0;
   out_4937118780596984391[49] = 0;
   out_4937118780596984391[50] = 0;
   out_4937118780596984391[51] = 0;
   out_4937118780596984391[52] = 0;
   out_4937118780596984391[53] = 0;
   out_4937118780596984391[54] = 0;
   out_4937118780596984391[55] = 0;
   out_4937118780596984391[56] = 1;
   out_4937118780596984391[57] = 0;
   out_4937118780596984391[58] = 0;
   out_4937118780596984391[59] = 1;
   out_4937118780596984391[60] = 0;
   out_4937118780596984391[61] = 0;
   out_4937118780596984391[62] = 0;
   out_4937118780596984391[63] = 0;
   out_4937118780596984391[64] = 0;
   out_4937118780596984391[65] = 0;
}
void h_9(double *state, double *unused, double *out_3105314858659580175) {
   out_3105314858659580175[0] = state[10];
   out_3105314858659580175[1] = state[11];
   out_3105314858659580175[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5178308427226575036) {
   out_5178308427226575036[0] = 0;
   out_5178308427226575036[1] = 0;
   out_5178308427226575036[2] = 0;
   out_5178308427226575036[3] = 0;
   out_5178308427226575036[4] = 0;
   out_5178308427226575036[5] = 0;
   out_5178308427226575036[6] = 0;
   out_5178308427226575036[7] = 0;
   out_5178308427226575036[8] = 0;
   out_5178308427226575036[9] = 0;
   out_5178308427226575036[10] = 1;
   out_5178308427226575036[11] = 0;
   out_5178308427226575036[12] = 0;
   out_5178308427226575036[13] = 0;
   out_5178308427226575036[14] = 0;
   out_5178308427226575036[15] = 0;
   out_5178308427226575036[16] = 0;
   out_5178308427226575036[17] = 0;
   out_5178308427226575036[18] = 0;
   out_5178308427226575036[19] = 0;
   out_5178308427226575036[20] = 0;
   out_5178308427226575036[21] = 0;
   out_5178308427226575036[22] = 0;
   out_5178308427226575036[23] = 0;
   out_5178308427226575036[24] = 0;
   out_5178308427226575036[25] = 0;
   out_5178308427226575036[26] = 0;
   out_5178308427226575036[27] = 0;
   out_5178308427226575036[28] = 0;
   out_5178308427226575036[29] = 0;
   out_5178308427226575036[30] = 0;
   out_5178308427226575036[31] = 0;
   out_5178308427226575036[32] = 0;
   out_5178308427226575036[33] = 1;
   out_5178308427226575036[34] = 0;
   out_5178308427226575036[35] = 0;
   out_5178308427226575036[36] = 0;
   out_5178308427226575036[37] = 0;
   out_5178308427226575036[38] = 0;
   out_5178308427226575036[39] = 0;
   out_5178308427226575036[40] = 0;
   out_5178308427226575036[41] = 0;
   out_5178308427226575036[42] = 0;
   out_5178308427226575036[43] = 0;
   out_5178308427226575036[44] = 0;
   out_5178308427226575036[45] = 0;
   out_5178308427226575036[46] = 0;
   out_5178308427226575036[47] = 0;
   out_5178308427226575036[48] = 0;
   out_5178308427226575036[49] = 0;
   out_5178308427226575036[50] = 0;
   out_5178308427226575036[51] = 0;
   out_5178308427226575036[52] = 0;
   out_5178308427226575036[53] = 0;
   out_5178308427226575036[54] = 0;
   out_5178308427226575036[55] = 0;
   out_5178308427226575036[56] = 1;
   out_5178308427226575036[57] = 0;
   out_5178308427226575036[58] = 0;
   out_5178308427226575036[59] = 0;
   out_5178308427226575036[60] = 0;
   out_5178308427226575036[61] = 0;
   out_5178308427226575036[62] = 0;
   out_5178308427226575036[63] = 0;
   out_5178308427226575036[64] = 0;
   out_5178308427226575036[65] = 0;
}
void h_10(double *state, double *unused, double *out_2225569820954965318) {
   out_2225569820954965318[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2225569820954965318[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2225569820954965318[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7551586305984993157) {
   out_7551586305984993157[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7551586305984993157[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7551586305984993157[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7551586305984993157[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7551586305984993157[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7551586305984993157[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7551586305984993157[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7551586305984993157[7] = 0;
   out_7551586305984993157[8] = 0;
   out_7551586305984993157[9] = 0;
   out_7551586305984993157[10] = 0;
   out_7551586305984993157[11] = 0;
   out_7551586305984993157[12] = 0;
   out_7551586305984993157[13] = 0;
   out_7551586305984993157[14] = 0;
   out_7551586305984993157[15] = 0;
   out_7551586305984993157[16] = 1;
   out_7551586305984993157[17] = 0;
   out_7551586305984993157[18] = 0;
   out_7551586305984993157[19] = 1;
   out_7551586305984993157[20] = 0;
   out_7551586305984993157[21] = 0;
   out_7551586305984993157[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7551586305984993157[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7551586305984993157[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7551586305984993157[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7551586305984993157[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7551586305984993157[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7551586305984993157[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7551586305984993157[29] = 0;
   out_7551586305984993157[30] = 0;
   out_7551586305984993157[31] = 0;
   out_7551586305984993157[32] = 0;
   out_7551586305984993157[33] = 0;
   out_7551586305984993157[34] = 0;
   out_7551586305984993157[35] = 0;
   out_7551586305984993157[36] = 0;
   out_7551586305984993157[37] = 0;
   out_7551586305984993157[38] = 0;
   out_7551586305984993157[39] = 1;
   out_7551586305984993157[40] = 0;
   out_7551586305984993157[41] = 0;
   out_7551586305984993157[42] = 1;
   out_7551586305984993157[43] = 0;
   out_7551586305984993157[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7551586305984993157[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7551586305984993157[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7551586305984993157[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7551586305984993157[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7551586305984993157[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7551586305984993157[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7551586305984993157[51] = 0;
   out_7551586305984993157[52] = 0;
   out_7551586305984993157[53] = 0;
   out_7551586305984993157[54] = 0;
   out_7551586305984993157[55] = 0;
   out_7551586305984993157[56] = 0;
   out_7551586305984993157[57] = 0;
   out_7551586305984993157[58] = 0;
   out_7551586305984993157[59] = 0;
   out_7551586305984993157[60] = 0;
   out_7551586305984993157[61] = 0;
   out_7551586305984993157[62] = 1;
   out_7551586305984993157[63] = 0;
   out_7551586305984993157[64] = 0;
   out_7551586305984993157[65] = 1;
}
void h_12(double *state, double *unused, double *out_9147171086662171935) {
   out_9147171086662171935[0] = state[0];
   out_9147171086662171935[1] = state[1];
   out_9147171086662171935[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8490168885080605430) {
   out_8490168885080605430[0] = 1;
   out_8490168885080605430[1] = 0;
   out_8490168885080605430[2] = 0;
   out_8490168885080605430[3] = 0;
   out_8490168885080605430[4] = 0;
   out_8490168885080605430[5] = 0;
   out_8490168885080605430[6] = 0;
   out_8490168885080605430[7] = 0;
   out_8490168885080605430[8] = 0;
   out_8490168885080605430[9] = 0;
   out_8490168885080605430[10] = 0;
   out_8490168885080605430[11] = 0;
   out_8490168885080605430[12] = 0;
   out_8490168885080605430[13] = 0;
   out_8490168885080605430[14] = 0;
   out_8490168885080605430[15] = 0;
   out_8490168885080605430[16] = 0;
   out_8490168885080605430[17] = 0;
   out_8490168885080605430[18] = 0;
   out_8490168885080605430[19] = 0;
   out_8490168885080605430[20] = 0;
   out_8490168885080605430[21] = 0;
   out_8490168885080605430[22] = 0;
   out_8490168885080605430[23] = 1;
   out_8490168885080605430[24] = 0;
   out_8490168885080605430[25] = 0;
   out_8490168885080605430[26] = 0;
   out_8490168885080605430[27] = 0;
   out_8490168885080605430[28] = 0;
   out_8490168885080605430[29] = 0;
   out_8490168885080605430[30] = 0;
   out_8490168885080605430[31] = 0;
   out_8490168885080605430[32] = 0;
   out_8490168885080605430[33] = 0;
   out_8490168885080605430[34] = 0;
   out_8490168885080605430[35] = 0;
   out_8490168885080605430[36] = 0;
   out_8490168885080605430[37] = 0;
   out_8490168885080605430[38] = 0;
   out_8490168885080605430[39] = 0;
   out_8490168885080605430[40] = 0;
   out_8490168885080605430[41] = 0;
   out_8490168885080605430[42] = 0;
   out_8490168885080605430[43] = 0;
   out_8490168885080605430[44] = 0;
   out_8490168885080605430[45] = 0;
   out_8490168885080605430[46] = 1;
   out_8490168885080605430[47] = 0;
   out_8490168885080605430[48] = 0;
   out_8490168885080605430[49] = 0;
   out_8490168885080605430[50] = 0;
   out_8490168885080605430[51] = 0;
   out_8490168885080605430[52] = 0;
   out_8490168885080605430[53] = 0;
   out_8490168885080605430[54] = 0;
   out_8490168885080605430[55] = 0;
   out_8490168885080605430[56] = 0;
   out_8490168885080605430[57] = 0;
   out_8490168885080605430[58] = 0;
   out_8490168885080605430[59] = 0;
   out_8490168885080605430[60] = 0;
   out_8490168885080605430[61] = 0;
   out_8490168885080605430[62] = 0;
   out_8490168885080605430[63] = 0;
   out_8490168885080605430[64] = 0;
   out_8490168885080605430[65] = 0;
}
void h_35(double *state, double *unused, double *out_8823103167589140492) {
   out_8823103167589140492[0] = state[7];
   out_8823103167589140492[1] = state[8];
   out_8823103167589140492[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5744605852755591721) {
   out_5744605852755591721[0] = 0;
   out_5744605852755591721[1] = 0;
   out_5744605852755591721[2] = 0;
   out_5744605852755591721[3] = 0;
   out_5744605852755591721[4] = 0;
   out_5744605852755591721[5] = 0;
   out_5744605852755591721[6] = 0;
   out_5744605852755591721[7] = 1;
   out_5744605852755591721[8] = 0;
   out_5744605852755591721[9] = 0;
   out_5744605852755591721[10] = 0;
   out_5744605852755591721[11] = 0;
   out_5744605852755591721[12] = 0;
   out_5744605852755591721[13] = 0;
   out_5744605852755591721[14] = 0;
   out_5744605852755591721[15] = 0;
   out_5744605852755591721[16] = 0;
   out_5744605852755591721[17] = 0;
   out_5744605852755591721[18] = 0;
   out_5744605852755591721[19] = 0;
   out_5744605852755591721[20] = 0;
   out_5744605852755591721[21] = 0;
   out_5744605852755591721[22] = 0;
   out_5744605852755591721[23] = 0;
   out_5744605852755591721[24] = 0;
   out_5744605852755591721[25] = 0;
   out_5744605852755591721[26] = 0;
   out_5744605852755591721[27] = 0;
   out_5744605852755591721[28] = 0;
   out_5744605852755591721[29] = 0;
   out_5744605852755591721[30] = 1;
   out_5744605852755591721[31] = 0;
   out_5744605852755591721[32] = 0;
   out_5744605852755591721[33] = 0;
   out_5744605852755591721[34] = 0;
   out_5744605852755591721[35] = 0;
   out_5744605852755591721[36] = 0;
   out_5744605852755591721[37] = 0;
   out_5744605852755591721[38] = 0;
   out_5744605852755591721[39] = 0;
   out_5744605852755591721[40] = 0;
   out_5744605852755591721[41] = 0;
   out_5744605852755591721[42] = 0;
   out_5744605852755591721[43] = 0;
   out_5744605852755591721[44] = 0;
   out_5744605852755591721[45] = 0;
   out_5744605852755591721[46] = 0;
   out_5744605852755591721[47] = 0;
   out_5744605852755591721[48] = 0;
   out_5744605852755591721[49] = 0;
   out_5744605852755591721[50] = 0;
   out_5744605852755591721[51] = 0;
   out_5744605852755591721[52] = 0;
   out_5744605852755591721[53] = 1;
   out_5744605852755591721[54] = 0;
   out_5744605852755591721[55] = 0;
   out_5744605852755591721[56] = 0;
   out_5744605852755591721[57] = 0;
   out_5744605852755591721[58] = 0;
   out_5744605852755591721[59] = 0;
   out_5744605852755591721[60] = 0;
   out_5744605852755591721[61] = 0;
   out_5744605852755591721[62] = 0;
   out_5744605852755591721[63] = 0;
   out_5744605852755591721[64] = 0;
   out_5744605852755591721[65] = 0;
}
void h_32(double *state, double *unused, double *out_4181631937077063) {
   out_4181631937077063[0] = state[3];
   out_4181631937077063[1] = state[4];
   out_4181631937077063[2] = state[5];
   out_4181631937077063[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4085081600297682697) {
   out_4085081600297682697[0] = 0;
   out_4085081600297682697[1] = 0;
   out_4085081600297682697[2] = 0;
   out_4085081600297682697[3] = 1;
   out_4085081600297682697[4] = 0;
   out_4085081600297682697[5] = 0;
   out_4085081600297682697[6] = 0;
   out_4085081600297682697[7] = 0;
   out_4085081600297682697[8] = 0;
   out_4085081600297682697[9] = 0;
   out_4085081600297682697[10] = 0;
   out_4085081600297682697[11] = 0;
   out_4085081600297682697[12] = 0;
   out_4085081600297682697[13] = 0;
   out_4085081600297682697[14] = 0;
   out_4085081600297682697[15] = 0;
   out_4085081600297682697[16] = 0;
   out_4085081600297682697[17] = 0;
   out_4085081600297682697[18] = 0;
   out_4085081600297682697[19] = 0;
   out_4085081600297682697[20] = 0;
   out_4085081600297682697[21] = 0;
   out_4085081600297682697[22] = 0;
   out_4085081600297682697[23] = 0;
   out_4085081600297682697[24] = 0;
   out_4085081600297682697[25] = 0;
   out_4085081600297682697[26] = 1;
   out_4085081600297682697[27] = 0;
   out_4085081600297682697[28] = 0;
   out_4085081600297682697[29] = 0;
   out_4085081600297682697[30] = 0;
   out_4085081600297682697[31] = 0;
   out_4085081600297682697[32] = 0;
   out_4085081600297682697[33] = 0;
   out_4085081600297682697[34] = 0;
   out_4085081600297682697[35] = 0;
   out_4085081600297682697[36] = 0;
   out_4085081600297682697[37] = 0;
   out_4085081600297682697[38] = 0;
   out_4085081600297682697[39] = 0;
   out_4085081600297682697[40] = 0;
   out_4085081600297682697[41] = 0;
   out_4085081600297682697[42] = 0;
   out_4085081600297682697[43] = 0;
   out_4085081600297682697[44] = 0;
   out_4085081600297682697[45] = 0;
   out_4085081600297682697[46] = 0;
   out_4085081600297682697[47] = 0;
   out_4085081600297682697[48] = 0;
   out_4085081600297682697[49] = 1;
   out_4085081600297682697[50] = 0;
   out_4085081600297682697[51] = 0;
   out_4085081600297682697[52] = 0;
   out_4085081600297682697[53] = 0;
   out_4085081600297682697[54] = 0;
   out_4085081600297682697[55] = 0;
   out_4085081600297682697[56] = 0;
   out_4085081600297682697[57] = 0;
   out_4085081600297682697[58] = 0;
   out_4085081600297682697[59] = 0;
   out_4085081600297682697[60] = 0;
   out_4085081600297682697[61] = 0;
   out_4085081600297682697[62] = 0;
   out_4085081600297682697[63] = 0;
   out_4085081600297682697[64] = 0;
   out_4085081600297682697[65] = 0;
   out_4085081600297682697[66] = 0;
   out_4085081600297682697[67] = 0;
   out_4085081600297682697[68] = 0;
   out_4085081600297682697[69] = 0;
   out_4085081600297682697[70] = 0;
   out_4085081600297682697[71] = 0;
   out_4085081600297682697[72] = 1;
   out_4085081600297682697[73] = 0;
   out_4085081600297682697[74] = 0;
   out_4085081600297682697[75] = 0;
   out_4085081600297682697[76] = 0;
   out_4085081600297682697[77] = 0;
   out_4085081600297682697[78] = 0;
   out_4085081600297682697[79] = 0;
   out_4085081600297682697[80] = 0;
   out_4085081600297682697[81] = 0;
   out_4085081600297682697[82] = 0;
   out_4085081600297682697[83] = 0;
   out_4085081600297682697[84] = 0;
   out_4085081600297682697[85] = 0;
   out_4085081600297682697[86] = 0;
   out_4085081600297682697[87] = 0;
}
void h_13(double *state, double *unused, double *out_7154068656228527500) {
   out_7154068656228527500[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7154068656228527500[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7154068656228527500[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8864001332903443877) {
   out_8864001332903443877[0] = 0;
   out_8864001332903443877[1] = 0;
   out_8864001332903443877[2] = 0;
   out_8864001332903443877[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8864001332903443877[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8864001332903443877[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8864001332903443877[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8864001332903443877[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8864001332903443877[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8864001332903443877[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8864001332903443877[10] = 0;
   out_8864001332903443877[11] = 0;
   out_8864001332903443877[12] = 0;
   out_8864001332903443877[13] = 0;
   out_8864001332903443877[14] = 0;
   out_8864001332903443877[15] = 0;
   out_8864001332903443877[16] = 0;
   out_8864001332903443877[17] = 0;
   out_8864001332903443877[18] = 0;
   out_8864001332903443877[19] = 0;
   out_8864001332903443877[20] = 0;
   out_8864001332903443877[21] = 0;
   out_8864001332903443877[22] = 0;
   out_8864001332903443877[23] = 0;
   out_8864001332903443877[24] = 0;
   out_8864001332903443877[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8864001332903443877[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8864001332903443877[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8864001332903443877[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8864001332903443877[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8864001332903443877[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8864001332903443877[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8864001332903443877[32] = 0;
   out_8864001332903443877[33] = 0;
   out_8864001332903443877[34] = 0;
   out_8864001332903443877[35] = 0;
   out_8864001332903443877[36] = 0;
   out_8864001332903443877[37] = 0;
   out_8864001332903443877[38] = 0;
   out_8864001332903443877[39] = 0;
   out_8864001332903443877[40] = 0;
   out_8864001332903443877[41] = 0;
   out_8864001332903443877[42] = 0;
   out_8864001332903443877[43] = 0;
   out_8864001332903443877[44] = 0;
   out_8864001332903443877[45] = 0;
   out_8864001332903443877[46] = 0;
   out_8864001332903443877[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8864001332903443877[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8864001332903443877[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8864001332903443877[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8864001332903443877[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8864001332903443877[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8864001332903443877[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8864001332903443877[54] = 0;
   out_8864001332903443877[55] = 0;
   out_8864001332903443877[56] = 0;
   out_8864001332903443877[57] = 0;
   out_8864001332903443877[58] = 0;
   out_8864001332903443877[59] = 0;
   out_8864001332903443877[60] = 0;
   out_8864001332903443877[61] = 0;
   out_8864001332903443877[62] = 0;
   out_8864001332903443877[63] = 0;
   out_8864001332903443877[64] = 0;
   out_8864001332903443877[65] = 0;
}
void h_14(double *state, double *unused, double *out_3105314858659580175) {
   out_3105314858659580175[0] = state[10];
   out_3105314858659580175[1] = state[11];
   out_3105314858659580175[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5178308427226575036) {
   out_5178308427226575036[0] = 0;
   out_5178308427226575036[1] = 0;
   out_5178308427226575036[2] = 0;
   out_5178308427226575036[3] = 0;
   out_5178308427226575036[4] = 0;
   out_5178308427226575036[5] = 0;
   out_5178308427226575036[6] = 0;
   out_5178308427226575036[7] = 0;
   out_5178308427226575036[8] = 0;
   out_5178308427226575036[9] = 0;
   out_5178308427226575036[10] = 1;
   out_5178308427226575036[11] = 0;
   out_5178308427226575036[12] = 0;
   out_5178308427226575036[13] = 0;
   out_5178308427226575036[14] = 0;
   out_5178308427226575036[15] = 0;
   out_5178308427226575036[16] = 0;
   out_5178308427226575036[17] = 0;
   out_5178308427226575036[18] = 0;
   out_5178308427226575036[19] = 0;
   out_5178308427226575036[20] = 0;
   out_5178308427226575036[21] = 0;
   out_5178308427226575036[22] = 0;
   out_5178308427226575036[23] = 0;
   out_5178308427226575036[24] = 0;
   out_5178308427226575036[25] = 0;
   out_5178308427226575036[26] = 0;
   out_5178308427226575036[27] = 0;
   out_5178308427226575036[28] = 0;
   out_5178308427226575036[29] = 0;
   out_5178308427226575036[30] = 0;
   out_5178308427226575036[31] = 0;
   out_5178308427226575036[32] = 0;
   out_5178308427226575036[33] = 1;
   out_5178308427226575036[34] = 0;
   out_5178308427226575036[35] = 0;
   out_5178308427226575036[36] = 0;
   out_5178308427226575036[37] = 0;
   out_5178308427226575036[38] = 0;
   out_5178308427226575036[39] = 0;
   out_5178308427226575036[40] = 0;
   out_5178308427226575036[41] = 0;
   out_5178308427226575036[42] = 0;
   out_5178308427226575036[43] = 0;
   out_5178308427226575036[44] = 0;
   out_5178308427226575036[45] = 0;
   out_5178308427226575036[46] = 0;
   out_5178308427226575036[47] = 0;
   out_5178308427226575036[48] = 0;
   out_5178308427226575036[49] = 0;
   out_5178308427226575036[50] = 0;
   out_5178308427226575036[51] = 0;
   out_5178308427226575036[52] = 0;
   out_5178308427226575036[53] = 0;
   out_5178308427226575036[54] = 0;
   out_5178308427226575036[55] = 0;
   out_5178308427226575036[56] = 1;
   out_5178308427226575036[57] = 0;
   out_5178308427226575036[58] = 0;
   out_5178308427226575036[59] = 0;
   out_5178308427226575036[60] = 0;
   out_5178308427226575036[61] = 0;
   out_5178308427226575036[62] = 0;
   out_5178308427226575036[63] = 0;
   out_5178308427226575036[64] = 0;
   out_5178308427226575036[65] = 0;
}
void h_33(double *state, double *unused, double *out_3247796329789380701) {
   out_3247796329789380701[0] = state[16];
   out_3247796329789380701[1] = state[17];
   out_3247796329789380701[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6992406231101102245) {
   out_6992406231101102245[0] = 0;
   out_6992406231101102245[1] = 0;
   out_6992406231101102245[2] = 0;
   out_6992406231101102245[3] = 0;
   out_6992406231101102245[4] = 0;
   out_6992406231101102245[5] = 0;
   out_6992406231101102245[6] = 0;
   out_6992406231101102245[7] = 0;
   out_6992406231101102245[8] = 0;
   out_6992406231101102245[9] = 0;
   out_6992406231101102245[10] = 0;
   out_6992406231101102245[11] = 0;
   out_6992406231101102245[12] = 0;
   out_6992406231101102245[13] = 0;
   out_6992406231101102245[14] = 0;
   out_6992406231101102245[15] = 0;
   out_6992406231101102245[16] = 1;
   out_6992406231101102245[17] = 0;
   out_6992406231101102245[18] = 0;
   out_6992406231101102245[19] = 0;
   out_6992406231101102245[20] = 0;
   out_6992406231101102245[21] = 0;
   out_6992406231101102245[22] = 0;
   out_6992406231101102245[23] = 0;
   out_6992406231101102245[24] = 0;
   out_6992406231101102245[25] = 0;
   out_6992406231101102245[26] = 0;
   out_6992406231101102245[27] = 0;
   out_6992406231101102245[28] = 0;
   out_6992406231101102245[29] = 0;
   out_6992406231101102245[30] = 0;
   out_6992406231101102245[31] = 0;
   out_6992406231101102245[32] = 0;
   out_6992406231101102245[33] = 0;
   out_6992406231101102245[34] = 0;
   out_6992406231101102245[35] = 0;
   out_6992406231101102245[36] = 0;
   out_6992406231101102245[37] = 0;
   out_6992406231101102245[38] = 0;
   out_6992406231101102245[39] = 1;
   out_6992406231101102245[40] = 0;
   out_6992406231101102245[41] = 0;
   out_6992406231101102245[42] = 0;
   out_6992406231101102245[43] = 0;
   out_6992406231101102245[44] = 0;
   out_6992406231101102245[45] = 0;
   out_6992406231101102245[46] = 0;
   out_6992406231101102245[47] = 0;
   out_6992406231101102245[48] = 0;
   out_6992406231101102245[49] = 0;
   out_6992406231101102245[50] = 0;
   out_6992406231101102245[51] = 0;
   out_6992406231101102245[52] = 0;
   out_6992406231101102245[53] = 0;
   out_6992406231101102245[54] = 0;
   out_6992406231101102245[55] = 0;
   out_6992406231101102245[56] = 0;
   out_6992406231101102245[57] = 0;
   out_6992406231101102245[58] = 0;
   out_6992406231101102245[59] = 0;
   out_6992406231101102245[60] = 0;
   out_6992406231101102245[61] = 0;
   out_6992406231101102245[62] = 1;
   out_6992406231101102245[63] = 0;
   out_6992406231101102245[64] = 0;
   out_6992406231101102245[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8295645905409934087) {
  H(in_vec, out_8295645905409934087);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8619578534154616486) {
  err_fun(nom_x, delta_x, out_8619578534154616486);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3513142964193659494) {
  inv_err_fun(nom_x, true_x, out_3513142964193659494);
}
void live_H_mod_fun(double *state, double *out_4486130015261313537) {
  H_mod_fun(state, out_4486130015261313537);
}
void live_f_fun(double *state, double dt, double *out_1181359135653298229) {
  f_fun(state,  dt, out_1181359135653298229);
}
void live_F_fun(double *state, double dt, double *out_5541218906871329770) {
  F_fun(state,  dt, out_5541218906871329770);
}
void live_h_4(double *state, double *unused, double *out_5193603763907660647) {
  h_4(state, unused, out_5193603763907660647);
}
void live_H_4(double *state, double *unused, double *out_4937118780596984391) {
  H_4(state, unused, out_4937118780596984391);
}
void live_h_9(double *state, double *unused, double *out_3105314858659580175) {
  h_9(state, unused, out_3105314858659580175);
}
void live_H_9(double *state, double *unused, double *out_5178308427226575036) {
  H_9(state, unused, out_5178308427226575036);
}
void live_h_10(double *state, double *unused, double *out_2225569820954965318) {
  h_10(state, unused, out_2225569820954965318);
}
void live_H_10(double *state, double *unused, double *out_7551586305984993157) {
  H_10(state, unused, out_7551586305984993157);
}
void live_h_12(double *state, double *unused, double *out_9147171086662171935) {
  h_12(state, unused, out_9147171086662171935);
}
void live_H_12(double *state, double *unused, double *out_8490168885080605430) {
  H_12(state, unused, out_8490168885080605430);
}
void live_h_35(double *state, double *unused, double *out_8823103167589140492) {
  h_35(state, unused, out_8823103167589140492);
}
void live_H_35(double *state, double *unused, double *out_5744605852755591721) {
  H_35(state, unused, out_5744605852755591721);
}
void live_h_32(double *state, double *unused, double *out_4181631937077063) {
  h_32(state, unused, out_4181631937077063);
}
void live_H_32(double *state, double *unused, double *out_4085081600297682697) {
  H_32(state, unused, out_4085081600297682697);
}
void live_h_13(double *state, double *unused, double *out_7154068656228527500) {
  h_13(state, unused, out_7154068656228527500);
}
void live_H_13(double *state, double *unused, double *out_8864001332903443877) {
  H_13(state, unused, out_8864001332903443877);
}
void live_h_14(double *state, double *unused, double *out_3105314858659580175) {
  h_14(state, unused, out_3105314858659580175);
}
void live_H_14(double *state, double *unused, double *out_5178308427226575036) {
  H_14(state, unused, out_5178308427226575036);
}
void live_h_33(double *state, double *unused, double *out_3247796329789380701) {
  h_33(state, unused, out_3247796329789380701);
}
void live_H_33(double *state, double *unused, double *out_6992406231101102245) {
  H_33(state, unused, out_6992406231101102245);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
